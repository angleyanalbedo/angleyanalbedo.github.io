<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Lora对扩散模型微调</title>
    <url>/2024/04/22/Lora%E5%AF%B9%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/</url>
    <content><![CDATA[<h3 id="首先需要知道什么是LORA">首先需要知道什么是LORA</h3>
<p><img src="/2024/04/22/Lora%E5%AF%B9%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/v2-85a4ce99f2b88645a7c1751cbc4691fd_720w.png" alt="img"></p>
<p><strong>LoRA (Low-Rank Adaptation，低秩适配器)</strong> ,这个是使用对于大语言模型的微调</p>
<h3 id="在扩散模型中lora是怎么工作的">在扩散模型中lora是怎么工作的</h3>
<p>在扩散模型中首先我们需要知道的就是lora是作用与<code>Attention</code> 的因为lora的工作原理就是在固定原来的参数然后再加上一些参数然后进行训练公式如同下图所示</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd class="mtr-glue"></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>W</mi><mn>0</mn></msub><mo>+</mo><mi mathvariant="normal">Δ</mi><mi>W</mi><mo>=</mo><msub><mi>W</mi><mn>0</mn></msub><mo>+</mo><mi>B</mi><mi>A</mi><mspace width="2em"><mi>B</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>d</mi><mo>×</mo><mi>r</mi></mrow></msup><mo separator="true">,</mo><mi>A</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>r</mi><mo>×</mo><mi>k</mi></mrow></msup><mspace width="1em"><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"><mi>r</mi><mo>≪</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>d</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo></mspace></mspace></mspace></mrow></mstyle></mtd><mtd class="mtr-glue"></mtd><mtd class="mml-eqn-num"></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{equation} W_{0} + \Delta W = W_{0} + BA \qquad B\in\mathbb R^{d×r},A\in\mathbb R^{r×k} \quad and\quad r\ll min(d,k)  \end{equation}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2591em;vertical-align:-0.3796em;"></span><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8796em;"><span style="top:-2.9804em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≪</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3796em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8796em;"><span style="top:-2.8796em;"><span class="pstrut" style="height:2.8991em;"></span><span class="eqn-num"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3796em;"><span></span></span></span></span></span></span></span></span></p>
<p> W_0$$ 是原来的参数$$\Delta_0 $$就是增加的参数 lora的原理就是将$$\Delta_0$$ 分解成$$BA$$​ ，就如同`SVD`分解

#### LORA应该作用于Transformer的哪个参数矩阵？

![img](Lora对稳定扩散模型微调/v2-34b0e165f473a45f5d69061f8197fb05_720w.png)

- 显然根据上图我们可以看出如果仅通过`Lora`调整`Attention`的某一个参数矩阵效果是不好的，从上图可以看出

- 要对`Attention`的多个参数矩阵都进行调节，即使`Lora` 的矩阵的rank很低。但是也会表现出很好的效果，

- 你看上图rank 为4 但是模型表现效果比起rank 为8的然要好很多

**因此在实际操作中，应当将可微调参数分配到多种类型权重矩阵中，而不应该用更大的秩单独微调某种类型的权重矩阵。**

####  LORA最优的秩r是多少？

![Lora效果随rank变化](Lora对稳定扩散模型微调/v2-d2b6716367f0471df1413265be7f9e38_720w.png)

### 参数增量$$\Delta W$$和$$W$$的关系

![](Lora对稳定扩散模型微调/v2-e3f31ee79dc1c11feae44ba4b3cf36e1_720w.png)

- **相比于随机矩阵，**Δ𝑊**和**𝑊**有强关联**。从表中的0.32≫0.02可以看出
- Δ𝑊**仅放大了**𝑊**中任务相关的特征，并未放大头部特征**。我们知道F范数的平方等于奇异值和的平方，因此从表中的0.32≪21.67可以看出Δ𝑊和𝑊的头部奇异向量并无关联。
- **r等于4时，**Δ𝑊**的放大系数已经很大了**。计算6.91/0.32≈21.5可知Δ𝑊能将𝑊中相关的特征向量放大21.5倍。

因此我们可以得到结论：**在训练过程中，低秩的适应矩阵**$$\Delta W$$**仅仅放大了对下游任务有用的特征，而不是预训练模型中的主要特征。**

### 为什么我要使用LORA对SD进行微调

因为`StaleDiffusion`当你使用提示词而控制图像输出时，具有很多的不确定性因为预训练的大模型是来自于网络上的，他们使用了网络上特别是[danboru](https://danbooru.donmai.us/#)中的图片进行训练，预训练的大模型为了保证模型有良好的泛化性，所以当我们直接使用提示词来控制图像生成时有一定的不受控制，所以我就决定使用`Lora`来控制图像的生成可以使我得到我所需要的图像。

### 如何训练lora

![训练过程](Lora对稳定扩散模型微调/image-20240426094106207.png)

1. 确认目的

   - 我们首先需要确认你需要训练什么样的模型是：人物角色、画风/风格、概念、服饰、物体/特定元素

2. 收集训练数据

   - 无论机器学习还是深度学习我们的第一步就是收集训练数据。
   - 我们需要根据我们的训练的目的收集特定的图片，因为Lora的作用是为了调整生成的图片
     - 比如如果你想要某一种风格的生成模型，那么你说收集的训练数据就需要是这种风格的
   - 图片要清晰，特征需要明显

3. 数据的处理

   ![image-20240426094917300](Lora对稳定扩散模型微调/image-20240426094917300.png)

   - 统一图片的尺寸，一般都是需要统一为512x512,为什么呢，lora训练微调的大模型是所使用的训练数据也是512px，当然其他尺寸也是可以但是选择512x512 效果更好

   - 生成标签 

     - 可以使用StableDiffusionWebUI 训练部分的标签生成来进行标签处理

       ![image-20240426095316494](Lora对稳定扩散模型微调/image-20240426095316494.png)

   - 优化标签

     - 上述的方法标签都是自动生成的可鞥不会满足你的要求所以你可以更改标签来达到添加触发词的目的
     - 一般的情况下你可以保留所有的标签不做为任何更改，但是这样你的Lora泛化还是会很严重（也就是意味着你需要很多精准的提示词才能触发lora
     - 所以如果你想要你的图片效果好一点应该使用删除某一些标签的做法
     - 批量修改关键词的工具BooruDatasetTagManager 可以使用这个删除

   - 调整参数训练网络上有许多的训练工具最终的原理是相同的

     - 本次使用的是![293677745-d3fcf5ad-fb8f-4e1d-81f9-c903376c19c6](Lora对稳定扩散模型微调/293677745-d3fcf5ad-fb8f-4e1d-81f9-c903376c19c6.png)

     - 重复次数（Repeat）：每一张素材的重复次数。需要在文件夹名以【数字_名称】的方式设定，如训练集chahua重复次数10，则文件夹命名为10_chahua。训练轮数（Epoch）：整个训练集按照重复次数训练一次为一轮，10轮就是10*10为每一张训练100次

       在操作过程中也同样要考虑具象类和泛化类不同来调整参数，具象类需要在每一轮提高次数以求精准度；泛化类就降低次数提高轮数，不需要那么精准，一轮轮去训练。新手训练模式下，我们只需要调整这几个参数即可。

     - ![image-20240426101211508](Lora对稳定扩散模型微调/image-20240426101211508.png)

     - 选择大模型

     - ![image-20240426101258964](Lora对稳定扩散模型微调/image-20240426101258964.png)

     - 训练数据集路径：在选择这一步之前，需要现在`sd/lora-scripts/train`这个文件夹下建一个文件夹，比如我建的叫“xiaoyuan”，再打开“chahua”文件夹在里面建一个“数字_英文名”的文件夹，将之前打标好的图和标签一起复制到“数字_英文名”的文件中（如训练`xiaoyuan`重复次数16，则文件夹命名为`16_xiaoyuan`。）

     - 修改分辨率保存设置 开始训练

### 如何下载lora

一般建议还是自己训练，因为自己训练才能够具体的控制你想要生成的图片，但是如果是下载的Lora他人的Lora不一定是满足你的要求的。

- 首先选择模型下载网站你可以从[HuggacingFace](https://huggingface.co/)下载模型后缀名一般是`safetensor`或`ckpt`或`pt`
- 因为本文所使用的的`Stable Diffusion Webui` 所以当你从网络上下载了模型文件你需要将其放置在`stable-diffusion-webui/models/Lora`
- 查看你安装的`Lora` 在SD WebUI，图生图的界面找到Lora标签卡（红框），点击后即可看到。
![image-20240426092345122](Lora对稳定扩散模型微调/image-20240426092345122.png)

### 如何使用lora

- 首先你先下载或者训练好了你所需要的`lora`，训练的具体步骤可以查看上方或者网上查阅
- 首先，像平时生成图片一样，选择合适SD模型，选择采样器，编写提示词等。要使安装好`LoRA`模型产生效果，你需要书写一种特殊格式的正向提示词，格式如下：

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;lora: 模型名称: 影响权重&gt;</span><br></pre></td></tr></table></figure>

示例：如果你想使用一个名称为zhi4_mix的Lora模型，并把权重设置为1，你应该把如下内容补充到正向提示词：

<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;lora:zhi4_mix:1&gt;</span><br></pre></td></tr></table></figure>

注意这个权重的设置是根据实际情况来进行设置

- 部分LoRA模型还需要额外加上触发词，格式如下

  <figure class="highlight text"><table><tr><td class="code"><pre><span class="line">(触发词: 优先级)</span><br></pre></td></tr></table></figure>



### 参考

[Stable-DiffusionLoRA模型训练教程(新手篇)｜LoRA训练个人经验总结与复盘 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/667165622)

[LORA微调系列(一)：LORA和它的基本原理 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/646791309)
</p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>lora</tag>
        <tag>扩散模型</tag>
      </tags>
  </entry>
  <entry>
    <title>SD文字转3D模型</title>
    <url>/2024/04/25/SD%E6%96%87%E5%AD%97%E8%BD%AC3D%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
  </entry>
  <entry>
    <title>assertbundle的创建</title>
    <url>/2024/05/13/assetbundle%E7%9A%84%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="前言">前言</h3>
<p>在unity中使用<code>assertbundle</code>是一个十分常见的场景，在各种各样的方面都会遇到，但是<code>unity editor</code> 本身不提供任何的按钮为你打包<code>assertbundle</code>，但是<code>unity</code>提供<code>api</code>来帮助你，所以大家一般都是编写脚本。</p>
<h3 id="脚本">脚本</h3>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEditor;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> AssetBundleUnityEditor</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">QAssetBundleEditor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> OUT_PATH_WIN64 = <span class="string">&quot;AssetBundles/Win64/AssetBundles&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> OUT_PATH_IOS = <span class="string">&quot;AssetBundles/IOS/AssetBundles&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> OUT_PATH_Android = <span class="string">&quot;AssetBundles/Android/AssetBundles&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> BuildWin64</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    [<span class="meta">MenuItem(<span class="string">&quot;AssetBundle/BuildWin64&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BuildAssetBundle_Win64</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        BuildAssetBundles(OUT_PATH_WIN64, BuildTarget.StandaloneWindows64);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> BuildWin64</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    [<span class="meta">MenuItem(<span class="string">&quot;AssetBundle/BuildIOS&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BuildAssetBundle_IOS</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        BuildAssetBundles(OUT_PATH_IOS, BuildTarget.iOS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> BuildWin64</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    [<span class="meta">MenuItem(<span class="string">&quot;AssetBundle/BuildAndroid&quot;</span>)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BuildAssetBundle_Android</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        BuildAssetBundles(OUT_PATH_Android, BuildTarget.Android);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BuildAssetBundles</span>(<span class="params"><span class="built_in">string</span> outPath, BuildTarget buildTarget</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Directory.Exists(outPath))</span><br><span class="line">        &#123;</span><br><span class="line">            Directory.Delete(outPath, <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Directory.CreateDirectory(outPath);</span><br><span class="line">        BuildPipeline.BuildAssetBundles(outPath, BuildAssetBundleOptions.UncompressedAssetBundle, buildTarget);</span><br><span class="line"></span><br><span class="line">        AssetDatabase.Refresh();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="注意的事项">注意的事项</h3>
<p><img src="/2024/05/13/assetbundle%E7%9A%84%E5%88%9B%E5%BB%BA/image-20240513121926106.png" alt="image-20240513121926106"></p>
<p>不要忘记给你需要打包的<code>AssetBundle</code>命名如果不命名<code>unity</code>是不会打包的，<code>abb</code>是后缀名是可以不用设置的。</p>
<p><img src="/2024/05/13/assetbundle%E7%9A%84%E5%88%9B%E5%BB%BA/image-20240513122238997.png" alt="image-20240513122238997"></p>
<p>命名时选择<code>new</code></p>
<p><img src="/2024/05/13/assetbundle%E7%9A%84%E5%88%9B%E5%BB%BA/image-20240513122327262.png" alt="image-20240513122327262"></p>
<p>输入后回车就设置名字完成。</p>
<p><img src="/2024/05/13/assetbundle%E7%9A%84%E5%88%9B%E5%BB%BA/image-20240513122046564.png" alt="image-20240513122046564"></p>
<p>再选择一个就好了。</p>
]]></content>
      <tags>
        <tag>unity</tag>
        <tag>assertbundle</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly图片部署在gitpage不显示</title>
    <url>/2024/04/18/butterfly%E5%9B%BE%E7%89%87%E9%83%A8%E7%BD%B2%E5%9C%A8gitpage%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<h1>butterfly图片部署在gitpage不显示</h1>
<h2 id="topimg等banner不显示">topimg等banner不显示</h2>
<h3 id="问题描述">问题描述</h3>
<p>在butterfly中的<code>_config.butterfly.yml</code>中的图片设置插入图片，图片在本地显示正常，部署到gitpage后图片不显示。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index_img:</span> <span class="string">img/xxx.jpg</span></span><br></pre></td></tr></table></figure>
<h3 id="解决方法">解决方法</h3>
<p>在图片地址前加上<code>你的网址</code>，即<code>https://xxxx.github.io/</code>。<br>
还有可能是你需要使用绝对路径，即<code>/img/xxx.jpg</code>而不是 <code>img/xxx.jpg</code></p>
<h2 id="文章的cover显示404">文章的cover显示404</h2>
<h3 id="问题描述-2">问题描述</h3>
<p>文章的cover显示404，当然本地也显示404图片</p>
<h3 id="解决方法-2">解决方法</h3>
<p>看看图片的链接是不是写错了</p>
]]></content>
      <categories>
        <category>butterfly</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>butterfly建立gitalk</title>
    <url>/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/</url>
    <content><![CDATA[<h3 id="创建-OAuth-Application">创建 OAuth Application</h3>
<p><code>创建 OAuth Application</code> 的过程所有 hexo 主题都是通用的，后面的配置文件主题之间有所差异。</p>
<p>首先，先跳转到 OAuth Apps 的创建界面。<br>
具体路径是 <code>Settings</code>-<code>Developer settings</code>-<code>OAuth Apps</code>。<br>
<img src="/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/1.png" alt></p>
<p><img src="/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/2.png" alt></p>
<p><img src="/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/3.png" alt></p>
<h3 id="点击-Register-a-new-application，创建一个新的-OAuth-Application。">点击 Register a new application，创建一个新的 OAuth Application。</h3>
<p><img src="/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/4.png" alt><br>
以下是对这些字段的说明</p>
<table>
<thead>
<tr>
<th>表单字段</th>
<th></th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Application name</td>
<td>必填</td>
<td>应用名字，随便填</td>
</tr>
<tr>
<td>Homepage URL</td>
<td>必填</td>
<td>填写你的博客首页地址</td>
</tr>
<tr>
<td>Application description</td>
<td>选填</td>
<td>应用描述，随便填</td>
</tr>
<tr>
<td>Authorization callback URL</td>
<td>必填</td>
<td>登录 Github 账号后，要跳转回去，这个地址就是跳转回去的地址</td>
</tr>
</tbody>
</table>
<p><img src="/2024/04/18/butterfly%E5%BB%BA%E7%AB%8Bgitalk/5.png" alt><br>
填写完之后，会显示这样一个界面，其中 <code>Client ID</code> 和 <code>Client Secret</code> 很重要，待会要用，这里我防止自己的应用被滥用，就先打码了。</p>
<h3 id="修改-butterfly-配置文件">修改 butterfly 配置文件</h3>
<p><strong>之前的步骤所有的 Gittalk 配置都是一样的，接下来的配置只针对 <a href="https://github.com/jerryc127/hexo-theme-butterfly">butterfly</a> 主题，主题与主题之间可能有些不一样。</strong></p>
<p>打开 <code>_data/butterfly.yml</code>，找到 gittalk 的配置项。<br>
把之前获取 <code>Client ID</code> 和 <code>Client Secret</code> 分别填到 <code>client_id</code> 和 <code>client_secret</code> 里面。</p>
<p>repo 填一个仓库名就好了，我这里填的就是 io 的仓库。当然，你也可以去新建一个。</p>
<p>owner 填自己的 github 账号名。</p>
<p>admin 填 repo 仓库的拥有者，hexo 解析的时候会使用 <code>admin/repo</code> 去定位仓库的位置。</p>
<blockquote>
<p>比较容易犯错的地方是 repo 填了 <code>nonlinearthink/nonlinearthink.github.io</code> 这样的名字，注意，repo 只需要填仓库名字，不需要加拥有者，拥有者放到 admin 里面。</p>
</blockquote>
<p><strong>关于其他的字段解释可见<a href="https://demo.jerryc.me/posts/ceeb73f/#%E8%A9%95%E8%AB%96">官方博客</a></strong></p>
<h3 id="更新、发布">更新、发布</h3>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<h2 id="gitalk踩坑之error-not-found">gitalk踩坑之error not found</h2>
<p>出现error not found的问题，一般来说就是GitHub仓库的链接出现了问题，笔者部署的时候就出现了这个问题，死活不知道那里配置有误。最后，笔者明察秋毫，发现竟然是我的仓库设置了private，没有公开。最后，新建public的仓库之后，问题迎刃而解，希望我踩的坑能够给大家一点启发。</p>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-asset-image的替代</title>
    <url>/2024/04/20/hexo-asset-image%E7%9A%84%E6%9B%BF%E4%BB%A3/</url>
    <content><![CDATA[<ol>
<li>
<p><code>hexo-asset-img</code></p>
<blockquote>
<p><a href="https://github.com/yiyungent/hexo-asset-img">yiyungent/hexo-asset-img: 🍰 Hexo local image plugin. | Hexo 本地图片插件: 转换 图片相对路径 为 asset_img (github.com)</a></p>
<p>这么使用记住使用<code>/</code></p>
</blockquote>
</li>
<li>
<p><code>hexo-asset-ink</code></p>
</li>
</ol>
<blockquote>
<h3 id="Images">Images</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;![Alt Text](./2019-02-14-Test-Post/Test-Image.png &quot;Title Text&quot;)</span><br><span class="line">&gt;![Alt Text](2019-02-14-Test-Post/Test-Image.png &quot;Title Text&quot;)</span><br></pre></td></tr></table></figure>
<p>这么使用记住使用<code>/</code></p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>batterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>github 关注分类</title>
    <url>/2025/03/08/github%E5%85%B3%E6%B3%A8%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<h4 id="image-and-video-tools">image and video tools</h4>
<p><a href="https://github.com/0x90d/videoduplicatefinder">video查重</a></p>
<p><a href="https://github.com/qarmin/czkawka">文件查重</a></p>
<p><a href="https://github.com/arsenetar/dupeguru">文件查重2</a></p>
<h4 id="模拟器">模拟器</h4>
<p><a href="https://github.com/shadps4-emu/shadPS4">ps4模拟器</a></p>
<p><a href="https://github.com/libretro/RetroArch">万能模拟器</a></p>
<p><a href="https://github.com/jpd002/Play-">ps2模拟器</a></p>
]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo添加rss</title>
    <url>/2024/04/18/hexo%E6%B7%BB%E5%8A%A0rss/</url>
    <content><![CDATA[<h2 id="插件选择">插件选择</h2>
<p>根据 butterfly 主题的进阶教程里插件推荐，可以使用 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 插件进行 RSS feed 的制作。</p>
<p><img src="/2024/04/18/hexo%E6%B7%BB%E5%8A%A0rss/1.png" alt></p>
<p>于是根据 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的官方教程，一步步进行插件配置。</p>
<h2 id="hexo-根目录安装插件并配置">hexo 根目录安装插件并配置</h2>
<ol>
<li>进入 hexo 的根目录，执行如下命令进行插件安装</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>根据官方建议配置 hexo 根目录的_config.yml 文件，再_config.yml 文件末尾添加如下配置信息</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#是否启用插件</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span> <span class="comment">#有atom和rss2两个选项，使用默认atom就好了</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span> <span class="comment">#也用默认配置atom.xml就行</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span> <span class="comment">#展示文章的数量,使用 0 或 false 代表展示全部</span></span><br><span class="line">  <span class="attr">hub:</span> <span class="comment">#这个我没用上，根据官网，空着就行</span></span><br><span class="line">  <span class="attr">content:</span> <span class="comment">#默认是false，true的话会在rss文件中包含整个文章内容</span></span><br><span class="line">  <span class="attr">content_limit:</span> <span class="number">140</span> <span class="comment">#摘要长度</span></span><br><span class="line">  <span class="attr">content_limit_delim:</span> <span class="string">&#x27; &#x27;</span> <span class="comment">#没看明白官方的意思，就跟着默认不填了</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment">#采用日期进行排序</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">icon.png</span> <span class="comment">#给rss链接配置icon</span></span><br><span class="line">  <span class="attr">autodiscovery:</span> <span class="literal">true</span> <span class="comment">#自动发现提要</span></span><br><span class="line">  <span class="attr">template:</span> <span class="comment">#给rss文章配置模板</span></span><br></pre></td></tr></table></figure>
<h2 id="主题目录配置文件">主题目录配置文件</h2>
<ol>
<li>在 butterfly 主题目录下的_config.yml 文件内添加配置内容：</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li>在_config.yml 文件中找到 social settings 项，添加如下内容。（这样主页就能正确显示 RSS 图标了）</li>
</ol>
  <figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fas fa-rss:</span> <span class="string">https://你的域名地址/atom.xml</span></span><br></pre></td></tr></table></figure>
<h2 id="大功告成">大功告成</h2>
<p>bash</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>教程</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>rss</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo插件学习</title>
    <url>/2024/04/19/hexo%E6%8F%92%E4%BB%B6%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>krkr2开发</title>
    <url>/2025/09/19/krkr2%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h2 id="项目地址">项目地址</h2>
<p><a href="https://github.com/angleyanalbedo/krkr2">krkr2</a></p>
]]></content>
      <categories>
        <category>模拟器</category>
      </categories>
      <tags>
        <tag>krkr</tag>
      </tags>
  </entry>
  <entry>
    <title>pictest</title>
    <url>/2025/09/19/pictest/</url>
    <content><![CDATA[<div class="gallery-container" data-type="data" data-button>
      <div class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</div>
      <div class="gallery-items">
      </div>
    </div>
]]></content>
  </entry>
  <entry>
    <title>neovim配置</title>
    <url>/2025/09/19/neovim%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<hr>
<p>我的<code>neovim</code>的配置是基于<code>lazy.vim</code></p>
<h1>1. 安装lazyvim</h1>
<p>下面给出一份 2025 年最新、在 Windows / macOS / Linux 上都能复现的「零失败」安装流程。<br>
只要依次复制命令，2-3 分钟即可进入开箱即用的 LazyVim。</p>
<hr>
<ol>
<li>前置检查（必须）</li>
</ol>
<hr>
<h1>1.1 Neovim ≥ 0.9</h1>
<p>nvim --version          # 若 &lt; 0.9 去 GitHub Release 下 AppImage 或安装包</p>
<h1>1.2 依赖工具</h1>
<h1>Ubuntu / Debian</h1>
<p>sudo apt install git curl ripgrep fd-find unzip build-essential -y</p>
<h1>macOS (Homebrew)</h1>
<p>brew install neovim git ripgrep fd unzip</p>
<h1>Windows (Scoop 为例)</h1>
<p>scoop install neovim git ripgrep fd unzip</p>
<h1>1.3 Nerd Font（图标不炸框）</h1>
<h1>下载 Hack Nerd Font → 安装 → 终端设为该字体</h1>
<h1>1.4 备份旧配置（可选，但强烈建议）</h1>
<figure class="highlight ps1"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span> ~/.config/nvim&#123;,.bak&#125;      <span class="comment"># Linux / macOS</span></span><br><span class="line"><span class="comment"># Windows PowerShell</span></span><br><span class="line"><span class="built_in">Move-Item</span> <span class="variable">$env:LOCALAPPDATA</span>\nvim <span class="variable">$env:LOCALAPPDATA</span>\nvim.bak</span><br></pre></td></tr></table></figure>
<h1>1.5 克隆 starter 模板</h1>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/LazyVim/starter ~/.config/nvim</span><br><span class="line">rm -rf ~/.config/nvim/.git    # 去掉 git 历史，方便以后自己建仓库</span><br></pre></td></tr></table></figure>
<h1>1.6 首次启动即自动下插件</h1>
<p>nvim   # 等待左下角 100 % 完成，按 q 关闭欢迎页即安装完毕</p>
<hr>
<ol start="3">
<li>国内网络提速（可选）</li>
</ol>
<hr>
<p>如果步骤 2.3 卡在 “Cloning…” 可临时换镜像：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global url.<span class="string">&quot;https://hub.fastgit.org/&quot;</span>.insteadOf <span class="string">&quot;https://github.com/&quot;</span></span><br></pre></td></tr></table></figure>
<h1>安装完再恢复</h1>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> url.<span class="string">&quot;https://hub.fastgit.org/&quot;</span>.insteadOf</span><br></pre></td></tr></table></figure>
<hr>
<ol start="4">
<li>验证 &amp; 常用入口</li>
</ol>
<hr>
<p>:Lazy        – 插件管理器 UI（更新 / 禁用 / 回滚）<br>
:Mason       – LSP 服务器/格式化器/调试器一键装<br>
:checkhealth – 官方自检，有 ❌ 就按提示装缺失依赖</p>
<hr>
<ol start="5">
<li>卸载 / 重置（一条命令）</li>
</ol>
<hr>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ~/.config/nvim \</span><br><span class="line">       ~/.local/share/nvim \</span><br><span class="line">       ~/.local/state/nvim \</span><br><span class="line">       ~/.cache/nvim</span><br></pre></td></tr></table></figure>
<hr>
<h1>进行自定义配置</h1>
<h2 id="增加字符画主页">增加字符画主页</h2>
]]></content>
  </entry>
  <entry>
    <title>repo-filter使用</title>
    <url>/2025/09/19/repo-filter%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1>repo-filter的安装</h1>
<ol>
<li>这个是依赖于<code>python</code>的<code>pip</code>的 所以需要先安装<code>python</code></li>
<li>安装<code>repo-filter</code></li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python -m pip install --user git-<span class="built_in">filter</span>-repo  <span class="comment"># 对于个人用户安装</span></span><br><span class="line"><span class="comment"># 或者全局安装（可能需要管理员权限）</span></span><br><span class="line">python -m pip install git-<span class="built_in">filter</span>-repo</span><br><span class="line">````</span><br><span class="line"><span class="number">3.</span> 需要添加环境变量让`git` 可以寻找到</span><br><span class="line">在`Unix/Linux`中被安装到`.local/<span class="built_in">bin</span>`</span><br><span class="line">```sh</span><br><span class="line">export PATH=$PATH:~/.local/<span class="built_in">bin</span>/</span><br></pre></td></tr></table></figure>
<p>在<code>windows</code>中就被安装在<code>site-packages </code></p>
<h1>使用场景</h1>
<ol>
<li>删除仓库历史中的大文件 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git filter-repo --force --invert-paths --path large_file.txt</span><br></pre></td></tr></table></figure>
参数解释：
<ul>
<li>–force：允许覆盖当前仓库。</li>
<li>–invert-paths：保留不匹配路径的提交，这里是反选，即删除匹配路径的文件。</li>
<li>–path large_file.txt：指定要从历史中删除的文件名。</li>
</ul>
</li>
<li>替换文件内容 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git filter-repo --replace-text &lt;replacement-file&gt;</span><br></pre></td></tr></table></figure>
在 <code>&lt;replacement-file&gt;</code> 中定义替换规则。</li>
<li>根据大小过滤文件 <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git filter-repo --strip-blobs-bigger-than 10M</span><br></pre></td></tr></table></figure>
删除大于10MB的二进制文件。</li>
</ol>
<h1>高级操作</h1>
<p>下面给出一条一次性完成「<strong>删除仓库里全部文件并统一重写所有提交信息</strong>」的 <code>git filter-repo</code> 命令示例。<br>
（⚠️ 会彻底清空工作目录内容并改写历史，务必先备份！）</p>
<hr>
<h3 id="✅-1-克隆裸仓库（避免工作区干扰）">✅ 1. 克隆裸仓库（避免工作区干扰）</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --mirror https://github.com/you/repo.git</span><br><span class="line"><span class="built_in">cd</span> repo.git          <span class="comment"># 进入裸仓库目录</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="✅-2-删除全部文件">✅ 2. 删除全部文件</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git filter-repo --invert-paths --path <span class="string">&#x27;*&#x27;</span> --all</span><br></pre></td></tr></table></figure>
<p>解释</p>
<ul>
<li><code>--invert-paths</code> 让 <code>--path '*'</code> 变成“排除所有文件”，即<strong>保留空提交，但把文件全部删掉</strong>。</li>
<li><code>--all</code> 同时作用于所有分支、标签。</li>
</ul>
<hr>
<h3 id="✅-3-批量重写所有提交信息">✅ 3. 批量重写所有提交信息</h3>
<p>创建一个文本文件 <code>msg-map.txt</code>，每行一条替换规则（支持正则）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 旧内容&lt;tab&gt;新内容</span><br><span class="line">.*	Rewrite: new commit message</span><br></pre></td></tr></table></figure>
<p>然后执行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git filter-repo --replace-message msg-map.txt</span><br></pre></td></tr></table></figure>
<p>如果想完全统一成一句话，可直接：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;.*	Initial commit&#x27;</span> | git filter-repo --replace-message -</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="✅-4-强制推回远程">✅ 4. 强制推回远程</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>
<p>所有协作者需重新克隆。</p>
<hr>
<h3 id="小结">小结</h3>
<table>
<thead>
<tr>
<th>目的</th>
<th>命令</th>
</tr>
</thead>
<tbody>
<tr>
<td>删除全部文件</td>
<td><code>git filter-repo --invert-paths --path '*' --all</code></td>
</tr>
<tr>
<td>重写所有提交信息</td>
<td><code>git filter-repo --replace-message &lt;map-file&gt;</code></td>
</tr>
</tbody>
</table>
<h1>注意以上的做法是错误的可以重置message但是无法删除文件</h1>
<p>总之依靠<code>git filter-repo --invert-paths --path </code> 删除文件是不靠谱的</p>
<h1>使用<code>commit-callback</code> 删除文件</h1>
<p>下面给出 <strong>纯 <code>git-filter-repo</code> 官方思路</strong> 的「终极方案」：<br>
用 <strong><code>--commit-callback</code></strong>（而不是 <code>--path</code> 或 <code>--strip-blobs-bigger-than</code>）<br>
在 Python 层里把 <strong>每一次提交直接置空</strong>（tree = 空树），并且把消息统一改掉。<br>
这样无论普通文件、子模块、LFS、任何 blob 都会消失，100 % 成功。</p>
<hr>
<h3 id="✅-1-进入裸仓库">✅ 1. 进入裸仓库</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --mirror https://github.com/you/repo.git</span><br><span class="line"><span class="built_in">cd</span> repo.git</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="✅-2-一条命令：空树-统一消息">✅ 2. 一条命令：空树 + 统一消息</h3>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">filter</span><span class="literal">-repo</span> <span class="literal">--force</span> </span><br><span class="line">  <span class="literal">--commit-callback</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">    commit.file_changes = []          # 清空所有文件变更</span></span><br><span class="line"><span class="string">    commit.message      = b&quot;Initial commit&quot;</span></span><br><span class="line"><span class="string">  &#x27;</span></span><br></pre></td></tr></table></figure>
<p>说明</p>
<ul>
<li><code>commit.file_changes = []</code>：把本次提交携带的 <strong>所有文件、子模块、重命名、删除</strong> 全部抹掉 → 生成空树。</li>
<li><code>commit.message = b&quot;Initial commit&quot;</code>：提交信息统一重写成你想要的文字。</li>
<li><code>--force</code>：避免“已过滤过”的拒绝提示。</li>
</ul>
<hr>
<h3 id="✅-3-验证">✅ 3. 验证</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git ls-tree -r HEAD        <span class="comment"># 没有任何文件/子模块</span></span><br><span class="line">git <span class="built_in">log</span> --oneline          <span class="comment"># 所有提交消息都变成 “Initial commit”</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="✅-4-强制推回">✅ 4. 强制推回</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="⚠️-备份提醒">⚠️ 备份提醒</h3>
<p>这条命令会<strong>永久重写整个仓库历史</strong>，务必先在别处备份裸仓库或打 tag 再做。</p>
<h1>这个操作下会导致整个仓库空 因为git 会丢掉空提交默认</h1>
<p>所以<br>
出现这条提示说明：<strong>你刚才那条 <code>--commit-callback</code> 把「所有提交」都变成了「空提交」，结果 filter-repo 认为这些空提交没有实际意义，于是把它们全部丢弃了</strong>，仓库里一个提交都不剩，HEAD 指向的 main 分支也就空了。</p>
<hr>
<h3 id="为什么会这样">为什么会这样</h3>
<p><code>git-filter-repo</code> 的默认策略是：</p>
<blockquote>
<p>如果一个提交被清空后 <strong>既没文件变更，又没父级变化</strong>，它就 <strong>会被删除</strong>，以免留下一堆无意义的空节点。<br>
所以 <code>commit.file_changes = []</code> 后，<strong>所有提交都被当成“可被丢弃”</strong>，最终仓库归零。</p>
</blockquote>
<hr>
<h3 id="正确做法：保留空提交">正确做法：保留空提交</h3>
<p>告诉 filter-repo <strong>“即使空提交也给我留下”</strong>，加 <code>--prune-empty never</code>：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">filter</span><span class="literal">-repo</span> <span class="literal">--force</span> <span class="literal">--prune-empty</span> never </span><br><span class="line">  <span class="literal">--commit-callback</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">    commit.file_changes = []</span></span><br><span class="line"><span class="string">  &#x27;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>--prune-empty never</code>：强制保留空提交。</li>
<li>不写 <code>--message-callback</code>：提交信息保持原样。</li>
</ul>
<hr>
<p>注意以上的命令写法是针对<code>bash</code>的<br>
如果考虑到<code>powershell</code>应该这么写</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">filter</span><span class="literal">-repo</span> <span class="literal">--force</span> <span class="literal">--prune-empty</span> never <span class="literal">--commit-callback</span> <span class="string">&quot;commit.file_changes=[];commit.message=b&#x27;Initial commit&#x27;&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="验证">验证</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> --oneline          <span class="comment"># 所有原提交都在，只是 tree 为空</span></span><br><span class="line">git ls-tree -r HEAD        <span class="comment"># 没有任何文件</span></span><br></pre></td></tr></table></figure>
<hr>
<h3 id="推送">推送</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push --force</span><br></pre></td></tr></table></figure>
<p>仓库现在就是「<strong>所有历史提交都在，但每个提交里都没有文件</strong>」的状态。</p>
<h1>后记</h1>
<p>本来这个<code>repo-filter</code>是由python api的但是我没有成功过</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> git_filter_repo <span class="keyword">as</span> fr</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建过滤选项</span></span><br><span class="line">args = fr.FilteringOptions.default_options()</span><br><span class="line">args.force = <span class="literal">True</span></span><br><span class="line">args.replace_refs = <span class="string">&#x27;delete-no-add&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 blob 回调 - 删除所有文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">blob_callback</span>(<span class="params">blob, metadata</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>  <span class="comment"># 删除文件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 commit 回调 - 保持消息不变</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">commit_callback</span>(<span class="params">commit, metadata</span>):</span><br><span class="line">    <span class="keyword">return</span> commit  <span class="comment"># 不做任何修改</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并运行过滤器</span></span><br><span class="line"><span class="built_in">filter</span> = fr.RepoFilter(</span><br><span class="line">    args,</span><br><span class="line">    blob_callback=blob_callback,</span><br><span class="line">    commit_callback=commit_callback</span><br><span class="line">)</span><br><span class="line"><span class="built_in">filter</span>.run()</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>spark淘宝数据可视化分析</title>
    <url>/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h3 id="数据加载">数据加载</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = pd.read_csv(<span class="string">&#x27;双十一淘宝美妆数据.csv&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>使用 <strong>pandas</strong> 读取csv</p>
<h3 id="数据预处理">数据预处理</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 对重复数据做删除处理</span></span><br><span class="line">data = data.drop_duplicates(inplace=<span class="literal">False</span>)</span><br><span class="line">data.shape</span><br><span class="line"><span class="comment"># 此处虽然删除了重复值，但索引未变，因此应用以下方法进行重置索引</span></span><br><span class="line">data.reset_index(inplace=<span class="literal">True</span>,drop=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 查看缺失值</span></span><br><span class="line">data.isnull().<span class="built_in">any</span>()</span><br><span class="line"><span class="comment"># 查看数据结构</span></span><br><span class="line">data.describe()</span><br><span class="line"><span class="comment"># 查看sale_count列的众数</span></span><br><span class="line">mode_01 = data.sale_count.mode()</span><br><span class="line">mode_01</span><br><span class="line"><span class="comment"># 查看comment_count列的众数</span></span><br><span class="line">mode_02 = data.comment_count.mode()</span><br><span class="line">mode_02</span><br><span class="line">data = data.fillna(<span class="number">0</span>)</span><br><span class="line">data.isnull().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure>
<p>这段代码是用于数据预处理的。下面是对每个步骤的解释：</p>
<ol>
<li><code> data = data.drop_duplicates(inplace=False)</code>: 这行代码用于删除数据中的重复行。<code>drop_duplicates</code>函数会返回一个删除了重复行的新数据集，然后将其赋值给<code>data</code>变量。</li>
<li><code> data.shape</code>: 这行代码用于打印数据集的形状，即行数和列数。</li>
<li><code>data.reset_index(inplace=True, drop=True)</code>: 这行代码用于重置数据集的索引。<code>reset_index</code>函数会重置数据集的索引，并将原来的索引作为一列添加到数据集中。<code>inplace=True</code>表示直接修改原始数据集，<code>drop=True</code>表示丢弃原来的索引列。</li>
<li><code>data.isnull().any()</code>: 这行代码用于检查数据集中是否存在缺失值。<code>isnull()</code>函数会返回一个布尔类型的数据集，表示每个元素是否为缺失值，<code>any()</code>函数会检查每一列是否存在缺失值，并返回一个布尔值。</li>
<li><code>data.describe()</code>: 这行代码用于生成数据集的统计描述。<code>describe()</code>函数会计算每个数值列的基本统计量，如计数、均值、标准差、最小值、25%分位数、中位数、75%分位数和最大值。</li>
<li><code>mode_01 = data.sale_count.mode()</code>: 这行代码用于计算<code>sale_count</code>列的众数。<code>mode()</code>函数会返回一个包含众数的数据集，可能有多个众数。</li>
<li><code>mode_02 = data.comment_count.mode()</code>: 这行代码用于计算<code>comment_count</code>列的众数，同样使用了<code>mode()</code>函数。</li>
<li><code>data = data.fillna(0)</code>: 这行代码用于将数据集中的缺失值填充为0。<code>fillna(0)</code>函数会将所有缺失值替换为指定的值，这里使用的是0。</li>
<li><code>data.isnull().sum()</code>: 这行代码用于计算数据集中每列的缺失值数量。<code>isnull().sum()</code>函数会返回每列缺失值的数量，通过对所有列求和得到总的缺失值数量。</li>
</ol>
<p>这些步骤可以帮助清洗数据、处理重复值和缺失值，使数据集更适合进行后续的分析和建模。</p>
<h4 id="给商品名称中文分词">给商品名称中文分词</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="comment"># jieba.load_userdict(&#x27;addwords.txt&#x27;)</span></span><br><span class="line">title_cut = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data.title:</span><br><span class="line">    j = jieba.lcut(i)</span><br><span class="line">    title_cut.append(j)</span><br><span class="line">data[<span class="string">&#x27;item_name_cut&#x27;</span>] = title_cut</span><br><span class="line">data[[<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;item_name_cut&#x27;</span>]].head()</span><br></pre></td></tr></table></figure>
<p>这段代码使用了中文分词库jieba来对<code>data</code>中的<code>title</code>列进行分词，并将分词结果存储在<code>title_cut</code>列表中。然后，通过将<code>title_cut</code>列表赋值给<code>data</code>的新列<code>item_name_cut</code>，将分词结果添加到<code>data</code>数据集中。</p>
<p>具体的步骤如下：</p>
<ol>
<li><code>import jieba</code>: 这行代码导入了jieba库，它是一个常用的中文分词库，用于将中文文本进行分词处理。</li>
<li><code>title_cut = []</code>: 创建一个空列表<code>title_cut</code>，用于存储分词结果。</li>
<li><code>for i in data.title:</code>: 这行代码使用一个循环遍历<code>data</code>数据集中的每个<code>title</code>值。</li>
<li><code>j = jieba.lcut(i)</code>: 这行代码使用jieba库的<code>lcut</code>函数对当前<code>title</code>值进行分词，返回一个分词后的列表，并将其赋值给变量<code>j</code>。</li>
<li><code>title_cut.append(j)</code>: 这行代码将分词结果<code>j</code>添加到<code>title_cut</code>列表中。</li>
<li><code>data['item_name_cut'] = title_cut</code>: 这行代码将<code>title_cut</code>列表赋值给<code>data</code>数据集的新列<code>item_name_cut</code>，将分词结果添加到数据集中。</li>
<li><code>data[['title','item_name_cut']].head()</code>: 这行代码打印<code>data</code>数据集中<code>title</code>列和<code>item_name_cut</code>列的前几行数据，以检查分词结果是否正确添加到了数据集中。</li>
</ol>
<p><strong>技术</strong>通过使用中文分词库jieba，可以将中文文本进行分词处理，将连续的文本切分成有意义的词语，为后续的文本挖掘、自然语言处理等任务提供基础。</p>
<h4 id="给商品分类">给商品分类</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[[<span class="string">&#x27;title&#x27;</span>,<span class="string">&#x27;item_name_cut&#x27;</span>]].head()</span><br><span class="line"></span><br><span class="line"><span class="comment">#%%</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给商品添加分类</span></span><br><span class="line">sub_type = []   <span class="comment">#子类别</span></span><br><span class="line">main_type = []  <span class="comment">#主类别</span></span><br><span class="line">basic_config_data = <span class="string">&quot;&quot;&quot;护肤品    套装    套装</span></span><br><span class="line"><span class="string">护肤品    乳液类    乳液    美白乳    润肤乳    凝乳    柔肤液&#x27;    亮肤乳    菁华乳    修护乳</span></span><br><span class="line"><span class="string">护肤品    眼部护理    眼霜    眼部精华    眼膜</span></span><br><span class="line"><span class="string">护肤品    面膜类    面膜</span></span><br><span class="line"><span class="string">护肤品    清洁类    洗面    洁面    清洁    卸妆    洁颜    洗颜    去角质    磨砂</span></span><br><span class="line"><span class="string">护肤品    化妆水    化妆水    爽肤水    柔肤水    补水露    凝露    柔肤液    精粹水    亮肤水    润肤水    保湿水    菁华水    保湿喷雾    舒缓喷雾</span></span><br><span class="line"><span class="string">护肤品    面霜类    面霜    日霜    晚霜    柔肤霜    滋润霜    保湿霜    凝霜    日间霜    晚间霜    乳霜    修护霜    亮肤霜    底霜    菁华霜</span></span><br><span class="line"><span class="string">护肤品    精华类    精华液    精华水    精华露    精华素</span></span><br><span class="line"><span class="string">护肤品    防晒类    防晒霜    防晒喷雾</span></span><br><span class="line"><span class="string">化妆品    口红类    唇釉    口红    唇彩</span></span><br><span class="line"><span class="string">化妆品    底妆类    散粉    蜜粉    粉底液    定妆粉     气垫    粉饼    BB    CC    遮瑕    粉霜    粉底膏    粉底霜</span></span><br><span class="line"><span class="string">化妆品    眼部彩妆    眉粉    染眉膏    眼线    眼影    睫毛膏</span></span><br><span class="line"><span class="string">化妆品    修容类    鼻影    修容粉    高光    腮红</span></span><br><span class="line"><span class="string">其他    其他    其他&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串basic_config_data 转为字典 category_config_map</span></span><br><span class="line">category_config_map = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> config_line <span class="keyword">in</span> basic_config_data.split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">    basic_cateogry_list = config_line.strip().strip(<span class="string">&#x27;\n&#x27;</span>).strip(<span class="string">&#x27;    &#x27;</span>).split(<span class="string">&#x27;    &#x27;</span>)</span><br><span class="line">    main_category = basic_cateogry_list[<span class="number">0</span>]</span><br><span class="line">    sub_category = basic_cateogry_list[<span class="number">1</span>]</span><br><span class="line">    unit_category_list = basic_cateogry_list[<span class="number">2</span>:-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> unit_category <span class="keyword">in</span> unit_category_list:</span><br><span class="line">        <span class="keyword">if</span> unit_category <span class="keyword">and</span> unit_category.strip().strip(<span class="string">&#x27;    &#x27;</span>):</span><br><span class="line">            category_config_map[unit_category] = (main_category,sub_category)</span><br><span class="line">            </span><br><span class="line">category_config_map</span><br></pre></td></tr></table></figure>
<p>这段代码用于给商品进行分类。具体的步骤如下：</p>
<ol>
<li><code>sub_type = []</code> 和 <code>main_type = []</code>：创建两个空列表，用于存储商品的子类别和主类别。</li>
<li><code>basic_config_data = &quot;&quot;&quot;护肤品    套装    套装 ... 其他    其他    其他&quot;&quot;&quot;</code>：定义了一个包含商品分类信息的字符串。每一行表示一个商品类别的配置，由三个部分组成，以制表符分隔：主类别、子类别、具体的子类别列表。</li>
<li><code>category_config_map = &#123;&#125;</code>：创建一个空字典<code>category_config_map</code>，用于存储商品子类别与主类别的映射关系。</li>
<li><code>for config_line in basic_config_data.split('\n'):</code>：通过对<code>basic_config_data</code>字符串按换行符进行分割，遍历每一行配置。</li>
<li><code>basic_cateogry_list = config_line.strip().strip('\n').strip('    ').split('    ')</code>：将当前行的配置进行清理和分割，得到一个列表<code>basic_cateogry_list</code>，包含主类别、子类别和具体子类别列表。</li>
<li><code>main_category = basic_cateogry_list[0]</code> 和 <code>sub_category = basic_cateogry_list[1]</code>：从<code>basic_cateogry_list</code>提取主类别和子类别。</li>
<li><code>unit_category_list = basic_cateogry_list[2:-1]</code>：从<code>basic_cateogry_list</code>提取具体子类别列表。</li>
<li><code>for unit_category in unit_category_list:</code>：遍历具体子类别列表。</li>
<li><code>if unit_category and unit_category.strip().strip('    ')</code>：检查具体子类别是否存在且不为空。</li>
<li><code>category_config_map[unit_category] = (main_category,sub_category)</code>：将具体子类别作为键，将主类别和子类别作为值，添加到<code>category_config_map</code>字典中，建立子类别与主类别的映射关系。</li>
<li><code>category_config_map</code>：打印<code>category_config_map</code>字典，以检查商品子类别与主类别的映射关系是否正确添加。</li>
</ol>
<p>通过这段代码，可以根据配置信息将商品进行分类，并将子类别和主类别存储到对应的列表中。这样的分类信息可以用于后续的商品分析、推荐系统等任务。</p>
<p>没用到什么特别的技术</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    exist = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> temp <span class="keyword">in</span> data.item_name_cut[i]:</span><br><span class="line">        <span class="keyword">if</span> temp <span class="keyword">in</span> category_config_map:</span><br><span class="line">            sub_type.append(category_config_map.get(temp)[<span class="number">1</span>])</span><br><span class="line">            main_type.append(category_config_map.get(temp)[<span class="number">0</span>])</span><br><span class="line">            exist = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> exist:</span><br><span class="line">        sub_type.append(<span class="string">&#x27;其他&#x27;</span>)</span><br><span class="line">        main_type.append(<span class="string">&#x27;其他&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(sub_type),<span class="built_in">len</span>(main_type),<span class="built_in">len</span>(data))</span><br></pre></td></tr></table></figure>
<p>这段代码是一个循环结构，用于将商品数据根据分类配置信息进行分类，并将分类结果存储到<code>sub_type</code>和<code>main_type</code>列表中。</p>
<p>具体的步骤如下：</p>
<ol>
<li><code>for i in range(len(data)):</code>：通过<code>for</code>循环遍历<code>data</code>数据的索引。</li>
<li><code>exist = False</code>：初始化一个布尔变量<code>exist</code>，用于标记当前商品是否存在于分类配置中。</li>
<li><code>for temp in data.item_name_cut[i]:</code>：通过<code>for</code>循环遍历当前商品的分词结果<code>data.item_name_cut[i]</code>中的每个词语。</li>
<li><code>if temp in category_config_map:</code>：检查当前词语<code>temp</code>是否存在于分类配置字典<code>category_config_map</code>的键中。</li>
<li><code>sub_type.append(category_config_map.get(temp)[1])</code> 和 <code>main_type.append(category_config_map.get(temp)[0])</code>：如果当前词语存在于分类配置中，将对应的子类别和主类别添加到<code>sub_type</code>和<code>main_type</code>列表中。这里使用<code>category_config_map.get(temp)</code>来获取词语对应的主类别和子类别，并使用索引<code>[1]</code>和<code>[0]</code>来提取对应的值。</li>
<li><code>exist = True</code>：将<code>exist</code>变量设置为<code>True</code>，表示当前商品在分类配置中存在。</li>
<li><code>break</code>：跳出当前循环，结束对当前商品的词语遍历。</li>
<li><code>if not exist:</code>：如果当前商品在分类配置中不存在。</li>
<li><code>sub_type.append('其他')</code> 和 <code>main_type.append('其他')</code>：将主类别和子类别都设置为’其他’，表示该商品没有匹配到任何分类配置。</li>
<li><code>print(len(sub_type), len(main_type), len(data))</code>：打印<code>sub_type</code>、<code>main_type</code>和<code>data</code>列表的长度，以检查分类结果的正确性。</li>
</ol>
<p>这段代码根据商品的分词结果，在分类配置字典中查找词语对应的主类别和子类别，并将分类结果存储到<code>sub_type</code>和<code>main_type</code>列表中。如果某个商品的分词结果中的词语没有匹配到任何分类配置，那么该商品将被标记为’其他’类别。最后，通过打印列表长度的方式进行检查。</p>
<p>也没什么特别的技术如果循环算的话</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">&#x27;sub_type&#x27;</span>] = sub_type</span><br><span class="line">data[<span class="string">&#x27;main_type&#x27;</span>] = main_type</span><br><span class="line">data[<span class="string">&#x27;sub_type&#x27;</span>].value_counts()</span><br><span class="line">data[<span class="string">&#x27;main_type&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>
<p>这段代码用于对分类结果进行统计分析，具体进行了以下操作：</p>
<ol>
<li><code>data['sub_type'] = sub_type</code> 和 <code>data['main_type'] = main_type</code>：将分类结果存储到<code>data</code>数据集的<code>sub_type</code>和<code>main_type</code>列中。通过这两行代码，将分类结果与原始数据关联起来，方便后续的分析和处理。</li>
<li><code>data['sub_type'].value_counts()</code>：使用<code>value_counts()</code>函数对<code>data</code>数据集中的<code>sub_type</code>列进行统计，计算每个子类别出现的次数。该函数会返回一个包含子类别和对应出现次数的统计结果。</li>
<li><code>data['main_type'].value_counts()</code>：使用<code>value_counts()</code>函数对<code>data</code>数据集中的<code>main_type</code>列进行统计，计算每个主类别出现的次数。该函数会返回一个包含主类别和对应出现次数的统计结果。</li>
</ol>
<p>通过这段代码，可以获取商品分类结果中每个子类别和主类别的出现次数统计。这对于分析商品分类的分布情况、了解主要类别和次要类别的比例以及进行后续的数据洞察和决策都是有帮助的。</p>
<p>也没有什么特别技术</p>
<h4 id="添加是否是男的使用">添加是否是男的使用</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">gender = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">in</span> data.item_name_cut[i]:</span><br><span class="line">        gender.append(<span class="string">&#x27;是&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;男士&#x27;</span> <span class="keyword">in</span> data.item_name_cut[i]:</span><br><span class="line">        gender.append(<span class="string">&#x27;是&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&#x27;男生&#x27;</span> <span class="keyword">in</span> data.item_name_cut[i]:</span><br><span class="line">        gender.append(<span class="string">&#x27;是&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        gender.append(<span class="string">&#x27;否&#x27;</span>)</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 将“是否男士专用”新增为一列</span></span><br><span class="line">data[<span class="string">&#x27;是否男士专用&#x27;</span>] = gender</span><br><span class="line">data[<span class="string">&#x27;是否男士专用&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>
<p>添加一列是不是男性专用</p>
<h4 id="计算销量之类的">计算销量之类的</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 销售额=销售量*价格</span></span><br><span class="line">data[<span class="string">&#x27;销售额&#x27;</span>] = data.sale_count*data.price</span><br><span class="line"><span class="comment"># 转换时间格式</span></span><br><span class="line">data[<span class="string">&#x27;update_time&#x27;</span>] = pd.to_datetime(data[<span class="string">&#x27;update_time&#x27;</span>])</span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;update_time&#x27;</span>]</span><br><span class="line"><span class="comment"># 将时间设置为新的index</span></span><br><span class="line">data = data.set_index(<span class="string">&#x27;update_time&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增时间“天”为一列</span></span><br><span class="line">data[<span class="string">&#x27;day&#x27;</span>] = data.index.day</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除中文分词的一列</span></span><br><span class="line"><span class="keyword">del</span> data[<span class="string">&#x27;item_name_cut&#x27;</span>]</span><br><span class="line">data.head() </span><br><span class="line">data.info()</span><br></pre></td></tr></table></figure>
<ol>
<li><code>data['销售额'] = data.sale_count*data.price</code>：计算销售额，将销售量<code>sale_count</code>和价格<code>price</code>相乘，将结果存储在<code>销售额</code>列中。</li>
<li><code>data['update_time'] = pd.to_datetime(data['update_time'])</code>：将<code>update_time</code>列的数据转换为日期时间格式，使用<code>pd.to_datetime()</code>函数进行转换。</li>
<li><code>data['update_time']</code>：打印<code>update_time</code>列的数据，显示转换后的日期时间格式。</li>
<li><code>data = data.set_index('update_time')</code>：将<code>update_time</code>列设置为数据集的新索引，通过<code>set_index()</code>函数实现。</li>
<li><code>data['day'] = data.index.day</code>：新增一个名为<code>day</code>的列，用于存储日期时间索引中的天数。</li>
<li><code>del data['item_name_cut']</code>：删除数据集中的<code>item_name_cut</code>列，通过<code>del</code>关键字实现。</li>
<li><code>data.head()</code>：打印数据集的前几行，显示经过处理和转换后的数据。</li>
<li><code>data.info()</code>：打印数据集的信息，包括列名、数据类型和非空值数量等。</li>
</ol>
<p>这段代码主要用于对数据集进行预处理和转换，包括计算销售额、转换时间格式、设置新的索引、新增列、删除不需要的列等操作。这些处理和转换可以使数据集更加方便和适合进行后续的分析和计算。</p>
<p>技术各种数学计算</p>
<h4 id="保存清理好的数据">保存清理好的数据</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保存清理好的数据为Excel格式</span></span><br><span class="line">data.to_excel(<span class="string">&#x27;clean_beautymakeup.xls&#x27;</span>,sheet_name=<span class="string">&#x27;clean_data&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>到这一步终于清理好数据预处理完毕</p>
<p>技术<code>pandas</code>的保存为excel</p>
<h3 id="数据分析">数据分析</h3>
<h4 id="sku分析">sku分析</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line">data.columns</span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]  <span class="comment">#指定默认字体  </span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span>  <span class="comment">#解决负号&#x27;-&#x27;显示为方块的问题</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>,<span class="number">6</span>))</span><br><span class="line"><span class="comment"># 计算各店铺的商品数量</span></span><br><span class="line">data[<span class="string">&#x27;店名&#x27;</span>].value_counts().sort_values(ascending=<span class="literal">False</span>).plot.bar(width=<span class="number">0.8</span>,alpha=<span class="number">0.6</span>,color=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&#x27;各品牌SKU数&#x27;</span>,fontsize=<span class="number">18</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;商品数量&#x27;</span>,fontsize=<span class="number">14</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码使用了<code>Matplotlib</code>和<code>Seaborn</code>库来进行<strong>数据可视化</strong>，主要实现了以下功能：</p>
<ol>
<li><code>import matplotlib.pyplot as plt</code> 和 <code>import seaborn as sns</code>：导入Matplotlib和Seaborn库，用于绘图和数据可视化。</li>
<li><code>%matplotlib inline</code>：这是一个Jupyter Notebook的魔法命令，用于在Notebook中显示Matplotlib绘制的图形。</li>
<li><code>data.columns</code>：打印数据集的列名，显示数据集中的所有列。</li>
<li><code>plt.rcParams['font.sans-serif']=['SimHei']</code> 和 <code>plt.rcParams['axes.unicode_minus']=False</code>：设置Matplotlib的字体和解决负号显示问题的配置，其中<code>SimHei</code>是指定的中文字体。</li>
<li><code>plt.figure(figsize=(8,6))</code>：创建一个新的图形，并指定图形的大小为8x6英寸。</li>
<li><code>data['店名'].value_counts().sort_values(ascending=False).plot.bar(width=0.8,alpha=0.6,color='b')</code>：计算每个店铺的商品数量，并将结果按照降序绘制成柱状图。<code>data['店名'].value_counts()</code>用于计算每个店铺的商品数量，<code>sort_values(ascending=False)</code>用于按照降序排序，<code>plot.bar()</code>用于绘制柱状图，<code>width=0.8</code>指定柱子的宽度，<code>alpha=0.6</code>指定柱子的透明度，<code>color='b'</code>指定柱子的颜色为蓝色。</li>
<li><code>plt.title('各品牌SKU数',fontsize=18)</code>：设置图形的标题为&quot;各品牌SKU数&quot;，并指定标题的字体大小为18。</li>
<li><code>plt.ylabel('商品数量',fontsize=14)</code>：设置y轴的标签为&quot;商品数量&quot;，并指定标签的字体大小为14。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>这段代码的目的是绘制一个柱状图，展示各个店铺的商品数量。通过可视化数据，可以更直观地比较不同店铺之间的SKU（库存商品单位）数量差异，帮助分析和决策。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420144954733.png" alt></p>
<h4 id="品牌销售量">品牌销售量</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">12</span>,<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">ax1 = data.groupby(<span class="string">&#x27;店名&#x27;</span>).sale_count.<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">True</span>).plot(kind=<span class="string">&#x27;barh&#x27;</span>,ax=axes[<span class="number">0</span>],width=<span class="number">0.6</span>)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;品牌总销售量&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line">ax1.set_xlabel(<span class="string">&#x27;总销售量&#x27;</span>)</span><br><span class="line"></span><br><span class="line">ax2 = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;销售额&#x27;</span>].<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">True</span>).plot(kind=<span class="string">&#x27;barh&#x27;</span>,ax=axes[<span class="number">1</span>],width=<span class="number">0.6</span>)</span><br><span class="line">ax2.set_title(<span class="string">&#x27;品牌总销售额&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line">ax2.set_xlabel(<span class="string">&#x27;总销售额&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplots_adjust(wspace=<span class="number">0.4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码使用了Matplotlib库来创建一个包含两个子图的图形，主要实现了以下功能：</p>
<ol>
<li>
<p><code>fig,axes = plt.subplots(1,2,figsize=(12,10))</code>：创建一个包含1行2列的图形，指定图形的大小为12x10英寸，并将返回的图形对象存储在<code>fig</code>和<code>axes</code>变量中。</p>
</li>
<li>
<p><code>ax1 = data.groupby('店名').sale_count.sum().sort_values(ascending=True).plot(kind='barh',ax=axes[0],width=0.6)</code>：对数据集按照店铺进行分组，计算每个店铺的总销售量，然后按照升序排序，并绘制水平条形图。<code>kind='barh'</code>指定绘图类型为水平条形图，<code>ax=axes[0]</code>指定子图的位置为第一个子图，<code>width=0.6</code>指定条形的宽度为0.6。绘制完成后，将返回的图形对象存储在<code>ax1</code>变量中。</p>
</li>
<li>
<p><code>ax1.set_title('品牌总销售量',fontsize=12)</code>：设置第一个子图的标题为&quot;品牌总销售量&quot;，并指定标题的字体大小为12。</p>
</li>
<li>
<p><code>ax1.set_xlabel('总销售量')</code>：设置第一个子图的x轴标签为&quot;总销售量&quot;。</p>
</li>
<li>
<p><code>ax2 = data.groupby('店名')['销售额'].sum().sort_values(ascending=True).plot(kind='barh',ax=axes[1],width=0.6)</code>：对数据集按照店铺进行分组，计算每个店铺的总销售额，然后按照升序排序，并绘制水平条形图。<code>kind='barh'</code>指定绘图类型为水平条形图，<code>ax=axes[1]</code>指定子图的位置为第二个子图，<code>width=0.6</code>指定条形的宽度为0.6。绘制完成后，将返回的图形对象存储在<code>ax2</code>变量中。</p>
</li>
<li>
<p><code>ax2.set_title('品牌总销售额',fontsize=12)</code>：设置第二个子图的标题为&quot;品牌总销售额&quot;，并指定标题的字体大小为12。</p>
</li>
<li>
<p><code>ax2.set_xlabel('总销售额')</code>：设置第二个子图的x轴标签为&quot;总销售额&quot;。</p>
</li>
<li>
<p><code>plt.subplots_adjust(wspace=0.4)</code>：调整子图之间的水平间距为0.4，以便更好地显示。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>这段代码的目的是绘制两个水平条形图，分别展示每个店铺的总销售量和总销售额。通过可视化数据，可以直观地比较不同店铺之间的销售情况，帮助分析和决策。</p>
<h4 id="各种类占比和可视化-使用饼图">各种类占比和可视化 使用饼图</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">12</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">data1 = data.groupby(<span class="string">&#x27;main_type&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">ax1 = data1.plot(kind=<span class="string">&#x27;pie&#x27;</span>,ax=axes[<span class="number">0</span>],autopct=<span class="string">&#x27;%.1f%%&#x27;</span>, <span class="comment"># 设置百分比的格式，这里保留一位小数</span></span><br><span class="line">pctdistance=<span class="number">0.8</span>, <span class="comment"># 设置百分比标签与圆心的距离</span></span><br><span class="line">labels= data1.index,</span><br><span class="line">labeldistance = <span class="number">1.05</span>, <span class="comment"># 设置标签与圆心的距离</span></span><br><span class="line">startangle = <span class="number">60</span>, <span class="comment"># 设置饼图的初始角度</span></span><br><span class="line">radius = <span class="number">1.1</span>, <span class="comment"># 设置饼图的半径</span></span><br><span class="line">counterclock = <span class="literal">False</span>, <span class="comment"># 是否逆时针，这里设置为顺时针方向</span></span><br><span class="line">wedgeprops = &#123;<span class="string">&#x27;linewidth&#x27;</span>: <span class="number">1.2</span>, <span class="string">&#x27;edgecolor&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;,<span class="comment"># 设置饼图内外边界的属性值</span></span><br><span class="line">textprops = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">10</span>, <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;, <span class="comment"># 设置文本标签的属性值</span></span><br><span class="line">)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;主类别销售量占比&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">data2 = data.groupby(<span class="string">&#x27;sub_type&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">ax2 = data2.plot(kind=<span class="string">&#x27;pie&#x27;</span>,ax=axes[<span class="number">1</span>],autopct=<span class="string">&#x27;%.1f%%&#x27;</span>, </span><br><span class="line">pctdistance=<span class="number">0.8</span>, </span><br><span class="line">labels= data2.index,</span><br><span class="line">labeldistance = <span class="number">1.05</span>,</span><br><span class="line">startangle = <span class="number">230</span>, </span><br><span class="line">radius = <span class="number">1.1</span>, </span><br><span class="line">counterclock = <span class="literal">False</span>, </span><br><span class="line">wedgeprops = &#123;<span class="string">&#x27;linewidth&#x27;</span>: <span class="number">1.2</span>, <span class="string">&#x27;edgecolor&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;,</span><br><span class="line">textprops = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">10</span>, <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;, </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ax2.set_title(<span class="string">&#x27;子类别销售量占比&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">plt.subplots_adjust(wspace=<span class="number">0.4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码使用Matplotlib库创建了一个包含两个子图的图形，主要实现了以下功能：</p>
<p>fig,axes = plt.subplots(1,2,figsize=(12,5))：创建一个包含1行2列的图形，指定图形的大小为12x5英寸，并将返回的图形对象存储在fig和axes变量中。</p>
<p>data1 = data.groupby(‘main_type’)[‘sale_count’].sum()：按照&quot;main_type&quot;列对数据集进行分组，计算每个主类别的销售量总和，并将结果存储在data1变量中。</p>
<p>ax1 = data1.plot(kind=‘pie’,ax=axes[0],autopct=‘%.1f%%’, pctdistance=0.8, labels=data1.index, labeldistance=1.05, startangle=60, radius=1.1, counterclock=False, wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}, textprops={‘fontsize’:10, ‘color’:‘k’})：绘制第一个子图，使用饼图展示每个主类别的销售量占比。kind=‘pie’指定绘图类型为饼图，ax=axes[0]指定子图的位置为第一个子图，autopct=’%.1f%%'设置百分比的显示格式，pctdistance=0.8设置百分比标签与圆心的距离，labels=data1.index指定饼图的标签为主类别的名称，labeldistance=1.05设置标签与圆心的距离，startangle=60设置饼图的初始角度，radius=1.1设置饼图的半径，counterclock=False设置饼图的绘制方向为顺时针，wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}设置饼图内外边界的属性，textprops={‘fontsize’:10, ‘color’:‘k’}设置文本标签的属性。绘制完成后，将返回的图形对象存储在ax1变量中。</p>
<p>ax1.set_title(‘主类别销售量占比’,fontsize=12)：设置第一个子图的标题为&quot;主类别销售量占比&quot;，并指定标题的字体大小为12。</p>
<p>data2 = data.groupby(‘sub_type’)[‘sale_count’].sum()：按照&quot;sub_type&quot;列对数据集进行分组，计算每个子类别的销售量总和，并将结果存储在data2变量中。</p>
<p>ax2 = data2.plot(kind=‘pie’,ax=axes[1],autopct=‘%.1f%%’, pctdistance=0.8, labels=data2.index, labeldistance=1.05, startangle=230, radius=1.1, counterclock=False, wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}, textprops={‘fontsize’:10, ‘color’:‘k’})：绘制第二个子图，使用饼图展示每个子类别的销售量占比。参数的含义和设置方式与第一个子图类似，只是绘图数据和标题不同。绘制完成后，将返回的图形对象存储在ax2变量中。</p>
<p>ax2.set_title(‘子类别销售量占比’,fontsize=12)：设置第二个子图的标题为&quot;子类别销售量占比&quot;，并指定标题的字体大小为12。</p>
<p>plt.subplots_adjust(wspace=0.4)：调整子图之间的水平间距为0.4，以便更好地显示。</p>
<p>plt.show()：显示绘制的图形。</p>
<p>这段代码的目的是绘制两个饼图，分别展示主类别和子类别的销售量占比。通过可视化数据，可以直观地了解各个类别在销售中的贡献比例，帮助分析和决策。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420151747132.png" alt="image-20240420151747132"></p>
<h4 id="各品牌各总类的的各种属性">各品牌各总类的的各种属性</h4>
<h5 id="销量">销量</h5>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">14</span>,<span class="number">6</span>))</span><br><span class="line">sns.barplot(x=<span class="string">&#x27;店名&#x27;</span>,y=<span class="string">&#x27;sale_count&#x27;</span>,hue=<span class="string">&#x27;main_type&#x27;</span>,data=data,saturation=<span class="number">0.75</span>,ci=<span class="number">0</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;各品牌各总类的总销量&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;销量&#x27;</span>)</span><br><span class="line">plt.text(<span class="number">0</span>,<span class="number">78000</span>,<span class="string">&#x27;注：此处也可使用堆叠图，对比效果更直观&#x27;</span>,</span><br><span class="line">         verticalalignment=<span class="string">&#x27;top&#x27;</span>, horizontalalignment=<span class="string">&#x27;left&#x27;</span>,color=<span class="string">&#x27;gray&#x27;</span>, fontsize=<span class="number">10</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>使用<code>matplot</code>创建柱状图</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420152138014.png" alt="image-20240420152138014"></p>
<h5 id="销售额">销售额</h5>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = (<span class="number">14</span>,<span class="number">6</span>))</span><br><span class="line">sns.barplot( x = <span class="string">&#x27;店名&#x27;</span>,</span><br><span class="line">y = <span class="string">&#x27;销售额&#x27;</span>,hue = <span class="string">&#x27;main_type&#x27;</span>,data =data,saturation = <span class="number">0.75</span>,ci=<span class="number">0</span>,)</span><br><span class="line">plt.title(<span class="string">&#x27;各品牌各总类的总销售额&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;销售额&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>重复的我就不写了</p>
<h4 id="各销售物品的平均评论数">各销售物品的平均评论数</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = (<span class="number">12</span>,<span class="number">6</span>))</span><br><span class="line">data.groupby(<span class="string">&#x27;店名&#x27;</span>).comment_count.mean().sort_values(ascending=<span class="literal">False</span>).plot(kind=<span class="string">&#x27;bar&#x27;</span>,width=<span class="number">0.8</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;各品牌商品的平均评论数&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;评论数&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个条形图，显示各个品牌商品的平均评论数。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,6))</code>：设置图形的大小为12英寸宽和6英寸高，创建一个新的图形窗口。</li>
<li><code>data.groupby('店名').comment_count.mean()</code>：对数据集 <code>data</code> 按照 ‘店名’ 进行分组，然后计算每个组中 ‘comment_count’ 列的平均值。这将返回一个包含各个品牌的平均评论数的 Series 对象。</li>
<li><code>.sort_values(ascending=False)</code>：对平均评论数进行降序排序，以便条形图能够按照从高到低的顺序显示。</li>
<li><code>.plot(kind='bar', width=0.8)</code>：以条形图的形式绘制数据。参数 <code>kind='bar'</code> 指定绘制条形图，<code>width=0.8</code> 指定条形的宽度为0.8。</li>
<li><code>plt.title('各品牌商品的平均评论数')</code>：设置图形的标题为 ‘各品牌商品的平均评论数’。</li>
<li><code>plt.ylabel('评论数')</code>：设置y轴标签为 ‘评论数’。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和评论数信息，绘制一个条形图，以展示各个品牌商品的平均评论数，并按照评论数从高到低的顺序进行排序。</p>
<p>当然这个使用了<code>pandas的groupby</code></p>
<h4 id="品牌热度的分析">品牌热度的分析</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">x = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].mean()</span><br><span class="line">y = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;comment_count&#x27;</span>].mean()</span><br><span class="line">s = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;price&#x27;</span>].mean()</span><br><span class="line">txt = data.groupby(<span class="string">&#x27;店名&#x27;</span>).<span class="built_in">id</span>.count().index</span><br><span class="line"></span><br><span class="line">sns.scatterplot(x,y,size=s,hue=s,sizes=(<span class="number">100</span>,<span class="number">1500</span>),data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(txt)):</span><br><span class="line">    plt.annotate(txt[i],xy=(x[i],y[i]))</span><br><span class="line">    </span><br><span class="line">plt.ylabel(<span class="string">&#x27;热度&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;销量&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个散点图，以显示不同品牌商品的销量、评论数和价格之间的关系。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,10))</code>：设置图形的大小为12英寸宽和10英寸高，创建一个新的图形窗口。</li>
<li><code>x = data.groupby('店名')['sale_count'].mean()</code>：计算每个品牌的平均销量，并将结果存储在变量 <code>x</code> 中。</li>
<li><code>y = data.groupby('店名')['comment_count'].mean()</code>：计算每个品牌的平均评论数，并将结果存储在变量 <code>y</code> 中。</li>
<li><code>s = data.groupby('店名')['price'].mean()</code>：计算每个品牌的平均价格，并将结果存储在变量 <code>s</code> 中。</li>
<li><code>txt = data.groupby('店名').id.count().index</code>：获取每个品牌的名称，并将结果存储在变量 <code>txt</code> 中。</li>
<li><code>sns.scatterplot(x, y, size=s, hue=s, sizes=(100,1500), data=data)</code>：使用 seaborn 库的 <code>scatterplot</code> 函数绘制散点图。参数 <code>x</code> 和 <code>y</code> 分别指定 x 轴和 y 轴的数据，<code>size=s</code> 指定散点的大小与平均价格相关，<code>hue=s</code> 指定散点的颜色与平均价格相关，<code>sizes=(100,1500)</code> 指定散点的大小范围，<code>data=data</code> 指定使用的数据集。</li>
<li><code>for i in range(len(txt)): plt.annotate(txt[i],xy=(x[i],y[i]))</code>：使用循环遍历每个品牌的名称，并在对应的散点上标注品牌名称。</li>
<li><code>plt.ylabel('热度')</code>：设置 y 轴标签为 ‘热度’。</li>
<li><code>plt.xlabel('销量')</code>：设置 x 轴标签为 ‘销量’。</li>
<li><code>plt.legend(loc='upper left')</code>：显示图例，将图例放置在左上角。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌、销量、评论数和价格信息，绘制一个散点图，用于展示不同品牌商品之间的销量、评论数和价格的分布情况，并在散点上标注品牌名称。</p>
<p>使用了<code>matplot</code>画散点图的技术</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420154606255.png" alt="image-20240420154606255"></p>
<h4 id="价格箱型图">价格箱型图</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#查看价格的箱型图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">14</span>,<span class="number">6</span>))</span><br><span class="line">sns.boxplot(x=<span class="string">&#x27;店名&#x27;</span>,y=<span class="string">&#x27;price&#x27;</span>,data=data)</span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">3000</span>)<span class="comment">#如果不限制，就不容易看清箱型，所以把Y轴刻度缩小为0-3000</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个箱型图，以展示不同品牌商品的价格分布情况。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(14,6))</code>：设置图形的大小为14英寸宽和6英寸高，创建一个新的图形窗口。</li>
<li><code>sns.boxplot(x='店名', y='price', data=data)</code>：使用 seaborn 库的 <code>boxplot</code> 函数绘制箱型图。参数 <code>x='店名'</code> 指定箱型图的横轴为品牌名称，<code>y='price'</code> 指定箱型图的纵轴为价格，<code>data=data</code> 指定使用的数据集。</li>
<li><code>plt.ylim(0,3000)</code>：限制 y 轴的范围为0到3000，这样可以缩小 y 轴的刻度范围，使得箱型图更容易观察。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和价格信息，绘制一个箱型图，用于展示不同品牌商品的价格分布情况。通过箱型图，可以看到不同品牌商品的价格的中位数、上下四分位数、异常值等统计信息，以帮助分析价格的整体分布和离群值情况。限制 y 轴范围为0到3000是为了缩小刻度范围，更好地展示箱型图的细节。</p>
<p>使用了一个<code>matplot</code>画箱型图</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420154549889.png" alt="image-20240420154549889"></p>
<h4 id="个品牌的平均价格">个品牌的平均价格</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.groupby(<span class="string">&#x27;店名&#x27;</span>).price.<span class="built_in">sum</span>()</span><br><span class="line">avg_price=data.groupby(<span class="string">&#x27;店名&#x27;</span>).price.<span class="built_in">sum</span>()/data.groupby(<span class="string">&#x27;店名&#x27;</span>).price.count()</span><br><span class="line">avg_price</span><br></pre></td></tr></table></figure>
<p>这段代码计算了每个店铺商品的平均价格。代码的功能如下：</p>
<ol>
<li><code>data.groupby('店名').price.sum()</code>：对数据集 <code>data</code> 按照 ‘店名’ 进行分组，然后计算每个组中 ‘price’ 列的总和。这将返回一个包含各个店铺商品价格总和的 Series 对象。</li>
<li><code>avg_price = data.groupby('店名').price.sum() / data.groupby('店名').price.count()</code>：计算每个店铺商品的平均价格。首先，使用 <code>data.groupby('店名').price.sum()</code> 计算每个店铺商品价格的总和；然后，使用 <code>data.groupby('店名').price.count()</code> 计算每个店铺商品的数量；最后，将价格总和除以商品数量，得到每个店铺商品的平均价格。结果存储在变量 <code>avg_price</code> 中。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的店铺和价格信息，计算每个店铺商品的平均价格，并将结果存储在变量 <code>avg_price</code> 中。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig = plt.figure(figsize=(<span class="number">12</span>,<span class="number">6</span>))</span><br><span class="line">avg_price.sort_values(ascending=<span class="literal">False</span>).plot(kind=<span class="string">&#x27;bar&#x27;</span>,width=<span class="number">0.8</span>,alpha=<span class="number">0.6</span>,color=<span class="string">&#x27;b&#x27;</span>,label=<span class="string">&#x27;各品牌平均价格&#x27;</span>)</span><br><span class="line">y = data[<span class="string">&#x27;price&#x27;</span>].mean()</span><br><span class="line">plt.axhline(y,<span class="number">0</span>,<span class="number">5</span>,color=<span class="string">&#x27;r&#x27;</span>,label=<span class="string">&#x27;全品牌平均价格&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;各品牌平均价格&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;各品牌产品的平均价格&#x27;</span>,fontsize=<span class="number">24</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个条形图，展示各个品牌产品的平均价格，并在图中添加全品牌平均价格的水平线。代码的功能如下：</p>
<ol>
<li>
<p><code>fig = plt.figure(figsize=(12,6))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和6英寸高。</p>
</li>
<li>
<p><code>avg_price.sort_values(ascending=False).plot(kind='bar', width=0.8, alpha=0.6, color='b', label='各品牌平均价格')</code>：对平均价格进行降序排序，并以条形图的形式绘制数据。参数 <code>kind='bar'</code> 指定绘制条形图，<code>width=0.8</code> 指定条形的宽度为0.8，<code>alpha=0.6</code> 指定条形的透明度为0.6，<code>color='b'</code> 指定条形的颜色为蓝色，<code>label='各品牌平均价格'</code> 指定图例标签为’各品牌平均价格’。</p>
</li>
<li>
<p><code>y = data['price'].mean()</code>：计算全品牌的平均价格，并将结果存储在变量 <code>y</code> 中。</p>
</li>
<li>
<p><code>plt.axhline(y, 0, 5, color='r', label='全品牌平均价格')</code>：在图中添加一条水平线，表示全品牌平均价格。<code>y</code> 参数指定水平线的 y 坐标，<code>0</code> 和 <code>5</code> 参数指定水平线的起始和结束位置，<code>color='r'</code> 指定水平线的颜色为红色，<code>label='全品牌平均价格'</code> 指定图例标签为’全品牌平均价格’。</p>
</li>
<li>
<p><code>plt.ylabel('各品牌平均价格')</code>：设置 y 轴标签为’各品牌平均价格’。</p>
</li>
<li>
<p><code>plt.title('各品牌产品的平均价格', fontsize=24)</code>：设置图形的标题为’各品牌产品的平均价格’，并指定标题的字体大小为24。</p>
</li>
<li>
<p><code>plt.legend(loc='best')</code>：显示图例，并将图例放置在最佳位置。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和价格信息，绘制一个条形图，显示各个品牌产品的平均价格，并在图中添加全品牌平均价格的水平线。图形还包括标签、标题和图例等元素，以增强可读性。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420155027534.png" alt="image-20240420155027534"></p>
<h4 id="销量价格之间关系">销量价格之间关系</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(<span class="number">12</span>,<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">x = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].mean()</span><br><span class="line">y = data.groupby(<span class="string">&#x27;店名&#x27;</span>)[<span class="string">&#x27;销售额&#x27;</span>].mean()</span><br><span class="line">s = avg_price</span><br><span class="line">txt = data.groupby(<span class="string">&#x27;店名&#x27;</span>).<span class="built_in">id</span>.count().index</span><br><span class="line"></span><br><span class="line">sns.scatterplot(x,y,size=s,sizes=(<span class="number">100</span>,<span class="number">1500</span>),marker=<span class="string">&#x27;v&#x27;</span>,alpha=<span class="number">0.5</span>,color=<span class="string">&#x27;b&#x27;</span>,data=data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(txt)):</span><br><span class="line">    plt.annotate(txt[i],xy=(x[i],y[i]),xytext = (x[i]+<span class="number">0.2</span>, y[i]+<span class="number">0.2</span>))  <span class="comment">#在散点后面增加品牌信息的标签</span></span><br><span class="line">    </span><br><span class="line">plt.ylabel(<span class="string">&#x27;销售额&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;销量&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper left&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个散点图，展示不同店铺的销售额和销量之间的关系，并在散点图上添加店铺名称的标签。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,10))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和10英寸高。</li>
<li><code>x = data.groupby('店名')['sale_count'].mean()</code>：计算每个店铺的销量的平均值，并将结果存储在变量 <code>x</code> 中。</li>
<li><code>y = data.groupby('店名')['销售额'].mean()</code>：计算每个店铺的销售额的平均值，并将结果存储在变量 <code>y</code> 中。</li>
<li><code>s = avg_price</code>：将之前计算得到的平均价格存储在变量 <code>s</code> 中，用于设置散点的大小。</li>
<li><code>txt = data.groupby('店名').id.count().index</code>：获取每个店铺的名称，并将结果存储在变量 <code>txt</code> 中。</li>
<li><code>sns.scatterplot(x, y, size=s, sizes=(100,1500), marker='v', alpha=0.5, color='b', data=data)</code>：使用 seaborn 库的 <code>scatterplot</code> 函数绘制散点图。参数 <code>x</code> 指定散点的 x 坐标为销量的平均值，<code>y</code> 指定散点的 y 坐标为销售额的平均值，<code>size=s</code> 指定散点的大小为平均价格，<code>sizes=(100,1500)</code> 指定散点的大小范围为100到1500，<code>marker='v'</code> 指定散点的形状为倒三角形，<code>alpha=0.5</code> 指定散点的透明度为0.5，<code>color='b'</code> 指定散点的颜色为蓝色，<code>data=data</code> 指定使用的数据集。</li>
<li><code>for i in range(len(txt)):</code>：遍历每个店铺的名称。</li>
<li><code>plt.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i]+0.2, y[i]+0.2))</code>：在散点后面添加店铺名称的标签。参数 <code>txt[i]</code> 指定标签的文本为店铺名称，<code>xy=(x[i], y[i])</code> 指定标签的位置为对应的散点坐标，<code>xytext=(x[i]+0.2, y[i]+0.2)</code> 指定标签文本的位置偏移量。</li>
<li><code>plt.ylabel('销售额')</code>：设置 y 轴标签为’销售额’。</li>
<li><code>plt.xlabel('销量')</code>：设置 x 轴标签为’销量’。</li>
<li><code>plt.legend(loc='upper left')</code>：显示图例，并将图例放置在左上角。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的店铺的销量和销售额信息，绘制一个散点图，显示销售额和销量之间的关系，并在散点图上添加店铺名称的标签。图形还包括标签、标题和图例等元素，以增强可读性。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420160038024.png" alt="image-20240420160038024"></p>
<h4 id="男生的销量与销售额">男生的销量与销售额</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">f,[ax1,ax2]=plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">12</span>,<span class="number">6</span>))</span><br><span class="line">gender_data.groupby(<span class="string">&#x27;店名&#x27;</span>).sale_count.<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">True</span>).plot(kind=<span class="string">&#x27;barh&#x27;</span>,width=<span class="number">0.8</span>,ax=ax1)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;男士护肤品销量排名&#x27;</span>)</span><br><span class="line"></span><br><span class="line">gender_data.groupby(<span class="string">&#x27;店名&#x27;</span>).销售额.<span class="built_in">sum</span>().sort_values(ascending=<span class="literal">True</span>).plot(kind=<span class="string">&#x27;barh&#x27;</span>,width=<span class="number">0.8</span>,ax=ax2)</span><br><span class="line">ax2.set_title(<span class="string">&#x27;男士护肤品销售额排名&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.subplots_adjust(wspace=<span class="number">0.4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个包含两个水平条形图的子图，分别展示男士护肤品销量和销售额的排名。代码的功能如下：</p>
<ol>
<li><code>f, [ax1, ax2] = plt.subplots(1, 2, figsize=(12, 6))</code>：创建一个包含两个子图的图形窗口。参数 <code>1, 2</code> 指定子图的布局为1行2列，<code>figsize=(12, 6)</code> 指定图形的大小为12英寸宽和6英寸高。并将子图对象分别存储在 <code>ax1</code> 和 <code>ax2</code> 变量中。</li>
<li><code>gender_data.groupby('店名').sale_count.sum().sort_values(ascending=True).plot(kind='barh', width=0.8, ax=ax1)</code>：对男士护肤品的销量数据进行分组，计算每个店铺的销量总和，并按照升序排序。然后以水平条形图的形式绘制数据，并将图形绘制在第一个子图 <code>ax1</code> 上。参数 <code>kind='barh'</code> 指定绘制水平条形图，<code>width=0.8</code> 指定条形的宽度为0.8。</li>
<li><code>ax1.set_title('男士护肤品销量排名')</code>：设置第一个子图的标题为’男士护肤品销量排名’。</li>
<li><code>gender_data.groupby('店名').销售额.sum().sort_values(ascending=True).plot(kind='barh', width=0.8, ax=ax2)</code>：对男士护肤品的销售额数据进行分组，计算每个店铺的销售额总和，并按照升序排序。然后以水平条形图的形式绘制数据，并将图形绘制在第二个子图 <code>ax2</code> 上。</li>
<li><code>ax2.set_title('男士护肤品销售额排名')</code>：设置第二个子图的标题为’男士护肤品销售额排名’。</li>
<li><code>plt.subplots_adjust(wspace=0.4)</code>：调整两个子图之间的水平间距为0.4。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的男士护肤品的销量和销售额信息，绘制两个水平条形图的子图，分别展示男士护肤品销量和销售额的排名，并在图形中添加标题。同时通过调整子图之间的间距来改善布局。最后显示绘制的图形。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420160241804.png" alt="image-20240420160241804"></p>
<h4 id="销量随时间的变化的变化">销量随时间的变化的变化</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib.pyplot <span class="keyword">import</span> MultipleLocator</span><br><span class="line">plt.figure(figsize = (<span class="number">12</span>,<span class="number">6</span>))</span><br><span class="line">day_sale=data.groupby(<span class="string">&#x27;day&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">day_sale.plot()</span><br><span class="line">plt.grid(linestyle=<span class="string">&quot;-.&quot;</span>,color=<span class="string">&quot;gray&quot;</span>,axis=<span class="string">&quot;x&quot;</span>,alpha=<span class="number">0.5</span>)</span><br><span class="line">x_major_locator=MultipleLocator(<span class="number">1</span>)  <span class="comment">#把x轴的刻度间隔设置为1，并存在变量里</span></span><br><span class="line">ax=plt.gca()  <span class="comment">#ax为两条坐标轴的实例</span></span><br><span class="line">ax.xaxis.set_major_locator(x_major_locator)</span><br><span class="line"><span class="comment">#把x轴的主刻度设置为1的倍数</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;日期（11月）&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;销量&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码是用来绘制一个折线图，展示每天的销售量随时间的变化情况，并对图形进行一些样式设置。代码的功能如下：</p>
<ol>
<li>
<p><code>plt.figure(figsize=(12, 6))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和6英寸高。</p>
</li>
<li>
<p><code>day_sale = data.groupby('day')['sale_count'].sum()</code>：对数据集按照日期进行分组，并计算每天销售量的总和，并将结果存储在变量 <code>day_sale</code> 中。</p>
</li>
<li>
<p><code>day_sale.plot()</code>：以折线图的形式绘制每天销售量的变化情况。</p>
</li>
<li>
<p><code>plt.grid(linestyle=&quot;-.&quot;, color=&quot;gray&quot;, axis=&quot;x&quot;, alpha=0.5)</code>：添加网格线到图形中。参数 <code>linestyle=&quot;-.&quot;</code> 指定网格线的样式为虚线，<code>color=&quot;gray&quot;</code> 指定网格线的颜色为灰色，<code>axis=&quot;x&quot;</code> 指定只在 x 轴上显示网格线，<code>alpha=0.5</code> 指定网格线的透明度为0.5。</p>
</li>
<li>
<p><code>x_major_locator = MultipleLocator(1)</code>：创建一个 <code>MultipleLocator</code> 对象，用于设置 x 轴主刻度的间隔为1。这样可以确保 x 轴上的刻度显示为整数。</p>
</li>
<li>
<p><code>ax = plt.gca()</code>：获取当前图形的坐标轴对象。</p>
</li>
<li>
<p><code>ax.xaxis.set_major_locator(x_major_locator)</code>：将 x 轴的主刻度设置为 <code>x_major_locator</code> 对象指定的刻度间隔，即每隔1个单位显示一个刻度。</p>
</li>
<li>
<p><code>plt.xlabel('日期（11月）')</code>：设置 x 轴的标签为’日期（11月）'。</p>
</li>
<li>
<p><code>plt.ylabel('销量')</code>：设置 y 轴的标签为’销量’。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中每天的销售量数据，绘制一个折线图，展示销售量随时间的变化情况，并对图形进行一些样式设置，如添加网格线、设置坐标轴刻度和标签等。最后显示绘制的图形。</p>
<p><img src="/2024/04/20/spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/image-20240420160602719.png" alt="image-20240420160602719"></p>
]]></content>
      <tags>
        <tag>大数据分析</tag>
        <tag>淘宝美妆数据</tag>
      </tags>
  </entry>
  <entry>
    <title>vearyencrypt的使用</title>
    <url>/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="使用方法">使用方法</h3>
<h4 id="创建简单的加密卷">创建简单的加密卷</h4>
<p><strong>步骤1</strong></p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610100017060.png" alt="image-20240610100017060"></p>
<p>VeraCrypt 主窗口应该会出现。单击<strong>创建卷</strong>（为清楚起见，用红色矩形标记）。</p>
<p><strong>步骤2</strong></p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610100201782.png" alt="image-20240610100201782"></p>
<p><strong>步骤3</strong></p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610101117231.png" alt="image-20240610101117231"></p>
<p>点击“下一步”进入加密卷类型选择界面。标准加密卷是文件夹中的一个文件，隐藏加密卷是加密卷中的隐藏文件。关于隐藏加密卷和隐藏分区在后文备注，这里我们选择“标准VeraCrypt加密卷”。</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610101700902.png" alt="image-20240610101700902"></p>
<p>然后选择加密卷的存放位置：点击“选择文件”，找一个文件夹，输入保存文件的文件名，例如“windows.iso”。文件名可以是任意合法的文件名，不限定后缀。注意不要选择已有的文件，否则会删除其内容。</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610101826875.png" alt="image-20240610101826875"></p>
<p>接着选择加密算法和哈希算法。使用默认设置即可，除非你对密码学比较了解。</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610101913943.png" alt="image-20240610101913943"></p>
<p>点击下一步，选择加密卷的大小，比如1GB。</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610102017840.png" alt="image-20240610102017840"></p>
<p>确定好好加密卷大小后设置加密卷的密码：</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610102104223.png" alt="image-20240610102104223"></p>
<p>最后选择文件系统格式和簇大小。文件系统建议使用”exFAT”或“NTFS”，簇大小保持默认或“4KB”，然后点击“格式化”。”NTFS“格式化过程中可能会出现授权弹框，点击确定即可：</p>
<p><img src="/2024/06/10/vearyencrypt%E7%9A%84%E4%BD%BF%E7%94%A8/image-20240610102129183.png" alt="image-20240610102129183"></p>
<h4 id="加密隐藏卷">加密隐藏卷</h4>
<p>结合上述内容，自己动手实践，读者到这里应该对加密卷有基本的理解。在加密卷基础上，可以进行更高层次的文件保护，那就是选择类型时出现的“隐藏加密卷/设备/设备”。因隐藏加密卷和隐藏分区/设备的操作相同，本节以下内容以(隐藏)加密卷做说明。</p>
<p>首先澄清一下概念，“隐藏卷”和“卷中卷/嵌套卷”有所不同。嵌套卷是在一个加密卷里再放一个加密文件卷，类似于RAR文件中的RAR文件；隐藏卷是在卷中划分出一片空间给隐藏卷使用，不是简单在里面放加密卷。如果只打开外层加密卷，<strong>看不到隐藏卷的内容，也不能知道是否有隐藏卷</strong>。这正是隐藏加密卷的厉害之处。</p>
<p>除非事先知道有隐藏卷，否则无法判断，VeraCrypt也不知道加密卷内是否有隐藏的内容。因为隐藏卷必然伴随着外层卷，如何操作两者是有讲究的。</p>
<p>对含有隐藏卷的加密卷，有三种操作模式：</p>
<ol>
<li>打开加密卷时，只输入外层卷密码。这种模式直接打开外层卷，可对其进行读写。由于VeraCrypt不知道是否有隐藏卷，往加密卷中写内容可能会<strong>损坏隐藏卷的数据</strong>。如果你知道有隐藏卷，在加载时可以点击“加载选项”，在弹框中勾选“以只读模式加载加密卷”，保护隐藏卷的数据；</li>
<li>打开加密卷时，只输入隐藏卷的密码。这种模式直接显示隐藏卷，隐藏卷的操作不影响外层卷；</li>
<li>打开加密卷时，先输入外层卷的密码，同时在“加载选项”弹框中勾选“向外层加密卷写入数据时保护隐藏加密卷”，并输入隐藏卷的密码。这种模式打开外层卷，但VeraCrypt知道含有隐藏卷，写数据时不会覆盖隐藏卷占用的空间，数据是安全的。往外层卷写入大量数据，即使外层卷空间不足，VeraCrypt也不会往隐藏卷上写数据，而是直接提示“写入失败”。</li>
</ol>
<p>如果有十分重要的数据需要放在隐藏卷中，外层加密卷应该存放一些“相对”不那么重要的文件，用以蒙蔽胁迫你说出密码的人。但千万要记住，不要说出隐藏卷的密码，否则会<strong>直接解锁隐藏卷</strong>！</p>
<h3 id="加密系统分区-设备">加密系统分区/设备</h3>
<p>如果想更安全的保护设备，可以考虑对系统盘/分区也进行全盘加密。系统盘加密后，系统启动过程中要先输入密码，解密硬盘数据后才能正常启动操作系统。目前MacOS、iOS、安卓等操作系统均支持使用全盘加密，硬盘拆下来也无法在其他设备上读取数据，大大提高安全性。</p>
<p>VeraCrypt仅支持对Windows进行系统盘加密，并且不支持2003等旧系统、安腾架构以及移动设备</p>
<h2 id="实用建议">实用建议</h2>
<p>以下是一些实用建议，能帮助你更好的保护隐私数据：</p>
<ol>
<li>实用文件卷加密数据时，文件名和后缀尽量选有欺骗性的，并将其放在常规地方。例如文件卷取名”Window10多合一纯净版.iso”，放在“软件/操作系统”文件夹下。对10G以下的加密卷，即使设备丢失后亦不会有人怀疑其中包含敏感数据。相反一个好几G大小的txt或者word文件就会让人很生疑。</li>
<li>如果有更私密的数据，建议使用隐藏卷功能；</li>
<li>文件加解密有一定的性能损耗，请选择必要的文件放入加密卷/设备内；</li>
<li>妥善管理密码，并建议加密时添加辅助解密的密钥文件；</li>
<li>如果可以，对新电脑使用全盘加密；将移动设备某个区作为加密分区使用，其他分区为普通分区。</li>
</ol>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>加密软件</tag>
      </tags>
  </entry>
  <entry>
    <title>wezterm配置</title>
    <url>/2025/09/19/wezterm%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>关于NERF</title>
    <url>/2024/04/18/%E5%85%B3%E4%BA%8ENERF/</url>
    <content><![CDATA[<h3 id="NERF的数学原理">NERF的数学原理</h3>
<p><code>nerf</code>简单的来讲就是，或者说其中的核心逻辑就是<code>camera pose</code>作为输入，<code>real image</code>作为输出监督，从而得到一个场景的隐式表示。</p>
<p>但是想要进一步学习，<strong>理解NeRF中的渲染公式为什么长下面这个样子？黎曼和的形式是如何推导出来的？</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><msub><mi>t</mi><mi>f</mi></msub></msubsup><mi>T</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="bold">c</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="bold">d</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo separator="true">,</mo><mtext> where </mtext><mi>T</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>d</mi><mi>s</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">C(\mathbf{r})=\int_{t_n}^{t_f} T(t) \sigma(\mathbf{r}(t)) \mathbf{c}(\mathbf{r}(t), \mathbf{d}) d t, \text { where } T(t)=\exp \left(-\int_{t_n}^t \sigma(\mathbf{r}(s)) d s\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord mathbf">c</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">d</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord"> where </span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">))</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p>
<h4 id="NeRF核心思想">NeRF核心思想</h4>
<p>在自然的生物中我们人眼是通过人眼输入的图像，经历神经网络层之后获得关于物体的3d模型的概念，<code>nerf</code>所希望的应用就是模拟人眼的视觉处理。</p>
<p>NERF算法的训练过程可以分为两个主要阶段：网络预训练和渲染器训练。下面是这两个阶段的详细说明：</p>
<ol>
<li>网络预训练（Network Pretraining）
<ul>
<li>数据准备：首先，需要准备一个包含多个视角图像和对应的相机参数的训练数据集。这些图像可以通过在真实世界场景中拍摄或使用计算机生成技术生成。当然也可以使用<code>3d软件</code>渲染的图片。或者自己写个渲染器来满足自己的要求</li>
<li>网络架构：NERF使用一个深度神经网络来表示场景的三维几何和光照属性。这个网络被称为编码器（Encoder），其实也就是一个多层感知机，在最初的<code>NERF</code>中只是单纯的深度神经网络，它将相机参数和图像坐标作为输入，并输出一个表示场景属性的向量。</li>
<li>监督训练：在网络预训练阶段，使用监督学习的方法来训练编码器网络。通过最小化网络输出和真实场景属性之间的损失函数（如均方误差，也可以是交叉熵看如何理解数据），来优化网络参数。这个损失函数可以度量生成图像与真实图像之间的差异。</li>
<li>优化：使用梯度下降等优化算法来更新网络参数，以最小化损失函数。</li>
</ul>
</li>
<li>渲染器训练（Renderer Training）
<ul>
<li>数据准备：在网络预训练完成后，需要准备一个新的训练数据集，包含场景的多个视角图像和对应的相机参数。这些图像可以是从真实场景中拍摄的或使用计算机生成技术生成的。还是可以由软件模拟生成。</li>
<li>渲染器架构：NERF使用另一个深度神经网络作为渲染器（Renderer），它接受场景的编码器表示作为输入，并输出场景的光线颜色。渲染器的目标是生成逼真的场景渲染结果。</li>
<li>自监督训练：在渲染器训练阶段，使用自监督学习的方法来训练渲染器网络。自监督学习通过最小化渲染结果与真实图像之间的损失函数来优化网络参数。这个损失函数可以度量生成图像与真实图像之间的差异。</li>
<li>优化：使用梯度下降等优化算法来更新渲染器网络参数，以最小化损失函数。</li>
</ul>
</li>
</ol>
<p>通过这两个阶段的训练，NERF算法可以学习到场景的三维几何形状和光照属性，并能够生成逼真的场景渲染结果。需要注意的是，NERF算法的训练需要大量的计算资源和时间，以便能够处理复杂的场景和生成高质量的渲染结果。</p>
<h4 id="体渲染公式">体渲染公式</h4>
<p>通俗来说，该点的像素计算方法为：从相机光心发出一条射线（camera ray）经过该像素坐标，途径三维场景很多点，这些“途径点”或称作“采样点”的某种累加决定了该像素的最终颜色。直观地展现了这个过程，也被称作**“体渲染”**。</p>
<p>数学上，它的颜色由下面的“体渲染公式”计算而出，其中  $$ c $$ 表示颜色， $$\sigma$$ 表示密度， $$r$$和 $$d$$ 分别表示camera ray上的距离和ray上的方向， $$t$$ 表示在camera ray上采样点离相机光心的距离。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><msub><mi>t</mi><mi>f</mi></msub></msubsup><mi>T</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="bold">c</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="bold">d</mi><mo stretchy="false">)</mo><mi>d</mi><mi>t</mi><mo separator="true">,</mo><mtext> where </mtext><mi>T</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>d</mi><mi>s</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">C(\mathbf{r})=\int_{t_n}^{t_f} T(t) \sigma(\mathbf{r}(t)) \mathbf{c}(\mathbf{r}(t), \mathbf{d}) d t, \text { where } T(t)=\exp \left(-\int_{t_n}^t \sigma(\mathbf{r}(s)) d s\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord mathbf">c</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">d</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord"> where </span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">))</span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p>
<p><strong>那我们如何知道得出这一个公式</strong></p>
<p>首先如同在编写渲染器的时候一样，我们会对光线进行一个简单的处理就是我们会会将认为光线是从眼睛中所发出的，这种做法基于的理论是光线是可逆的，在光线追踪的渲染器上这个减少了巨大的计算压力。</p>
<p>在体渲染中这个想法也是被应用上去光路是可逆的。所以在计算像素平面某点的像素值时，一般都通过相机发出射线来采样空间中的点并计算它们颜色的某种累加。</p>
<p>过程是：</p>
<ol>
<li>首先逆向计算出路径</li>
<li>从各个光源带上光源的颜色从各个光线路径沿路径进行积分</li>
<li>在相机将各个光线叠加</li>
</ol>
<p>假设一条光的Ray，Ray上的光照强度为$$I(s)$$ ，其中 $$s$$ 表示Ray上的位置。考虑Ray上极小的一段路径（圆柱体），其初始位置为 $$s$$ ，长度为 $$\Delta s \rightarrow 0$$，圆柱体的底面面积为 $$E$$，内部粒子密度为 $$\rho(s)$$ ，其中的粒子都是都是半径为 $$r$$​ 的小球。</p>
<p>如下图所示，红色的箭头表示从相机光心发出去的光线，蓝色的圆柱体为粒子碰撞，光发生吸收、反射的区域，多种颜色的小球为粒子，橙色的小箭头为实际光线的路径（注意到碰撞到小球的光线停下）。</p>
<p><img src="/2024/04/18/%E5%85%B3%E4%BA%8ENERF/image-20240422093650730.png" alt="诠释NeRF渲染公式"></p>
<p>碰到粒子的光都会被吸收或者反射，所以计算光被吸收的概率，就可以知道有多少光能够通过该段路径。因为 $$\Delta s \rightarrow 0  $$，粒子可以被近似当作平铺在圆柱体内部，粒子所占用的面积等于粒子数量 $$E \Delta s \rho(s)   $$ 乘以粒子的截面面积 $$\pi r^2$$ ，粒子所占用的面积比上总的圆柱体底面积为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi>E</mi><mi mathvariant="normal">Δ</mi><mi>s</mi><mi>ρ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>π</mi><msup><mi>r</mi><mn>2</mn></msup></mrow><mi>E</mi></mfrac><mo>=</mo><mi mathvariant="normal">Δ</mi><mi>s</mi><mi>ρ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi>π</mi><msup><mi>r</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\frac{E \Delta s \rho(s) \pi r^2}{E}=\Delta s \rho(s) \pi r^2 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.1771em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">Δ</span><span class="mord mathnormal">s</span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord mathnormal">s</span><span class="mord mathnormal">ρ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>意味着，光通过这段路径之后，光照强度变为：$$ I(s+\Delta s)=(1-\Delta s \rho(s) \pi r^2) I(s)$$​</p>
<p>光强度的变化量为：$$\Delta I=I(s+\Delta s)-I(s)=-\Delta s \rho(s) \pi r^2 I(s)$$</p>
<p>记$$-\rho(s) \pi r^2$$ ,则上述微分方程的解是：$$ I(s)=I(0) e^{\int_0^s-\sigma(t) d t} $$</p>
<p>上述式子中，记$$T(s)=e^{\int_0^s-\sigma(t) d t} $$</p>
<p>其中$$T(s)=e^{\int_0^s-\sigma(t) d t} $$,则有$$I(s)=I(0) T(s) $$​</p>
<p>其中这里的$$T(s)$$的物理意义就是透明度，表示当光线到到$$s$$​处的时候，光强的保留的幅度，从通俗的来将就是透过去多少光。</p>
<p>于是，记 $$F(s)=1-T(s) $$表示不透明度，表示当光线到达$$s$$处时，光线反射的幅度。我们可以近似认为 $$s$$ 处的粒子颜色都为 $$c(s)$$ (其实也可以说是s处光线颜色为c)，则最终的颜色输出可以表示为：$$E©=\int_0^{\infty} F^{\prime}(s) c(s) d s $$​</p>
<p>展开之后为：$$E©=\int_0^{\infty} T(s) \sigma(s) c(s) d s $$</p>
<p>这个式子就和==NeRF pape==r里面的式子长得非常相似了。一方面，<code>NeRF</code>将 $$\sigma(s) $$ 密度建模为一个仅和采样点三维坐标相关的量，将 $$c(s)$$颜色建模成一个和采样点三维坐标以及相机光线方向都有关的量；另外一方面，在实际计算的时候，往往会选择Ray上一个最近的点、一个最远的点，只计算两点之间的粒子对最终颜色的贡献。根据上述两个方面便可得到NeRF的最终公式。</p>
<h4 id="黎曼和形式推导">黎曼和形式推导</h4>
<p>上面的公式是无法应用于神经网络来进行实现的，换句话说，上述的积分形式是无法直接代码实现的，需要转化为黎曼求和的形式。</p>
<p>假设我们把采样的最近端和最远端设置成，将其划分成 $$N$$个小区间，那么第 $$i$$个区间在Ray上的位置就是 $$\left[t_n+\frac{i-1}{N}\left(t_f-t_n\right), t_n+\frac{i}{N}\left(t_f-t_n\right)\right]$$。该小区间的积分可以表示为：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup><mi>T</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi>σ</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="bold">c</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="bold">d</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo fence="true">)</mo></mrow><msub><mi>σ</mi><mi>i</mi></msub><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><mrow><mtext> </mtext><mi mathvariant="normal">d</mi></mrow><mi>t</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} C(\mathbf{r})_i &amp;=\int_{t_i}^{t_{i+1}} T(t) \sigma(\mathbf{r}(t)) \mathbf{c}(\mathbf{r}(t), \mathbf{d}) \mathrm{d} t \\ &amp;=\int_{t_i}^{t_{i+1}} \exp \left(-\int_{t_n}^t \sigma(s) \mathrm{d} s\right) \sigma_i \mathbf{c}_i \mathrm{~d} t \end{aligned} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.711em;vertical-align:-2.6055em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1055em;"><span style="top:-5.1055em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6055em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1055em;"><span style="top:-5.1055em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">))</span><span class="mord mathbf">c</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">d</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">d</span></span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6055em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>这个函数中，密度 $$\sigma(\mathbf{r}(t))$$ 和颜色 $$\mathbf{c}(\mathbf{r}(t), \mathbf{d})$$ 都可以在这个小区间内近似为常数，直接由MLP的输出来确定。而 𝑇(𝑡) 的值相对于小区间不能忽略，所以进一步简化上式，得到：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>σ</mi><mi>i</mi></msub><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>σ</mi><mi>i</mi></msub><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><msub><mi>t</mi><mi>i</mi></msub></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo fence="true">)</mo></mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>σ</mi><mi>i</mi></msub><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msub><mi>T</mi><mi>i</mi></msub><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>s</mi><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><mi>t</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} C(\mathbf{r})_i &amp;=\sigma_i \mathbf{c}_i \int_{t_i}^{t_{i+1}} \exp \left(-\int_{t_n}^t \sigma(s) \mathrm{d} s\right) \mathrm{d} t \\ &amp;=\sigma_i \mathbf{c}_i \int_{t_i}^{t_{i+1}} \exp \left(-\int_{t_n}^{t_i} \sigma(s) \mathrm{d} s\right) \exp \left(-\int_{t_i}^t \sigma(s) \mathrm{d} s\right) \mathrm{d} t \\ &amp;=\sigma_i \mathbf{c}_i T_i \int_{t_i}^{t_{i+1}} \exp \left(-\int_{t_i}^t \sigma(s) \mathrm{d} s\right) \mathrm{d} t \end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.5665em;vertical-align:-4.0333em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5333em;"><span style="top:-6.5333em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.6778em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"></span></span><span style="top:-0.8222em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0333em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5333em;"><span style="top:-6.5333em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-3.6778em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-0.8222em;"><span class="pstrut" style="height:3.5435em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0333em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>n</mi></msub><msub><mi>t</mi><mi>i</mi></msub></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">T_i=\exp \left(-\int_{t_n}^{t_i} \sigma(s)\right) \mathrm{d} s
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span></span></span></span></span></p>
<p>其中的嵌套积分项可以直接求解出来结果，得到：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>t</mi><mi>i</mi></msub><mi>t</mi></msubsup><mi>σ</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mi mathvariant="normal">d</mi><mi>s</mi><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msub><mi>σ</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\exp \left(-\int_{t_i}^t \sigma(s)\right) \mathrm{d} s=\exp \left(-\sigma_i\left(t-t_i\right)\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5555em;vertical-align:-1.012em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5435em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathrm">d</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>
<p>从而有下式，其中$$\delta_i=t_i-t_{i-1} $$ 表示小区间的长度</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><msub><mo stretchy="false">)</mo><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mrow><msub><mi>σ</mi><mi>i</mi></msub><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msub><mi>T</mi><mi>i</mi></msub><mo>⋅</mo><mfrac><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>σ</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mi>t</mi><mo>−</mo><msub><mi>t</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow></msup><mrow><mo>−</mo><msub><mi>σ</mi><mi>i</mi></msub></mrow></mfrac><mo fence="true">∣</mo></mrow><msub><mi>t</mi><mi>i</mi></msub><msub><mi>t</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msub><mi>T</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>σ</mi><mi>i</mi></msub><msub><mi>δ</mi><mi>i</mi></msub></mrow></msup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} C(\mathbf{r})_i &amp;=\left.\sigma_i \mathbf{c}_i T_i \cdot \frac{e^{-\sigma_i\left(t-t_i\right)}}{-\sigma_i}\right|_{t_i} ^{t_{i+1}} \\ &amp;=\mathbf{c}_i T_i\left(1-e^{-\sigma_i \delta_i}\right) \end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.7074em;vertical-align:-2.1037em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6037em;"><span style="top:-4.6037em;"><span class="pstrut" style="height:3.7485em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3048em;"><span class="pstrut" style="height:3.7485em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1037em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6037em;"><span style="top:-4.6037em;"><span class="pstrut" style="height:3.7485em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">(</span></span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.45em;"><span class="pstrut" style="height:4.4em;"></span><span style="width:0.333em;height:2.400em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.333em" height="2.400em" viewbox="0 0 333 2400"><path d="M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7485em;"><span style="top:-1.7003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.0179em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0998em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3048em;"><span class="pstrut" style="height:3.7485em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0379em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1037em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>在区间上进行求合，得到最终的黎曼和形式:</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi mathvariant="bold">r</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi mathvariant="bold">c</mi><mi>i</mi></msub><msub><mi>T</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>σ</mi><mi>i</mi></msub><msub><mi>δ</mi><mi>i</mi></msub></mrow></msup><mo fence="true">)</mo></mrow><mo separator="true">,</mo><msub><mi>T</mi><mi>i</mi></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>σ</mi><mi>i</mi></msub><msub><mi>δ</mi><mi>i</mi></msub><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">C(\mathbf{r})=\sum_{i=1}^N \mathbf{c}_i T_i\left(1-e^{-\sigma_i \delta_i}\right), T_i=\exp \left(-\sum_{j=1}^{i-1} \sigma_i \delta_i\right) 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathbf">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.106em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathbf">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0379em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2254em;vertical-align:-1.4138em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8117em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span></span></p>
<h3 id></h3>
<p>参考<a href="https://zhuanlan.zhihu.com/p/574351707">“图形学小白”友好的NeRF原理透彻讲解 - 知乎 (zhihu.com)</a></p>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>nerf</tag>
      </tags>
  </entry>
  <entry>
    <title>关于hadoop的使用</title>
    <url>/2024/04/22/%E5%85%B3%E4%BA%8Ehadoop%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hadoop</tag>
        <tag>大数据</tag>
      </tags>
  </entry>
  <entry>
    <title>关于hexo中文章图片无法正常显示</title>
    <url>/2024/04/19/%E5%85%B3%E4%BA%8Ehexo%E4%B8%AD%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<h3 id="问题描述">问题描述</h3>
<blockquote>
<p>在编写markdown中我们发现图片的链接被转化为据对路径，这导致完全无法引用</p>
<p>资源文件夹中的图片</p>
<p>这是一个链接转化解析的问题</p>
<p>如图<img src="/2024/04/19/%E5%85%B3%E4%BA%8Ehexo%E4%B8%AD%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA/20181115112933605.png" alt="在这里插入图片描述"></p>
</blockquote>
<h3 id="解决方法">解决方法</h3>
<blockquote>
<h4 id="使用他人的插件">使用他人的插件</h4>
<p><code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></p>
<p>但是这个插件已经失效了所以需要修改</p>
<ol>
<li>一种是将链接转化为绝对链接</li>
</ol>
<blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getPosition</span>(<span class="params">str, m, i</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">split</span>(m, i).<span class="title function_">join</span>(m).<span class="property">length</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> version = <span class="title class_">String</span>(hexo.<span class="property">version</span>).<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;after_post_render&#x27;</span>, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> config = hexo.<span class="property">config</span>;</span><br><span class="line">  <span class="keyword">if</span>(config.<span class="property">post_asset_folder</span>)&#123;</span><br><span class="line">    	<span class="keyword">var</span> link = data.<span class="property">permalink</span>;</span><br><span class="line">	<span class="keyword">if</span>(version.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="title class_">Number</span>(version[<span class="number">0</span>]) == <span class="number">3</span>)</span><br><span class="line">	   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	   <span class="keyword">var</span> beginPos = <span class="title function_">getPosition</span>(link, <span class="string">&#x27;/&#x27;</span>, <span class="number">3</span>) + <span class="number">1</span>;</span><br><span class="line">	<span class="comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span></span><br><span class="line">	<span class="keyword">var</span> endPos = link.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>;</span><br><span class="line">    link = link.<span class="title function_">substring</span>(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> toprocess = [<span class="string">&#x27;excerpt&#x27;</span>, <span class="string">&#x27;more&#x27;</span>, <span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; toprocess.<span class="property">length</span>; i++)&#123;</span><br><span class="line">      <span class="keyword">var</span> key = toprocess[i];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">var</span> $ = cheerio.<span class="title function_">load</span>(data[key], &#123;</span><br><span class="line">        <span class="attr">ignoreWhitespace</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">xmlMode</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">lowerCaseTags</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">decodeEntities</span>: <span class="literal">false</span></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">		<span class="keyword">if</span> ($(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>))&#123;</span><br><span class="line">			<span class="comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span></span><br><span class="line">			<span class="keyword">var</span> src = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			<span class="keyword">if</span>(!<span class="regexp">/http[s]*.*|\/\/.*/</span>.<span class="title function_">test</span>(src) &amp;&amp;</span><br><span class="line">			   !<span class="regexp">/^\s*\//</span>.<span class="title function_">test</span>(src)) &#123;</span><br><span class="line">			  <span class="comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span></span><br><span class="line">			  <span class="comment">// In addition, to support multi-level local directory.</span></span><br><span class="line">			  <span class="keyword">var</span> linkArray = link.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">var</span> srcArray = src.<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">elem</span>)&#123;</span><br><span class="line">				<span class="keyword">return</span> elem != <span class="string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">			  &#125;);</span><br><span class="line">			  <span class="keyword">if</span>(srcArray.<span class="property">length</span> &gt; <span class="number">1</span>)</span><br><span class="line">				srcArray.<span class="title function_">shift</span>();</span><br><span class="line">			  src = srcArray.<span class="title function_">join</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">			  $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, config.<span class="property">root</span> + link + src);</span><br><span class="line">			  <span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span>+config.<span class="property">root</span> + link + src);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;no src attr, skipped...&quot;</span>);</span><br><span class="line">			<span class="variable language_">console</span>.<span class="property">info</span>&amp;&amp;<span class="variable language_">console</span>.<span class="title function_">info</span>($(<span class="variable language_">this</span>));</span><br><span class="line">		&#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] = $.<span class="title function_">html</span>();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</blockquote>
<ol start="2">
<li>是将转化为相对链接</li>
</ol>
<blockquote>
<p><code>hexo-asset-image</code>，并将58、89行的<img src="/2024/04/19/%E5%85%B3%E4%BA%8Ehexo%E4%B8%AD%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA/v2-1f23ed0500e4fc9cda9fd40bb5df2faa_720w.webp" alt></p>
<p>修改为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&gt;$(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;src&#x27;</span>, src);</span><br><span class="line">&gt;<span class="variable language_">console</span>.<span class="property">info</span> &amp;&amp; <span class="variable language_">console</span>.<span class="title function_">info</span>(<span class="string">&quot;update link as:--&gt;&quot;</span> + src);</span><br></pre></td></tr></table></figure>
<p><img src="/2024/04/19/%E5%85%B3%E4%BA%8Ehexo%E4%B8%AD%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%AD%A3%E5%B8%B8%E6%98%BE%E7%A4%BA/v2-ae60210573e09d824016f9e0413a4673_720w.webp" alt></p>
</blockquote>
<ol start="3">
<li>还有一种就是将<code>![]()</code>转化为标签外挂</li>
</ol>
<blockquote>
<p>这个插件就是<a href="https://github.com/yiyungent/hexo-asset-img">hexo-asset-img</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">const</span> log = <span class="built_in">require</span>(<span class="string">&#x27;hexo-log&#x27;</span>)(&#123; <span class="string">&#x27;debug&#x27;</span>: <span class="literal">false</span>, <span class="string">&#x27;slient&#x27;</span>: <span class="literal">false</span> &#125;);</span><br><span class="line"></span><br><span class="line">&gt;<span class="comment">/**</span></span><br><span class="line"><span class="comment">&gt;* md文件返回 true</span></span><br><span class="line"><span class="comment">&gt;* <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; data </span></span><br><span class="line"><span class="comment">&gt;*/</span></span><br><span class="line">&gt;<span class="keyword">function</span> <span class="title function_">ignore</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="comment">// <span class="doctag">TODO:</span> 好奇怪，试了一下, md返回true, 但却需要忽略 取反!</span></span><br><span class="line">  <span class="keyword">var</span> source = data.<span class="property">source</span>;</span><br><span class="line">  <span class="keyword">var</span> ext = source.<span class="title function_">substring</span>(source.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;.&#x27;</span>)).<span class="title function_">toLowerCase</span>();</span><br><span class="line">  <span class="keyword">return</span> [<span class="string">&#x27;md&#x27;</span>,].<span class="title function_">indexOf</span>(ext) &gt; -<span class="number">1</span>;</span><br><span class="line">&gt;&#125;</span><br><span class="line"></span><br><span class="line">&gt;<span class="keyword">function</span> <span class="title function_">action</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> reverseSource = data.<span class="property">source</span>.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> fileName = reverseSource.<span class="title function_">substring</span>(<span class="number">3</span>, reverseSource.<span class="title function_">indexOf</span>(<span class="string">&quot;/&quot;</span>)).<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>).<span class="title function_">reverse</span>().<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ![example](postname/example.jpg)  --&gt;  &#123;% asset_img example.jpg example %&#125;</span></span><br><span class="line">  <span class="keyword">var</span> regExp = <span class="title class_">RegExp</span>(<span class="string">&quot;!\\[(.*?)\\]\\(&quot;</span> + fileName + <span class="string">&#x27;/(.+?)\\)&#x27;</span>, <span class="string">&quot;g&quot;</span>);</span><br><span class="line">  <span class="comment">// hexo g</span></span><br><span class="line">  data.<span class="property">content</span> = data.<span class="property">content</span>.<span class="title function_">replace</span>(regExp, <span class="string">&quot;&#123;% asset_img $2 $1 %&#125;&quot;</span>,<span class="string">&quot;g&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// log.info(`hexo-asset-img: filename: $&#123;fileName&#125;, title: $&#123;data.title.trim()&#125;`);</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> data;</span><br><span class="line">&gt;&#125;</span><br><span class="line"></span><br><span class="line">&gt;hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&#x27;before_post_render&#x27;</span>,<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_">ignore</span>(data))&#123;</span><br><span class="line">      <span class="title function_">action</span>(data)</span><br><span class="line">  &#125;</span><br><span class="line">&gt;&#125;, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<ol start="4">
<li>还有直接转化为html标签</li>
</ol>
<p><a href="https://github.com/liolok/hexo-asset-link">hexo-asset-link: A Hexo plugin to convert Markdown style asset links to HTML style ones (github.com)</a></p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>关于butterfly的路径</title>
    <url>/2024/04/19/%E5%85%B3%E4%BA%8Ebutterfly%E7%9A%84%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<h3 id="在使用butterfly配置文件和在markdown编写时我们都会遇到引用资源的问题">在使用butterfly配置文件和在markdown编写时我们都会遇到引用资源的问题</h3>
<blockquote>
<p>最简单的方法是使用网址引用，不需要考虑各种相对地址</p>
</blockquote>
<h3 id="在markdown中一般我们使用使用-Markdown-嵌入图片">在markdown中一般我们使用使用 Markdown 嵌入图片</h3>
<blockquote>
<p>我们只需要启动选项</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>启用后，资源图片将会被自动解析为其对应文章的路径。<br>
例如： <code>image.jpg</code> 位置为 <code>/2020/01/02/foo/image.jpg</code> ，这表示它是 <code>/2020/01/02/foo/</code> 文章的一张资源图片， <code>![](./image.jpg)</code> 将会被解析为 <code>&lt;img src=&quot;/2020/01/02/foo/image.jpg&quot;&gt;</code> 。</p>
</blockquote>
<ul>
<li>所以注意的是这个是相对与文章路径的地址，每一个文章都会生成<code>文章名/index.html</code></li>
</ul>
<blockquote>
<h2 id="全局资源文件夹">全局资源文件夹</h2>
<p>资源（Asset）代表 <code>source</code> 文件夹中除了文章以外的所有文件，例如图片、CSS、JS 文件等。比方说，如果你的Hexo项目中只有少量图片，那最简单的方法就是将它们放在 <code>source/images</code> 文件夹中。然后通过类似于 <code>![](/images/image.jpg)</code> 的方法访问它们。</p>
<h2 id="文章资源文件夹">文章资源文件夹</h2>
<p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p>
<p>_config.yml</p>
<table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table>
<p>当资源文件管理功能打开后，Hexo将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个文章文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
</blockquote>
<h3 id="在butterfly配置文件中的引用">在butterfly配置文件中的引用</h3>
<ol>
<li>
<p>当然可以使用网址，简单</p>
</li>
<li>
<p>在<code>background</code>的设置中这个这个需要使用<code>url()</code>来引用图像</p>
</li>
<li>
<p>在普通的<code>index_img</code> 等引用的方面 还是如同全局资源的引用方式</p>
</li>
</ol>
<p>还有需要注意的是除了<code>background</code> 可以使用<code>url()</code> 其他的使用会出现问题</p>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>关于markdown图片清理</title>
    <url>/2024/04/21/%E5%85%B3%E4%BA%8Emarkdown%E5%9B%BE%E7%89%87%E6%B8%85%E7%90%86/</url>
    <content><![CDATA[<h3 id="githubAction">githubAction</h3>
<p><a href="https://github.com/yiyungent/clear-image-action">yiyungent/clear-image-action: 🔧 Image detection. | 图片检测 | 清理未引用图片 | 删除未引用图片 | 检查引用的图片是否有效 | GitHub Actions</a></p>
<p>这个可以清理仓库中<code>html</code> 未引用的文件</p>
<p><a href="https://github.com/yiyungent/coo">yiyungent/coo: 🧰 .NET 自用 CLI | 工具集 (github.com)</a></p>
]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>关于安装butterfly的注意事项</title>
    <url>/2024/04/17/%E5%85%B3%E4%BA%8E%E5%AE%89%E8%A3%85butterfly%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    <content><![CDATA[<h2 id="关于配置文件的问题">关于配置文件的问题</h2>
<h3 id="第一点">第一点</h3>
<blockquote>
<p>_config.butterfly.yml 是复制来自 butterfly 主题中的</p>
</blockquote>
<h3 id="第二点-就是部署的问题">第二点 就是部署的问题</h3>
<blockquote>
<p>关于使用官方所说的一键部署的时候</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure>
<p>会出现</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nothing to commit</span><br></pre></td></tr></table></figure>
<p>这个时候需要运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
</blockquote>
<h3 id="关于美化的问题">关于美化的问题</h3>
<blockquote>
<p>首先美化应该一步一步来<br>
如果你太执着于美化，那么你选择<strong>hexo</strong>的目的就错了<br>
显然我们选择<strong>hexo</strong>的目的就是快速搭建一个博客<br>
花费过多时间在美化上不太好，应该专注于写博客<br>
所以我建议你先将博客搭建起来，然后慢慢去美化<br>
有几个决定页面大表象的要更改</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index_img:</span></span><br></pre></td></tr></table></figure>
<p><strong>_config.yml</strong> 按照hexo的文档改好之后<br>
至于butterfly主题的配置文件不需要完全更改</p>
</blockquote>
<h3 id="pjax会出现问题">pjax会出现问题</h3>
<blockquote>
<p>会使导航栏的定位失效发生无效ajax请求</p>
</blockquote>
<h3 id="运行服务器时">运行服务器时</h3>
<blockquote>
<p><code>hexo server -s</code> 静态模式下与部署环境不同会出现问题</p>
</blockquote>
<h3 id="配置文件中路径的问题">配置文件中路径的问题</h3>
<p>1.尽量使用<code>/</code> 而且使用绝对路径<code>/img/</code></p>
<p>2.<code>background: </code>要使用<code>url()</code></p>
]]></content>
      <categories>
        <category>butterfly</category>
      </categories>
      <tags>
        <tag>butterfly</tag>
      </tags>
  </entry>
  <entry>
    <title>关于将csv写入mysql</title>
    <url>/2024/04/20/%E5%85%B3%E4%BA%8E%E5%B0%86csv%E5%86%99%E5%85%A5mysql/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库连接信息</span></span><br><span class="line">host = <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">user = <span class="string">&#x27;root&#x27;</span></span><br><span class="line">password = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">database = <span class="string">&#x27;makeup&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CSV文件路径和表名</span></span><br><span class="line">csv_file = <span class="string">&#x27;demo.csv&#x27;</span></span><br><span class="line">table_name = <span class="string">&#x27;makeupdatademo&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换年份</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(csv_file, <span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = file.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换文本内容</span></span><br><span class="line">data = data.replace(<span class="string">&#x27;2016&#x27;</span>, <span class="string">&#x27;2023&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(csv_file, <span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件的字段</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(csv_file, <span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    reader = csv.reader(file)</span><br><span class="line">    fields = <span class="built_in">next</span>(reader)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库连接</span></span><br><span class="line">db = pymysql.connect(host=host, user=user, password=password, database=database)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建游标对象</span></span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建表</span></span><br><span class="line">create_table_query = <span class="string">f&quot;CREATE TABLE IF NOT EXISTS <span class="subst">&#123;table_name&#125;</span> (<span class="subst">&#123;<span class="string">&#x27;,&#x27;</span>.join([field + <span class="string">&#x27; VARCHAR(255)&#x27;</span> <span class="keyword">for</span> field <span class="keyword">in</span> fields])&#125;</span>);&quot;</span></span><br><span class="line">cursor.execute(create_table_query)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取CSV文件数据并插入表中</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(csv_file, <span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    reader = csv.DictReader(file)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">        values = []</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> fields:</span><br><span class="line">            values.append(row[field])</span><br><span class="line">        insert_query = <span class="string">f&quot;INSERT INTO <span class="subst">&#123;table_name&#125;</span> (<span class="subst">&#123;<span class="string">&#x27;,&#x27;</span>.join(fields)&#125;</span>) VALUES (<span class="subst">&#123;<span class="string">&#x27;,&#x27;</span>.join([<span class="string">&#x27;%s&#x27;</span>] * <span class="built_in">len</span>(fields))&#125;</span>);&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(insert_query)</span><br><span class="line">        cursor.execute(insert_query, <span class="built_in">tuple</span>(values))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交事务并关闭连接</span></span><br><span class="line">db.commit()</span><br><span class="line">cursor.close()</span><br><span class="line">db.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这段代码实现了将CSV文件中的数据读取并插入到MySQL数据库中的功能。具体的步骤如下：</p>
<ol>
<li>导入所需的模块：<code>csv</code> 用于读写CSV文件，<code>pymysql</code> 用于与MySQL数据库建立连接和执行SQL语句。</li>
<li>设定数据库连接信息：指定数据库的主机名、用户名、密码和数据库名。</li>
<li>指定CSV文件路径和目标表名：设置CSV文件路径和要插入数据的目标表名。</li>
<li>打开CSV文件并替换文本内容：使用<code>open</code>函数打开CSV文件，并读取文件内容。然后使用字符串的<code>replace</code>方法将文件中的&quot;2016&quot;替换为&quot;2023&quot;，并写回文件。</li>
<li>读取CSV文件字段：再次打开CSV文件，使用<code>csv.reader</code>读取文件内容，并通过<code>next</code>函数获取字段名，存储在<code>fields</code>列表中。</li>
<li>建立数据库连接：使用<code>pymysql.connect</code>函数建立与MySQL数据库的连接，传入主机名、用户名、密码和数据库名。</li>
<li>创建游标对象：通过连接的<code>cursor</code>方法创建游标对象，用于执行SQL语句。</li>
<li>创建表：使用<code>create_table_query</code>变量构建创建表的SQL语句，并执行该语句，创建目标表。</li>
<li>读取CSV文件数据并插入表中：使用<code>csv.DictReader</code>读取CSV文件内容，并以字典形式迭代每一行数据。对于每一行数据，提取对应字段的值，并使用占位符构建插入语句。然后执行插入语句，将数据插入到表中。</li>
<li>提交事务并关闭连接：使用<code>commit</code>方法提交事务，将插入的数据永久保存到数据库中。然后关闭游标和数据库连接，释放资源。</li>
</ol>
<p>总体而言，这段代码实现了将CSV文件的数据导入到MySQL数据库中的功能.</p>
]]></content>
      <tags>
        <tag>mysql</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>关于扩散模型</title>
    <url>/2024/04/19/%E5%85%B3%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<h2 id="简介">简介</h2>
<p><img src="/2024/04/19/%E5%85%B3%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/eb53ae2c305549ff986511894e6b71ac.png" alt="在这里插入图片描述"></p>
<p><img src="/2024/04/19/%E5%85%B3%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/wps1.jpg" alt="img"></p>
<p>扩散就如同它扩散的名字一样这个概念源自于热力系统。其实也就是来自于非平衡热力学。这个定义了一个扩散步骤的马可代夫链。这个链拥有两个过程一个正向过程，一个逆向过程：正向被称为扩散过程，逆向被称为你扩散过程。</p>
<p>正向过程是增加噪声，逆向过程是减少噪声，扩散模型经常被用于从噪声生成数据和还原数据。</p>
<h3 id="自回归模型">自回归模型</h3>
<p>你看由于是马可代夫链你会发现扩散模型其实是一个自回归的模型，自回归模型的定义如下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub><mo>=</mo><mi>c</mi><mo>+</mo><mo>∑</mo><mo stretchy="false">(</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>X</mi><mrow><mi>t</mi><mo>−</mo><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>θ</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">X_t = c + \sum(\phi_i * X_{t-i}) + \theta_t
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>扩散模型其实也是一种自回归模型</p>
<h2 id="扩散模型的作用">扩散模型的作用</h2>
<p>就如同之前所说的扩散模型经常被用于从噪声中还原或者说是生成数据</p>
<h2 id="扩散模型的组成">扩散模型的组成</h2>
<p>虽然说是机器学习模型但是扩散模型并不像其他机器学习算法一个有一个特定的结构或者说是网络。</p>
<p>其实是使用了这种通过减少噪声来还原数据的方法都可以被称为扩散模型。所以在这里我无法给出一张图具体表示扩散模型的网络架构。但是扩散模型的重点就是添加噪声，和消除噪声而这两个又是对应正向过程与逆向过程。</p>
<p>所以说扩散模型其实就是由正向过程和逆向过程组成的，网上能给出具体架构的一般都是指<code>DDPM</code>（Density-Dependent PixelCNN）或者是<code>StableDiffusion</code></p>
<h3 id="正向过程">正向过程</h3>
<p><img src="/2024/04/19/%E5%85%B3%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/eb53ae2c305549ff986511894e6b71ac-1714035901387-3.png" alt="正向过程"></p>
<p>我们一般不太关心正向过程 因为我们一般是希望使用扩散模型来从噪声来生成数据而不是将一张图片变成噪声，</p>
<p>但是为了便于理解我在这里还是讲解一下。</p>
<h4 id="添加怎样的高斯噪声">添加怎样的高斯噪声</h4>
<p>扩散模型是一个马克代夫链，正向过程的原来就是添加噪声，这个噪声是多种多样的我们就是用其中最简单的噪声高斯噪声来进行添加，当然你这里选择了高斯噪声添加，等下也需要减去一个高斯噪声。</p>
<p>即使我们现在锁定了高斯噪声，但是高斯噪声根据时间也是不同的那么每次添加的到底是怎么样的高斯噪声呢</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo separator="true">;</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msub><mi>β</mi><mi>t</mi></msub></mrow></msqrt><mtext> </mtext><msub><mi>x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>β</mi><mi>t</mi></msub><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(x_t|x_{t-1}) = \mathcal{N}(x_t;\sqrt{1-\beta_t}~x_{t-1},\beta_tI)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.2561em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9839em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.9439em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.28em" viewbox="0 0 400000 1296" preserveaspectratio="xMinYMin slice"><path d="M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2561em;"><span></span></span></span></span></span><span class="mspace nobreak"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></span></p>
<p>我们添加这样的高斯噪声均值为$$\sqrt{1-\beta_t}~x_{t-1}$$ 方差是$$\beta_tI$$​</p>
<p>由于马克代夫链的性质我们可以将$$x_t$$ 与$$x_0$$​ 直接进行联系起来</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mrow><mn>1</mn><mo>:</mo><mi>T</mi></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><mi>q</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(\mathbf{x}_{1:T} \vert \mathbf{x}_0) = \prod^T_{t=1} q(\mathbf{x}_t \vert \mathbf{x}_{t-1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">:</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>反正经过一系列推理会得到</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo>∼</mo><mi>q</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo separator="true">;</mo><msqrt><msub><mover accent="true"><mi>α</mi><mo>ˉ</mo></mover><mi>t</mi></msub></msqrt><msub><mi mathvariant="bold">x</mi><mn>0</mn></msub><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>α</mi><mo>ˉ</mo></mover><mi>t</mi></msub><mo stretchy="false">)</mo><mi mathvariant="bold">I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathbf{x}_t  \sim q(\mathbf{x}_t \vert \mathbf{x}_0) = \mathcal{N}(\mathbf{x}_t; \sqrt{\bar{\alpha}_t} \mathbf{x}_0, (1 - \bar{\alpha}_t)\mathbf{I})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0928em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8428em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1972em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathbf">I</span><span class="mclose">)</span></span></span></span></span></p>
<p>具体推导可以参考<a href="https://zhuanlan.zhihu.com/p/599538060">扩散模型的工作原理：从零开始的数学 - 知乎 (zhihu.com)</a></p>
<h3 id="逆向过程">逆向过程</h3>
<p><img src="/2024/04/19/%E5%85%B3%E4%BA%8E%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B/image-20240425170529462.png" alt="逆向过程"></p>
<p>逆向过程才是我们所关注的我们需要知道每一次减去一个什么样的噪声，其实就如同之前所说的噪声可以是各种各样的在正向过程中我们为了简单设计为高斯噪声。在这次逆向过程中我们也这么设计。</p>
<p>我们仍需要知道每次从$$\mathcal{N}(\textbf{0},\mathbf{I})$$​ 减去一个什么样的怎样噪声，所以为了简化处理或者说降低计算难度，我们使用参数化的高斯噪声，只需对平均值和方差进行参数化：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">;</mo><msub><mi mathvariant="bold-italic">μ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi mathvariant="bold">Σ</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_\theta(\mathbf{x}_{t-1} \vert \mathbf{x}_t) = \mathcal{N}(\mathbf{x}_{t-1}; \boldsymbol{\mu}_\theta(\mathbf{x}_t, t), \boldsymbol{\Sigma}_\theta(\mathbf{x}_t, t))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol">μ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.242em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">Σ</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mclose">))</span></span></span></span></span></p>
<p>当然有人会说逆向扩散一定是减去一个高斯噪声吗？不一定这里如此处理仅仅是因为首先想降低计算难度，所以选择其中一种噪声。</p>
<p>对于逆向过程我们也可以通过数学得到其$$x_t$$ 与$$x_0$$的关系</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mrow><mn>0</mn><mo>:</mo><mi>T</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mi>T</mi></msub><mo stretchy="false">)</mo><munderover><mo>∏</mo><mrow><mi>t</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msub><mi>p</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msub><mi mathvariant="bold">x</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><msub><mi mathvariant="bold">x</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_\theta(\mathbf{x}_{0:T}) = p_{\theta}(\mathbf{x}_T) \prod^T_{t=1} p_\theta(\mathbf{x}_{t-1} \vert \mathbf{x}_t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mrel mtight">:</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0954em;vertical-align:-1.2671em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<h4 id="如何训练你扩散过程">如何训练你扩散过程</h4>
<p>模型想要训练就需要损失函数来进行优化</p>
<p>可以使用平方差中之类的总之原来就是需要计算预测噪声与真实噪声的损失。</p>
<p>真实的噪声可以有之前的正向过程得出。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi><mi>F</mi><mi>u</mi><mi>n</mi><mtext>（</mtext><mi>p</mi><mtext>，</mtext><mi>q</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">Loss = LossFun（p，q）
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">oss</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">oss</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">）</span></span></span></span></span></p>
<p>借鉴于<a href="https://zhuanlan.zhihu.com/p/655568910">深入浅出扩散模型(Diffusion Model)系列：基石DDPM（源码解读篇） - 知乎 (zhihu.com)</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Diffusion</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">x0</span>):</span><br><span class="line">        t = torch.randint(<span class="number">0</span>,T,shape,B)</span><br><span class="line">        <span class="keyword">return</span> loss(x0,t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">q_sample</span>(<span class="params">self, x0: torch.Tensor, t: torch.Tensor, eps: <span class="type">Optional</span>[torch.Tensor] = <span class="literal">None</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Diffusion Process，根据xt所服从的高斯分布的mean和var，求出xt</span></span><br><span class="line"><span class="string">        Params:</span></span><br><span class="line"><span class="string">            x0：来自训练数据的干净的图片</span></span><br><span class="line"><span class="string">            t：某一步time_step</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">            xt: 第t时刻加完噪声的图片</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># ----------------------------------------------------------------</span></span><br><span class="line">        <span class="comment"># xt = sqrt(alpha_bar_t) * x0 + sqrt(1-alpha_bar_t) * epsilon</span></span><br><span class="line">        <span class="comment">#    = mean + sqrt(var) * epsilon</span></span><br><span class="line">        <span class="comment"># 其中，epsilon~N(0, I)</span></span><br><span class="line">        <span class="comment"># ----------------------------------------------------------------</span></span><br><span class="line">        <span class="keyword">if</span> eps <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            eps = torch.randn_like(x0)</span><br><span class="line">       </span><br><span class="line">        mean, var = self.q_xt_x0(x0, t)</span><br><span class="line">        <span class="keyword">return</span> mean + (var ** <span class="number">0.5</span>) * eps</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">p_sample</span>(<span class="params">self, xt: torch.Tensor, t: torch.Tensor</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        Sampling, 当模型训练好之后，根据x_t和t，推出x_&#123;t-1&#125;</span></span><br><span class="line"><span class="string">        Params:</span></span><br><span class="line"><span class="string">            x_t：t时刻的图片</span></span><br><span class="line"><span class="string">            t：某一步time_step</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">            x_&#123;t-1&#125;: 第t-1时刻的图片</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># eps_model: 训练好的UNet去噪模型</span></span><br><span class="line">        <span class="comment"># eps_theta: 用训练好的UNet去噪模型，预测第t步的噪声</span></span><br><span class="line">        eps_theta = self.eps_model(xt, t)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 根据Sampling提供的公式，推导出x_&#123;t-1&#125;</span></span><br><span class="line">        alpha_bar = gather(self.alpha_bar, t)       </span><br><span class="line">        alpha = gather(self.alpha, t)</span><br><span class="line">        eps_coef = (<span class="number">1</span> - alpha) / (<span class="number">1</span> - alpha_bar) ** <span class="number">.5</span></span><br><span class="line">        mean = <span class="number">1</span> / (alpha ** <span class="number">0.5</span>) * (xt - eps_coef * eps_theta)</span><br><span class="line">        var = gather(self.sigma2, t)</span><br><span class="line">        eps = torch.randn(xt.shape, device=xt.device)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> mean + (var ** <span class="number">.5</span>) * eps</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">loss</span>(<span class="params">self, x0: torch.Tensor, noise: <span class="type">Optional</span>[torch.Tensor] = <span class="literal">None</span></span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        1. 随机抽取一个time_step t</span></span><br><span class="line"><span class="string">        2. 执行diffusion process(q_sample)，随机生成噪声epsilon~N(0, I)，</span></span><br><span class="line"><span class="string">           然后根据x0, t和epsilon计算xt</span></span><br><span class="line"><span class="string">        3. 使用UNet去噪模型（p_sample），根据xt和t得到预测噪声epsilon_theta</span></span><br><span class="line"><span class="string">        4. 计算mse_loss(epsilon, epsilon_theta)</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        【MSE只是众多可选loss设计中的一种，大家也可以自行设计loss函数】</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        Params:</span></span><br><span class="line"><span class="string">            x0：来自训练数据的干净的图片</span></span><br><span class="line"><span class="string">            noise: diffusion process中随机抽样的噪声epsilon~N(0, I)</span></span><br><span class="line"><span class="string">        Return:</span></span><br><span class="line"><span class="string">            loss: 真实噪声和预测噪声之间的loss         </span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        </span><br><span class="line">        batch_size = x0.shape[<span class="number">0</span>]</span><br><span class="line">        <span class="comment"># 随机抽样t</span></span><br><span class="line">        t = torch.randint(<span class="number">0</span>, self.n_steps, (batch_size,), device=x0.device, dtype=torch.long)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果为传入噪声，则从N(0, I)中抽样噪声</span></span><br><span class="line">        <span class="keyword">if</span> noise <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            noise = torch.randn_like(x0)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 执行Diffusion process，计算xt</span></span><br><span class="line">        xt = self.q_sample(x0, t, eps=noise)</span><br><span class="line">        <span class="comment"># 执行Denoise Process，得到预测的噪声epsilon_theta</span></span><br><span class="line">        eps_theta = self.eps_model(xt, t)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 返回真实噪声和预测噪声之间的mse loss</span></span><br><span class="line">        <span class="keyword">return</span> F.mse_loss(noise, eps_theta)</span><br></pre></td></tr></table></figure>
<p>扩散模型的训练步骤</p>
<ol>
<li>随机抽取一个time_step t</li>
<li>执行diffusion process(q_sample)，随机生成噪声epsilon~N(0, I)，然后根据x0, t和epsilon计xt</li>
<li>
<ol start="3">
<li>使用UNet去噪模型（p_sample），根据xt和t得到预测噪声epsilon_theta</li>
</ol>
</li>
<li>计算mse_loss(epsilon, epsilon_theta)</li>
</ol>
]]></content>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>关于绝对路径与相对路径</title>
    <url>/2024/04/18/%E5%85%B3%E4%BA%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p>我们以语言为分类总结一下。<br>
记住所以的路径最终一般解析为文件系统路径</p>
<h1>java</h1>
<h2 id="一、Linux和Windows路径分隔符">一、Linux和Windows路径分隔符</h2>
<p>Linux下：”/”</p>
<p>Window下：”\\”</p>
<p>Java中通用：System.getProperty(“file.separator”);</p>
<h2 id="二、相对路径">二、相对路径</h2>
<p>一般有两种写法<code>file\</code> 和<code>./file</code></p>
<h3 id="2-1-相对路径的概念">2.1 相对路径的概念</h3>
<p>相对路径指的是相对JVM的启动路径。</p>
<p>举个例子：假设有一java源文件Example.java在d盘根目录下。我们进入命令行窗口，进入到d盘根目录下，然后用“javac Example.java”来编译此文件，编译无错后，会在d盘根目录下自动生成”Example.class”文件。我们再调用”java Example”来运行该程。此时我们已经启动了一个jvm，这个jvm是在d盘根目录下被启动的，所以此jvm所加载的程序中File类的相对路径也就是相对这个路径的，即d盘根目录D:\。</p>
<p>搞清了这些，我们可以使用相对路径来创建文件，例如:</p>
<p>File file = new File(“a.tx”);</p>
<p>file.createNewFile();</p>
<p>假设jvm是在”D:\”下启动的，那么a.txt就会生成在D:\a.txt;</p>
<h3 id="2-2-如何通过文件路径创建文件对象">2.2 如何通过文件路径创建文件对象</h3>
<p>下面的ResourceTest项目中有4个文件，1.properties、2.properties、3.properties、4.properties。</p>
<p>当我们需要使用这4个文件的时候，怎样创建文件对象呢？</p>
<p><img src="/2024/04/18/%E5%85%B3%E4%BA%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/1.png" alt></p>
<p>编译后，4个文件的路径如下：</p>
<p>ResourceTest/1.properties                     <br>
ResourceTest/bin\2.properties                 <br>
ResourceTest/bin\com\ghs\test\3.properties    <br>
ResourceTest/bin\com\ghs\test\sub\4.properties</p>
<p>前面我们说过，JAVA中文件路径是相对JVM的启动路径的，对于简单的JAVA项目，其JVM是在项目名称下启动的，所以，ResourceTest中4个文件的相对路径分别是：</p>
<p>./1.properties   或者1.properties                  <br>
./bin\2.properties  或者  bin\2.properties               <br>
./bin\com\ghs\test\3.properties   或者bin\com\ghs\test\3.properties <br>
./bin\com\ghs\test\sub\4.properties  或者 bin\com\ghs\test\sub\4.properties</p>
<p>附：“.”或”.\”代表当前目录，这个目录也就是jvm启动路径。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainTest</span> &#123;</span><br><span class="line"> </span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		</span><br><span class="line">		<span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./1.properties&quot;</span>);</span><br><span class="line">		<span class="comment">//File file1 = new File(&quot;test1.txt&quot;);</span></span><br><span class="line">		</span><br><span class="line">		<span class="type">File</span> <span class="variable">file2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./bin/2.properties&quot;</span>);</span><br><span class="line">		<span class="comment">//File file2 = new File(&quot;bin/2.properties&quot;);</span></span><br><span class="line">		</span><br><span class="line">		<span class="type">File</span> <span class="variable">file3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./bin/com/ghs/test/3.properties&quot;</span>);</span><br><span class="line">		<span class="comment">//File file3 = new File(&quot;bin/com/ghs/test/3.properties&quot;);</span></span><br><span class="line"> </span><br><span class="line">		<span class="type">File</span> <span class="variable">file4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;./bin/com/ghs/test/sub/4.properties&quot;</span>);</span><br><span class="line">		<span class="comment">//File file4 = new File(&quot;bin/com/ghs/test/sub/4.properties&quot;);</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			System.out.println(file1.exists()+<span class="string">&quot;:&quot;</span>+file1.getCanonicalPath());</span><br><span class="line">			System.out.println(file2.exists()+<span class="string">&quot;:&quot;</span>+file2.getCanonicalPath());</span><br><span class="line">			System.out.println(file3.exists()+<span class="string">&quot;:&quot;</span>+file3.getCanonicalPath());</span><br><span class="line">			System.out.println(file4.exists()+<span class="string">&quot;:&quot;</span>+file4.getCanonicalPath());</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果如下：</p>
<p>true:D:\me\open\open-project\ResourceTest\1.properties<br>
true:D:\me\open\open-project\ResourceTest\bin\2.properties<br>
true:D:\me\open\open-project\ResourceTest\bin\com\ghs\test\3.properties<br>
true:D:\me\open\open-project\ResourceTest\bin\com\ghs\test\sub\4.properties</p>
<p>上面创建文件的方式太过于繁琐，所以一般情况下，对于test2.txt和text3.txt的获取，我们倾向于采取下面的方法：</p>
<p>File file2 = new File(Test.class.getResource(“/test2.txt”).toURI());</p>
<p>File file2 = new File(Test.class.getResource(“test3.txt”).toURI());</p>
<p>Tomcat中的情况，如果在tomcat中运行web应用,此时,如果我们在某个类中使用如下代码:</p>
<p>File f = new File(“.”);</p>
<p>String absolutePath = f.getAbsolutePath();</p>
<p>System.out.println(absolutePath);</p>
<p>那么输出的将是tomcat下的bin目录.我的机器就D:\work\server\jakarta-tomcat-5.0.28\bin\.，由此可以看出tomcat服务器是在bin目录下启动jvm的，其实是在bin目录下的“catalina.bat”文件中启动jvm的。</p>
<h3 id="2-3-当前目录和上级目录">2.3 当前目录和上级目录</h3>
<p>“.”或”.\”代表当前目录，这个目录也就是jvm启动路径。</p>
<p>下面的代码能得到当前完整目录：</p>
<p>File f = new File(“.”);</p>
<p>String absolutePath = f.getAbsolutePath();</p>
<p>System.out.println(absolutePath);//D:\</p>
<p>在当前目录下建立文件：File f = new File(“.\\test1.txt”);</p>
<p>“…”代表当前目录的上级目录。</p>
<p>在上级目录建立文件：File f = new File(“…\\…\\test1.txt”);</p>
<h3 id="三、getPath-、getAbsolutePath-、getCanonicalPath-的区别">三、getPath()、getAbsolutePath()、getCanonicalPath()的区别</h3>
<p>getPath()获取的是新建文件时的路径，例如：</p>
<p>File file1 = new File(“.\\test1.txt”);通过getPath()获取的是.\\test1.txt</p>
<p>File file = new File(“D:\\Text.txt”);通过getPath()获取的是D:\\Text.txt</p>
<p>getAbsolutePath()获取的是文件的绝对路径，返回当前目录的路径+构造file时候的路径,例如：</p>
<p>File file1 = new File(“.\\test1.txt”);通过getAbsolutePath()获取的是D:\workspace\test\.\test1.txt</p>
<p>getCanonicalPath()获取的也是文件的绝对路径，而且把…或者.这样的符号解析出来，例如：File file = new File(&quot;…\\src</p>
<p>\\test1.txt&quot;);通过getCanonicalPath()获取的是D:\workspace\src\test1.txt</p>
<h3 id="四、获取上级目录">四、获取上级目录</h3>
<p>getParent()或者getParentFile();</p>
<h3 id="五、获取资源的路径">五、获取资源的路径</h3>
<p>Java中取资源时，经常用到Class.getResource()和ClassLoader.getResource()，这里来看看他们在取资源文件时候的路径问题。</p>
<h4 id="1-Class-getResource-String-path">1.Class.getResource(String path)</h4>
<p>path  不以’/'开头时，默认是从此类所在的包下取资源；path  以’/'开头时，则是从ClassPath根下获取；</p>
<p>什么意思呢？看下面这段代码的输出结果就明白了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testpackage;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMain</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;&quot;</span>));</span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<p>file:/E:/workspace/Test/bin/testpackage/</p>
<p>file:/E:/workspace/Test/bin/</p>
<p>上面说到的【path以’/'开头时，则是从ClassPath根下获取】，在这里就是相当于bin目录(Eclipse环境下)。<br>
<img src="/2024/04/18/%E5%85%B3%E4%BA%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/2.png" alt><br>
如果我们想在TestMain.java中分别取到1~3.properties文件，该怎么写路径呢？代码如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testpackage;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMain</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 当前类(class)所在的包目录</span></span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="comment">// class根目录</span></span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;/&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// TestMain.class在&lt;bin&gt;/testpackage包中</span></span><br><span class="line">        <span class="comment">// 2.properties  在&lt;bin&gt;/testpackage包中</span></span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;2.properties&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// TestMain.class在&lt;bin&gt;/testpackage包中</span></span><br><span class="line">        <span class="comment">// 3.properties  在&lt;bin&gt;/testpackage.subpackage包中</span></span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;subpackage/3.properties&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// TestMain.class在&lt;bin&gt;/testpackage包中</span></span><br><span class="line">        <span class="comment">// 1.properties  在bin目录（class根目录）</span></span><br><span class="line">        System.out.println(TestMain.class.getResource(<span class="string">&quot;/1.properties&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>※Class.getResource和Class.getResourceAsStream在使用时，路径选择上是一样的。</p>
<p>2.Class.getClassLoader().getResource(String path)</p>
<p>path不能以’/'开头时；</p>
<p>path是从ClassPath根下获取；</p>
<p>Class.getClassLoader().getResource(String path)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testpackage;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMain</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestMain t= <span class="keyword">new</span> <span class="title class_">TestMain</span>();</span><br><span class="line">        System.out.println(t.getClass());</span><br><span class="line">        System.out.println(t.getClass().getClassLoader());</span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;&quot;</span>));</span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;/&quot;</span>));<span class="comment">//null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<p>class testpackage.TestMainsun.misc.Launcher$AppClassLoader@1fb8ee3file:/E:/workspace/Test/bin/</p>
<p>null</p>
<p>从结果来看【TestMain.class.getResource(“/”) == t.getClass().getClassLoader().getResource(“”)】</p>
<p>上面同样的目录结构，使用Class.getClassLoader（）.getResource(String path)可以这么写：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> testpackage;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMain</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestMain t= <span class="keyword">new</span> <span class="title class_">TestMain</span>();</span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;1.properties&quot;</span>));</span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;testpackage/2.properties&quot;</span>));</span><br><span class="line">        System.out.println(t.getClass().getClassLoader().getResource(<span class="string">&quot;testpackage/subpackage/3.properties&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1>python</h1>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br></pre></td></tr></table></figure>
<p>对于当前目录的写法，有：</p>
<p>（1）/ 当前工作目录所在的最顶级目录，即<a href="https://so.csdn.net/so/search?q=%E6%A0%B9%E7%9B%AE%E5%BD%95&amp;spm=1001.2101.3001.7020" title="根目录">根目录</a>，根目录是相对于其他子目录来说的</p>
<p>（2）./ 当前工作目录</p>
<p>（3）…/ 当前工作目录上一级目录（当前目录的父级目录）</p>
<p>为了更好的说明，我们举两个例子。在运行代码前，首先用getcwd（）获取当前工作目录为：C:\Users\86181\PycharmProjects\pythonProject1</p>
<p>代码1：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line">d2l.set_figsize()</span><br><span class="line">img = d2l.plt.imread(<span class="string">&#x27;../img/OIP-C.jpg&#x27;</span>)</span><br><span class="line">d2l.plt.imshow(img)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>此时我的img文件夹应该放在与pythonProject1平级的文件夹内：</p>
<p><img src="/2024/04/18/%E5%85%B3%E4%BA%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/3.png" alt></p>
<p>代码2：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> d2l <span class="keyword">import</span> torch <span class="keyword">as</span> d2l</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())</span><br><span class="line">d2l.set_figsize()</span><br><span class="line">img = d2l.plt.imread(<span class="string">&#x27;./img/OIP-C.jpg&#x27;</span>)</span><br><span class="line">d2l.plt.imshow(img)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>杂项</tag>
      </tags>
  </entry>
  <entry>
    <title>关于认真遵循文档</title>
    <url>/2024/04/17/%E5%85%B3%E4%BA%8E%E8%AE%A4%E7%9C%9F%E9%81%B5%E5%BE%AA%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h1>认真读文档即使是你熟知的领域</h1>
<blockquote>
<p>当我们在这个领域有所了解时，我们看文档就会习惯性的跳过去观看<br>
但是这就会导致我们安装出错，安装程序也是如同写代码一般<br>
在安装之后，再去排查错误是找不到的</p>
</blockquote>
<h3 id="不要随意的更改配置除非你清楚你在干什么">不要随意的更改配置除非你清楚你在干什么</h3>
<blockquote>
<p>比如我在配置butterfly是</p>
<p>我将<code>_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><code>relative_link</code> 设置成<code>true</code>我以为没什么影响实际上这对于导航栏造成问题浪费了巨大时间</p>
<p>我还以为是<code>pjax</code>的影响</p>
</blockquote>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>杂项</tag>
      </tags>
  </entry>
  <entry>
    <title>知乎公式复制</title>
    <url>/2024/04/21/%E7%9F%A5%E4%B9%8E%E5%85%AC%E5%BC%8F%E5%A4%8D%E5%88%B6/</url>
    <content><![CDATA[<ol>
<li>浏览器安装油猴插件 <a href="https://www.tampermonkey.net/">https://www.tampermonkey.net/</a></li>
<li>安装油猴脚本：一键复制 <a href="https://greasyfork.org/zh-CN/scripts/397740">https://greasyfork.org/zh-CN/scripts/397740</a></li>
</ol>
<p><a href="https://greasyfork.org/zh-CN/scripts/467102-zhihu-latex-%E5%85%AC%E5%BC%8F%E5%A4%8D%E5%88%B6">Zhihu Latex 公式复制 (greasyfork.org)</a></p>
<p>这个脚本也可以</p>
]]></content>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>检测鼠标滚轮</title>
    <url>/2024/04/21/%E6%A3%80%E6%B5%8B%E9%BC%A0%E6%A0%87%E6%BB%9A%E8%BD%AE/</url>
    <content><![CDATA[<h3 id="在使用我自己的鼠标有问题时我的gpw1代出现了回滚的问题">在使用我自己的鼠标有问题时我的gpw1代出现了回滚的问题</h3>
<h4 id="python的方法">python的方法</h4>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pynput.mouse <span class="keyword">import</span> Listener</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_scroll</span>(<span class="params">x, y, dx, dy</span>):</span><br><span class="line">    <span class="keyword">if</span> dy &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;up&quot;</span>)</span><br><span class="line">    <span class="comment"># else:</span></span><br><span class="line">    <span class="comment">#     print(&quot;向下滚动&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_move</span>(<span class="params">x, y</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_click</span>(<span class="params">x, y, button, pressed</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">on_release</span>(<span class="params">x, y, button</span>):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> Listener(on_move=on_move, on_click=on_click, on_scroll=on_scroll) <span class="keyword">as</span> listener:</span><br><span class="line">    listener.join()</span><br></pre></td></tr></table></figure>
<p>这个代码简单好理解</p>
<h4 id="c">c++</h4>
<ol>
<li>
<p>首先我们当然是需要借助<code>windowsapi</code>的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> LRESULT CALLBACK <span class="title">MouseHookProc</span><span class="params">(<span class="type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nCode &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(wParam)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;left mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_LBUTTONUP:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;left mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_RBUTTONDOWN:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;right mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_RBUTTONUP:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;right mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_MBUTTONDOWN:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;middle mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_MBUTTONUP:</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;middle mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_MOUSEWHEEL:</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">GET_WHEEL_DELTA_WPARAM</span>(wParam) &gt; <span class="number">0</span>)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;mouse wheel scrolled up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">GET_WHEEL_DELTA_WPARAM</span>(wParam) &lt; <span class="number">0</span>)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;mouse wheel scrolled down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">//always goes here</span></span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;unknown mouse wheel scroll direction\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_XBUTTONDOWN:</span><br><span class="line">                <span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">GET_XBUTTON_WPARAM</span>(wParam) == XBUTTON1)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;X1 mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">GET_XBUTTON_WPARAM</span>(wParam) == XBUTTON2)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;X2 mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">//always goes here</span></span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;unknown X mouse button down\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> WM_XBUTTONUP:</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">GET_XBUTTON_WPARAM</span>(wParam) == XBUTTON1)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;X1 mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">GET_XBUTTON_WPARAM</span>(wParam) == XBUTTON2)</span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;X2 mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">//always goes here</span></span><br><span class="line">                    std::cout &lt;&lt; <span class="string">&quot;unknown X mouse button up\n&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(<span class="literal">NULL</span>, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HHOOK mouseHook = <span class="built_in">SetWindowsHookEx</span>(WH_MOUSE_LL, MouseHookProc, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    MSG msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">GetMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>) &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">        <span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UnhookWindowsHookEx</span>(mouseHook);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>最佳答案</strong></p>
<p>请阅读文档:</p>
<p><a href="https://msdn.microsoft.com/en-us/library/ms644986%28v=VS.85%29.aspx?f=255&amp;MSPPError=-2147217396">LowLevelMouseProc callback function</a> :</p>
<blockquote>
<p>[…]</p>
<p><code>wParam</code> [in]<br>
Type: <code>WPARAM</code><br>
The identifier of the mouse message. This parameter can be one of the following messages:<br>
<code>WM_LBUTTONDOWN</code>, <code>WM_LBUTTONUP</code>, <code>WM_MOUSEMOVE</code>, <code>WM_MOUSEWHEEL</code>, <code>WM_MOUSEHWHEEL</code>, <code>WM_RBUTTONDOWN</code>, or <code>WM_RBUTTONUP</code>.</p>
<p><code>lParam</code> [in]<br>
Type: <code>LPARAM</code><br>
A pointer to an <code>MSLLHOOKSTRUCT</code> structure.</p>
</blockquote>
<p>所以 <code>wParam</code> 可以是 <code>WM_LBUTTONDOWN</code>, <code>WM_LBUTTONUP</code>, <code>WM_MOUSEMOVE</code>, <code>WM_MOUSEWHEEL</code>, <code>WM_MOUSEHWHEEL</code>、<code>WM_RBUTTONDOWN</code> 或 <code>WM_RBUTTONUP</code>。没有神奇的方法可以从中获取更多信息。即使有，也不会记录在案，应该避免。</p>
<p><code>lParam</code> 但是指向一个 <code>MSLLHOOKSTRUCT</code>:</p>
<p><a href="https://learn.microsoft.com/en-us/windows/desktop/api/winuser/ns-winuser-tagmsllhookstruct">tagMSLLHOOKSTRUCT structure</a> :</p>
<blockquote>
<p>Contains information about a low-level mouse input event.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">tagMSLLHOOKSTRUCT</span> &#123;</span><br><span class="line">  POINT     pt;</span><br><span class="line">  DWORD     mouseData;</span><br><span class="line">  DWORD     flags;</span><br><span class="line">  DWORD     time;</span><br><span class="line">  ULONG_PTR dwExtraInfo;</span><br><span class="line">&#125; MSLLHOOKSTRUCT, *LPMSLLHOOKSTRUCT, *PMSLLHOOKSTRUCT;</span><br></pre></td></tr></table></figure>
<p>[…]</p>
<p><code>mouseData</code><br>
Type: <code>DWORD</code></p>
<p>If the message is <code>WM_MOUSEWHEEL</code>, the <strong>high-order word of this member is the wheel delta</strong>. The low-order word is reserved. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user. One wheel click is defined as <code>WHEEL_DELTA</code>, which is 120.</p>
<p>If the message is <code>WM_XBUTTONDOWN</code>, <code>WM_XBUTTONUP</code>, <code>WM_XBUTTONDBLCLK</code>, <code>WM_NCXBUTTONDOWN</code>, <code>WM_NCXBUTTONUP</code>, or <code>WM_NCXBUTTONDBLCLK</code>, <strong>the high-order word specifies which X button was pressed or released</strong>, and the low-order word is reserved. This value can be one or more of the following values. Otherwise, <code>mouseData</code> is not used.</p>
<p>Value Meaning<br>
<code>XBUTTON1</code> 0x0001 The first X button was pressed or released.<br>
<code>XBUTTON2</code> 0x0002 The second X button was pressed or released.</p>
</blockquote>
<p>因此您的回调的简化版本可能如下所示:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span> <span class="comment">// std::make_signed_t&lt;&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">MouseHookProc</span><span class="params">(<span class="type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (nCode != HC_ACTION)  <span class="comment">// Nothing to do :(</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(<span class="literal">NULL</span>, nCode, wParam, lParam);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    MSLLHOOKSTRUCT *info = <span class="built_in">reinterpret_cast</span>&lt;MSLLHOOKSTRUCT*&gt;(lParam);</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> <span class="type">const</span> *button_name[] = &#123; <span class="string">&quot;Left&quot;</span>, <span class="string">&quot;Right&quot;</span>, <span class="string">&quot;Middle&quot;</span>, <span class="string">&quot;X&quot;</span> &#125;;</span><br><span class="line">    <span class="keyword">enum</span> &#123; BTN_LEFT, BTN_RIGHT, BTN_MIDDLE, BTN_XBUTTON, BTN_NONE &#125; button = BTN_NONE;</span><br><span class="line"></span><br><span class="line">    <span class="type">char</span> <span class="type">const</span> *up_down[] = &#123; <span class="string">&quot;up&quot;</span>, <span class="string">&quot;down&quot;</span> &#125;;</span><br><span class="line">    <span class="type">bool</span> down = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (wParam)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN: down = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONUP: button = BTN_LEFT;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_RBUTTONDOWN: down = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_RBUTTONUP: button = BTN_RIGHT;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_MBUTTONDOWN: down = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_MBUTTONUP: button = BTN_MIDDLE;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_XBUTTONDOWN: down = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_XBUTTONUP: button = BTN_XBUTTON;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_MOUSEWHEEL:</span><br><span class="line">        <span class="comment">// the hi order word might be negative, but WORD is unsigned, so</span></span><br><span class="line">        <span class="comment">// we need some signed type of an appropriate size:</span></span><br><span class="line">        down = <span class="keyword">static_cast</span>&lt;std::<span class="type">make_signed_t</span>&lt;WORD&gt;&gt;(<span class="built_in">HIWORD</span>(info-&gt;mouseData)) &lt; <span class="number">0</span>;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Mouse wheel scrolled &quot;</span> &lt;&lt; up_down[down] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (button != BTN_NONE) &#123;</span><br><span class="line">        std::cout &lt;&lt; button_name[button];</span><br><span class="line">        <span class="keyword">if</span> (button == BTN_XBUTTON)</span><br><span class="line">            std::cout &lt;&lt; <span class="built_in">HIWORD</span>(info-&gt;mouseData);</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot; mouse button &quot;</span> &lt;&lt; up_down[down] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">CallNextHookEx</span>(<span class="literal">NULL</span>, nCode, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>关于您的 <code>main()</code>:</p>
<p>由于您的应用程序没有窗口，因此不会向它发送任何消息，并且 <code>GetMessage()</code> 永远不会返回。这使消息泵变得无用。一次调用 <code>GetMessage()</code> 就足以让 Windows 有机会调用已安装的 Hook 回调。但问题是，调用 <code>GetMessage()</code> 之后的代码将永远不会执行，因为结束程序的唯一方法是关闭窗口或按 Ctrl + C.</p>
<p>为了确保 <code>UnhookWindowsHookEx()</code> 被调用，我建议设置一个 ConsoleCtrlHandler:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">HHOOK hook = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">ctrl_handler</span><span class="params">(DWORD dwCtrlType)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (hook) &#123;</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Unhooking &quot;</span> &lt;&lt; hook &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="built_in">UnhookWindowsHookEx</span>(hook);</span><br><span class="line">        hook = <span class="literal">NULL</span>;  <span class="comment">// ctrl_handler might be called multiple times</span></span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Bye :(&quot;</span>;</span><br><span class="line">        std::cin.<span class="built_in">get</span>();  <span class="comment">// gives the user 5 seconds to read our last output</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">SetConsoleCtrlHandler</span>(ctrl_handler, TRUE);</span><br><span class="line">    hook = <span class="built_in">SetWindowsHookExW</span>(WH_MOUSE_LL, MouseHookProc, <span class="literal">nullptr</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!hook) &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;SetWindowsHookExW() failed. Bye :(\n\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hook set: &quot;</span> &lt;&lt; hook &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="built_in">GetMessageW</span>(<span class="literal">nullptr</span>, <span class="literal">nullptr</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用<code>qt</code>对滚动事件的监听</p>
</li>
</ol>
<h4 id="c-sharp">c sharp</h4>
<ol>
<li>
<p>使用<code>windows api</code></p>
</li>
<li>
<p>使用<code>scroller view</code>对滚动事件监听</p>
<p>使用 XAML 声明方式：<br>
在 XAML 中，你可以为滚动控件（例如 ScrollViewer）的相应事件添加事件处理程序。以下是一个示例，演示了如何在 XAML 中声明并处理 ScrollViewer 的滚动事件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;ScrollViewer ScrollChanged=&quot;ScrollViewer_ScrollChanged&quot;&gt;</span><br><span class="line">    &lt;!-- 内容 --&gt;</span><br><span class="line">&lt;/ScrollViewer&gt;</span><br></pre></td></tr></table></figure>
<p>在代码中定义了名为 ScrollViewer_ScrollChanged 的事件处理程序：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ScrollViewer_ScrollChanged</span>(<span class="params"><span class="built_in">object</span> sender, ScrollChangedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 处理滚动事件</span></span><br><span class="line">&#125;在该事件处理程序中，你可以编写代码来处理滚动事件，根据需要执行相应的逻辑。</span><br></pre></td></tr></table></figure>
<p>使用代码绑定方式：<br>
使用代码绑定的方式，你可以在代码中订阅滚动事件。以下是一个示例，演示了如何使用代码绑定方式监听 ScrollViewer 的滚动事件：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">ScrollViewer scrollViewer = <span class="keyword">new</span> ScrollViewer();</span><br><span class="line">scrollViewer.ScrollChanged += ScrollViewer_ScrollChanged;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ScrollViewer_ScrollChanged</span>(<span class="params"><span class="built_in">object</span> sender, ScrollChangedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 处理滚动事件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在这个示例中，我们创建了一个 ScrollViewer 实例，并将事件处理程序 ScrollViewer_ScrollChanged 绑定到 ScrollChanged 事件上。当滚动事件发生时，事件处理程序将被调用，你可以在其中编写逻辑来处理滚动事件。</p>
<p>无论是 XAML 声明方式还是代码绑定方式，你都需要根据你的实际需求，选择适合的方式来监听滚动事件，并在事件处理程序中编写相应的逻辑。</p>
</li>
<li>
<p>在 WPF 中，你可以通过以下方式来监听滚动事件：</p>
<p>在全局鼠标事件中在我们使用的</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">LowLevelMouseProc</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">  _In_ <span class="built_in">int</span>    nCode,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_ WPARAM wParam,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_ LPARAM lParam</span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span>;</span><br></pre></td></tr></table></figure>
<p>我们需要在知道每个参数的意义</p>
<p>参数 wParam 表示鼠标事件类型。几个主要的数值如下表所示：</p>
<table>
<thead>
<tr>
<th>鼠标移动</th>
<th>0x200</th>
</tr>
</thead>
<tbody>
<tr>
<td>鼠标左键按下</td>
<td>0x201</td>
</tr>
<tr>
<td>鼠标左键抬起</td>
<td>0x202</td>
</tr>
<tr>
<td>鼠标右键按下</td>
<td>0x204</td>
</tr>
<tr>
<td>鼠标右键抬起</td>
<td>0x205</td>
</tr>
<tr>
<td>鼠标滚轮滚动</td>
<td>0x20a</td>
</tr>
<tr>
<td>鼠标侧键按下</td>
<td>0x20b</td>
</tr>
<tr>
<td>鼠标侧健抬起</td>
<td>0x20c</td>
</tr>
<tr>
<td>鼠标水平滚轮滚动</td>
<td>0x20e</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<p>参数 lParam 同样是事件详细信息结构体的地址，该结构体的原型如下所示：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">typedef <span class="keyword">struct</span> tagMSLLHOOKSTRUCT &#123;</span><br><span class="line">  POINT     pt;</span><br><span class="line">  DWORD     mouseData;</span><br><span class="line">  DWORD     flags;</span><br><span class="line">  DWORD     time;</span><br><span class="line">  ULONG_PTR dwExtraInfo;</span><br><span class="line">&#125; MSLLHOOKSTRUCT, *LPMSLLHOOKSTRUCT, *PMSLLHOOKSTRUCT;</span><br></pre></td></tr></table></figure>
<p>成员 pt 表示事件的坐标值结构体，其原型如下所示：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">typedef <span class="keyword">struct</span> tagPOINT &#123;</span><br><span class="line">  LONG x;</span><br><span class="line">  LONG y;</span><br><span class="line">&#125; POINT, *PPOINT;</span><br></pre></td></tr></table></figure>
<p>需要注意的是，虽然它被声明为 ‘LONG’ 类型，但它实际上只有4个字节长度。另外，如果你对结构体的了解足够深刻，一定能理解在实际开发中直接用一个 long 型来替代 POINT 类型是完全可行的，只需要知道Windows桌面编程使用的是小端序就可以了，当然，如果你理解不了这句话，那老老实实再创建一个POINT结构体来套进去就是了。</p>
<p>成员mouseData 不太需要关注。当事件是滚轮滚动时，它的高16位记录的是滚动方向及距离。正值表示远离用户的滚动，负值表示靠近用户的滚动，其数值恒定为120，可以理解为表示一格滚动。</p>
<p>成员 flags 不需要理会。</p>
<p>成员 time 表示事件发生时间，单位为毫秒，自系统启动以来的相对时间值。</p>
<p>成员 dwExtraInfo 不需要理会。</p>
<p>同时键盘的回调函数也是需要注意的</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">KMHook</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Interaction logic for MainWindow.xaml</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">struct</span> Keyboard_LL_Hook_Data</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> UInt32 vkCode;</span><br><span class="line">            <span class="keyword">public</span> UInt32 scanCode;</span><br><span class="line">            <span class="keyword">public</span> UInt32 flags;</span><br><span class="line">            <span class="keyword">public</span> UInt32 time;</span><br><span class="line">            <span class="keyword">public</span> IntPtr extraInfo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">struct</span> Mouse_LL_Hook_Data</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">internal</span> <span class="built_in">long</span> yx;</span><br><span class="line">            <span class="keyword">internal</span> <span class="keyword">readonly</span> <span class="built_in">int</span> mouseData;</span><br><span class="line">            <span class="keyword">internal</span> <span class="keyword">readonly</span> <span class="built_in">uint</span> flags;</span><br><span class="line">            <span class="keyword">internal</span> <span class="keyword">readonly</span> <span class="built_in">uint</span> time;</span><br><span class="line">            <span class="keyword">internal</span> <span class="keyword">readonly</span> IntPtr dwExtraInfo;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> IntPtr pKeyboardHook = IntPtr.Zero;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> IntPtr pMouseHook = IntPtr.Zero;</span><br><span class="line">        <span class="comment">//钩子委托声明</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="built_in">int</span> <span class="title">HookProc</span>(<span class="params"><span class="built_in">int</span> code, IntPtr wParam, IntPtr lParam</span>)</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> HookProc keyboardHookProc;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> HookProc mouseHookProc;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//安装钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">SetWindowsHookEx</span>(<span class="params"><span class="built_in">int</span> idHook, HookProc lpfn, IntPtr pInstance, <span class="built_in">int</span> threadID</span>)</span>;</span><br><span class="line">        <span class="comment">//卸载钩子</span></span><br><span class="line">        [<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>, CallingConvention = CallingConvention.StdCall)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">bool</span> <span class="title">UnhookWindowsHookEx</span>(<span class="params">IntPtr pHookHandle</span>)</span>;</span><br><span class="line">        [<span class="meta">DllImport(<span class="string">&quot;user32.dll&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="built_in">int</span> <span class="title">CallNextHookEx</span>(<span class="params">IntPtr hhk, <span class="built_in">int</span> nCode, IntPtr wParam, IntPtr lParam</span>)</span>; <span class="comment">//parameter &#x27;hhk&#x27; is ignored.</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">keyboardHookCallback</span>(<span class="params"><span class="built_in">int</span> code, IntPtr wParam, IntPtr lParam</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (code &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> CallNextHookEx(IntPtr.Zero, code, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Keyboard_LL_Hook_Data khd = (Keyboard_LL_Hook_Data)Marshal.PtrToStructure(lParam, <span class="keyword">typeof</span>(Keyboard_LL_Hook_Data));</span><br><span class="line">            System.Diagnostics.Debug.WriteLine(<span class="string">$&quot;key event:<span class="subst">&#123;wParam&#125;</span>, key code:<span class="subst">&#123;khd.vkCode&#125;</span>, event time:<span class="subst">&#123;khd.time&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">int</span> <span class="title">mouseHookCallback</span>(<span class="params"><span class="built_in">int</span> code, IntPtr wParam, IntPtr lParam</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (code &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> CallNextHookEx(IntPtr.Zero, code, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Mouse_LL_Hook_Data mhd = (Mouse_LL_Hook_Data)Marshal.PtrToStructure(lParam, <span class="keyword">typeof</span>(Mouse_LL_Hook_Data));</span><br><span class="line">            System.Diagnostics.Debug.WriteLine(<span class="string">$&quot;mouse event:<span class="subst">&#123;wParam&#125;</span>, (<span class="subst">&#123;mhd.yx &amp; <span class="number">0xffffffff</span>&#125;</span>,<span class="subst">&#123;mhd.yx &gt;&gt; <span class="number">32</span>&#125;</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">InsertHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">bool</span> iRet;</span><br><span class="line">            iRet = InsertKeyboardHook();</span><br><span class="line">            <span class="keyword">if</span> (!iRet)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            iRet = InsertMouseHook();</span><br><span class="line">            <span class="keyword">if</span> (!iRet)</span><br><span class="line">            &#123;</span><br><span class="line">                removeKeyboardHook();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//安装钩子方法</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">InsertKeyboardHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pKeyboardHook == IntPtr.Zero)<span class="comment">//不存在钩子时</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//创建钩子</span></span><br><span class="line">                keyboardHookProc = keyboardHookCallback;</span><br><span class="line">                pKeyboardHook = SetWindowsHookEx(<span class="number">13</span>, <span class="comment">//13表示全局键盘事件。</span></span><br><span class="line">                    keyboardHookProc,</span><br><span class="line">                    (IntPtr)<span class="number">0</span>,</span><br><span class="line">                    <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (pKeyboardHook == IntPtr.Zero)<span class="comment">//如果安装钩子失败</span></span><br><span class="line">                &#123;</span><br><span class="line">                    removeKeyboardHook();</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">InsertMouseHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pMouseHook == IntPtr.Zero)</span><br><span class="line">            &#123;</span><br><span class="line">                mouseHookProc = mouseHookCallback;</span><br><span class="line">                pMouseHook = SetWindowsHookEx(<span class="number">14</span>, <span class="comment">//14表示全局鼠标事件</span></span><br><span class="line">                    mouseHookProc,</span><br><span class="line">                    (IntPtr)<span class="number">0</span>,</span><br><span class="line">                    <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (pMouseHook == IntPtr.Zero)</span><br><span class="line">                &#123;</span><br><span class="line">                    removeMouseHook();</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">internal</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">RemoveHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">bool</span> iRet;</span><br><span class="line">            iRet = removeKeyboardHook();</span><br><span class="line">            <span class="keyword">if</span> (iRet)</span><br><span class="line">            &#123;</span><br><span class="line">                iRet = removeMouseHook();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> iRet;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">removeKeyboardHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pKeyboardHook != IntPtr.Zero)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (UnhookWindowsHookEx(pKeyboardHook))</span><br><span class="line">                &#123;</span><br><span class="line">                    pKeyboardHook = IntPtr.Zero;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">removeMouseHook</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pMouseHook != IntPtr.Zero)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (UnhookWindowsHookEx(pMouseHook))</span><br><span class="line">                &#123;</span><br><span class="line">                    pMouseHook = IntPtr.Zero;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Install_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            InsertHook();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Button_Remove_Click</span>(<span class="params"><span class="built_in">object</span> sender, RoutedEventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            RemoveHook();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="参考">参考</h3>
<p><a href="https://www.coder.work/article/2785344">C++ 识别 X 按钮和滚轮方向 - IT工具网 (coder.work)</a></p>
<p><a href="https://www.cnblogs.com/chorm590/p/14199978.html">windows桌面编程–监听全局键盘鼠标事件 - 大窟窿 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>windows</tag>
        <tag>setwindowshook</tag>
      </tags>
  </entry>
  <entry>
    <title>淘宝美妆数据分析系统架构</title>
    <url>/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/</url>
    <content><![CDATA[<h3 id="系统的层次图">系统的层次图</h3>
<p><img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240420220744707.png" alt="image-20240420220744707"></p>
<p>整个项目被分为3部分 web网页前端，springboot的后端 ，还有由python组成的数据处理系统</p>
<p>每一个部分都被分开</p>
<h3 id="数据流图">数据流图</h3>
<h4 id="python数据处理系统的数据流图">python数据处理系统的数据流图</h4>
<p><img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240420222219519.png" alt="image-20240420222219519"></p>
<ol>
<li>需要启动虚拟机</li>
<li>在node1节点启动hadoop</li>
<li>获得数据集以后会启动<code>juypter</code>，打开<code>makeupana</code>文件</li>
<li>开始进行数据处理和数据分析具体参照 <a href="spark%E6%B7%98%E5%AE%9D%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86.md">spark淘宝数据处理</a></li>
<li>处理完之后会产生处理结果给web使用</li>
<li>存储数据到<code>mysql</code> 具体原理 <a href="%E5%85%B3%E4%BA%8E%E5%B0%86csv%E5%86%99%E5%85%A5mysql.md">关于将csv写入mysql.md</a></li>
</ol>
<h4 id="web的数据流图">web的数据流图</h4>
<p><img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240420222913340.png" alt="image-20240420222913340"></p>
<h3 id="springboot后端的系统流程图">springboot后端的系统流程图</h3>
<p><img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240421090459255.png" alt="image-20240421090459255"></p>
<h4 id="上图各个模块的代码解释">上图各个模块的代码解释</h4>
<p><strong>账户密码登录</strong></p>
<p>当收到的请求是登录请求时请求会被发送到<img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240430132836886.png" alt="image-20240430132836886"></p>
<p>这个controler</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">package makeup.<span class="property">web</span>.<span class="property">controller</span>.<span class="property">system</span>;</span><br><span class="line"><span class="comment">//import部分sheng</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录验证</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> <span class="variable">ruoyi</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@<span class="title class_">RestController</span></span><br><span class="line">public <span class="keyword">class</span> <span class="title class_">SysLoginController</span></span><br><span class="line">&#123;</span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">SysLoginService</span> loginService;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">ISysMenuService</span> menuService;</span><br><span class="line"></span><br><span class="line">    @<span class="title class_">Autowired</span></span><br><span class="line">    private <span class="title class_">SysPermissionService</span> permissionService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginBody 登录信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">PostMapping</span>(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">    public <span class="title class_">AjaxResult</span> <span class="title function_">login</span>(<span class="params">@RequestBody LoginBody loginBody</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">AjaxResult</span> ajax = <span class="title class_">AjaxResult</span>.<span class="title function_">success</span>();</span><br><span class="line">        <span class="comment">// 生成令牌</span></span><br><span class="line">        <span class="title class_">String</span> token = loginService.<span class="title function_">login</span>(loginBody.<span class="title function_">getUsername</span>(), loginBody.<span class="title function_">getPassword</span>(), loginBody.<span class="title function_">getCode</span>(),</span><br><span class="line">                loginBody.<span class="title function_">getUuid</span>());</span><br><span class="line">        ajax.<span class="title function_">put</span>(<span class="title class_">Constants</span>.<span class="property">TOKEN</span>, token);</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;getInfo&quot;</span>)</span><br><span class="line">    public <span class="title class_">AjaxResult</span> <span class="title function_">getInfo</span>(<span class="params"></span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">SysUser</span> user = <span class="title class_">SecurityUtils</span>.<span class="title function_">getLoginUser</span>().<span class="title function_">getUser</span>();</span><br><span class="line">        <span class="comment">// 角色集合</span></span><br><span class="line">        <span class="title class_">Set</span>&lt;<span class="title class_">String</span>&gt; roles = permissionService.<span class="title function_">getRolePermission</span>(user);</span><br><span class="line">        <span class="comment">// 权限集合</span></span><br><span class="line">        <span class="title class_">Set</span>&lt;<span class="title class_">String</span>&gt; permissions = permissionService.<span class="title function_">getMenuPermission</span>(user);</span><br><span class="line">        <span class="title class_">AjaxResult</span> ajax = <span class="title class_">AjaxResult</span>.<span class="title function_">success</span>();</span><br><span class="line">        ajax.<span class="title function_">put</span>(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">        ajax.<span class="title function_">put</span>(<span class="string">&quot;roles&quot;</span>, roles);</span><br><span class="line">        ajax.<span class="title function_">put</span>(<span class="string">&quot;permissions&quot;</span>, permissions);</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取路由信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 路由信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="title class_">GetMapping</span>(<span class="string">&quot;getRouters&quot;</span>)</span><br><span class="line">    public <span class="title class_">AjaxResult</span> <span class="title function_">getRouters</span>(<span class="params"></span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">Long</span> userId = <span class="title class_">SecurityUtils</span>.<span class="title function_">getUserId</span>();</span><br><span class="line">        <span class="title class_">List</span>&lt;<span class="title class_">SysMenu</span>&gt; menus = menuService.<span class="title function_">selectMenuTreeByUserId</span>(userId);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">AjaxResult</span>.<span class="title function_">success</span>(menuService.<span class="title function_">buildMenus</span>(menus));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个Java Spring Boot控制器类，名为<code>SysLoginController</code>，用于处理登录验证和获取用户信息的请求。</p>
<p>主要功能包括：</p>
<ol>
<li>
<p><code>login</code>方法：处理登录请求，验证用户名、密码和验证码，并生成令牌(token)。使用<code>SysLoginService</code>的<code>login</code>方法进行登录验证，并将令牌存储在<code>AjaxResult</code>对象中返回给客户端。</p>
</li>
<li>
<p><code>getInfo</code>方法：获取当前登录用户的信息。使用<code>SecurityUtils</code>获取当前登录用户的信息，并通过<code>SysPermissionService</code>获取用户的角色集合和权限集合。将用户信息、角色和权限存储在<code>AjaxResult</code>对象中返回给客户端。</p>
</li>
<li>
<p><code>getRouters</code>方法：获取用户的路由信息。使用<code>SecurityUtils</code>获取当前登录用户的ID，然后使用<code>ISysMenuService</code>查询该用户可访问的菜单树。最后，通过<code>menuService.buildMenus</code>方法将菜单列表转换为路由信息，并将结果存储在<code>AjaxResult</code>对象中返回给客户端。</p>
</li>
</ol>
<p>此代码主要用于实现用户登录验证和获取用户信息的功能，以及获取用户可访问的路由信息用于前端页面的渲染和权限控制。</p>
<p>对于登录部分的代码具体的流程就是</p>
<p>当用户发起登录请求时，<code>login</code>方法会被调用。该方法使用<code>@PostMapping(&quot;/login&quot;)</code>注解，表示它处理POST请求，并映射到&quot;/login&quot;路径。</p>
<p>方法签名如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> LoginBody loginBody)</span></span><br></pre></td></tr></table></figure>
<p>方法参数是一个<code>LoginBody</code>对象，该对象包含登录所需的信息，包括用户名、密码、验证码和UUID。使用<code>@RequestBody</code>注解将请求体中的JSON数据映射到<code>LoginBody</code>对象。</p>
<p>方法体内的逻辑如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line"><span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(), loginBody.getUuid());</span><br><span class="line">ajax.put(Constants.TOKEN, token);</span><br><span class="line"><span class="keyword">return</span> ajax;</span><br></pre></td></tr></table></figure>
<p>首先，创建一个成功的<code>AjaxResult</code>对象，表示登录成功。然后调用<code>loginService.login</code>方法进行登录验证，并传递用户名、密码、验证码和UUID作为参数。该方法返回一个令牌(token)，表示登录成功。</p>
<p>接下来，将令牌(token)存储在<code>AjaxResult</code>对象中，使用<code>ajax.put(Constants.TOKEN, token)</code>将令牌存储在名为&quot;token&quot;的键下。</p>
<p>最后，将包含令牌的<code>AjaxResult</code>对象作为响应返回给客户端。</p>
<p>通过这段代码，用户可以通过发送包含用户名、密码、验证码的POST请求来进行登录验证，并获取生成的令牌(token)。令牌可以用于后续的身份验证和授权操作。</p>
<h3 id="web前端的系统流程图">web前端的系统流程图</h3>
<p><img src="/2024/04/20/%E6%B7%98%E5%AE%9D%E7%BE%8E%E5%A6%86%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/image-20240421091603047.png" alt="image-20240421091603047"></p>
]]></content>
      <tags>
        <tag>大数据分析</tag>
      </tags>
  </entry>
  <entry>
    <title>稳定扩散模型介绍</title>
    <url>/2024/04/23/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h3 id="稳定扩散的组成">稳定扩散的组成</h3>
<p><img src="/2024/04/23/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/6f8bcafe0e534f68a92be1570c0ee9e4.png" alt="稳定扩散的结构"></p>
<p>整个扩散过程是在潜空间（<code>Latent Space</code>）进行的所以StableDiffusion也是被称为LDM（<code>LatentDiffusion</code>）</p>
<p>而图像从像素空间（<code>Pixel Space</code>）的转换依赖两个<code>Encoder</code>也就是<code>VAE</code> 一个$$\varepsilon $$,一个$$D$$​</p>
<p>图片的生成是将将一个噪声在$$T$$ 步的逆扩散步骤下，并且在文本条件的约束下，最终生成一个图片的潜空间表示</p>
<p>最终在<code>VAE</code>下生成图片</p>
<h4 id="像素空间与隐空间">像素空间与隐空间</h4>
<ul>
<li>像素空间（<code>Pixel Space</code>），上图左侧，红框部分。通常是人眼可以识别的图像内容。</li>
<li>隐空间（<code>Latent Space</code>），上图中央，绿框部分。通常是人眼无法识别的内容，但包含的信息量与像素空间相近。</li>
</ul>
<h4 id="文字编码器（CLIP一个由openai提出）">文字编码器（CLIP一个由openai提出）</h4>
<p><code>CLIP</code>（<code>Contrastive Language-Image Pretraining</code>）是一种由<code>OpenAI</code>开发的模型，旨在将自然语言处理（<code>NLP</code>）和计算机视觉（<code>CV</code>）相结合。<code>CLIP</code>模型通过对图像和文本进行对比学习，从而使其能够理解图像和相关的描述之间的关联。也就是说<code>CLIP</code>可以将图片与文字在某种意义上产生在语义空间上的联系。</p>
<p>比起对文字进行单纯的<code>OneHot</code>编码或者<code>Word2Vec</code>这个<code>CLIP</code>更好就如同之前所说，它所产生的向量（张量）能够具有图片信息而非仅仅的文字信息。</p>
<p><img src="/2024/04/23/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/image-20240425093934018-1714009181383-4.png" alt="CLIP的结构"></p>
<h4 id="vae（Variational-Auto-Encoders）-一个可以将图片转化为潜变量空间，或者有潜空间到图像空间">vae（Variational Auto Encoders）(一个可以将图片转化为潜变量空间，或者有潜空间到图像空间)</h4>
<h5 id="VAE的作用">VAE的作用</h5>
<p>1.像素空间到隐空间</p>
<blockquote>
<p>输入的图像$$x$$，经过<code>Encode</code>r（图中蓝色的$$\varepsilon $$），转换为另一种shape的张量$$z$$，即称为隐空间。</p>
<p>从压缩角度理解：图像经过转换后，产生的新张量是人眼无法识别的。但其包含的信息量相差不大，数据尺寸却大幅缩小，因此可以看做是一种图像数据压缩方式。这个真是为什么<code>StableDiffusion</code>能快速推理的原因</p>
</blockquote>
<p>2.隐空间到像素空间</p>
<blockquote>
<p>经过模型处理后的隐向量输出$$z$$（特指绿框左下角的$$z$$），经过Decoder（图中蓝色的$$D$$​），转换回像素空间。这个模型是预先训练好的，所以在<code>LDM</code>训练时是不需要优化参数的</p>
<p><code>VAE</code>也是通过增加噪声还原来训练的</p>
</blockquote>
<h5 id="原理">原理</h5>
<blockquote>
<p>原始张量输入，经过非常简单的网络结构，转换成较小的张量<br>
在Latent张量上，加一点点噪声扰动<br>
用对称的简单网络结构，还原回原始大小<br>
对比输入前后的张量是否相似</p>
</blockquote>
<h5 id="特点">特点</h5>
<blockquote>
<p>网络计算复杂度比较低<br>
Encoder和Decoder可以分开使用<br>
无监督训练，不需要标注输入的label</p>
</blockquote>
<h4 id="U-Net结构-一个由潜空间生成图像，同时又注意力机制可以输入文本条件">U-Net结构(一个由潜空间生成图像，同时又注意力机制可以输入文本条件)</h4>
<h5 id="U-Net网络的目的"><code>U-Net</code>网络的目的</h5>
<p>U-Net这个模型的的输入是带有噪声的隐变量$$z_t$$,当前时间戳$$t$$，文本经过<code>CLIP</code>计算所产生的张量$$E$$ ,最终输出预测噪声。</p>
<h5 id="U-Net的模型结构"><code>U-Net</code>的模型结构</h5>
<p><code>U-Net</code>大致上可以分为三块：降采样层、中间层、上采样层。之所以叫<code>U-Net</code>，是因为它的模型结构类似字母U。</p>
<p><img src="/2024/04/23/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/image-20240425094841368.png" alt="image-20240425094841368"></p>
<p>具体的结构你可以参考<a href="https://zhuanlan.zhihu.com/p/632809634">深入浅出完整解析Stable Diffusion（SD）核心基础知识 - 知乎 (zhihu.com)</a></p>
<p>和<a href="https://blog.csdn.net/Mr_Zing/article/details/130277246">【AIGC】Stable Diffusion原理快速上手，模型结构、关键组件、训练预测方式_stable diffusion网络结构-CSDN博客</a></p>
<h3 id="稳定扩散模型训练过程">稳定扩散模型训练过程</h3>
<p>Stable Diffusion整体的训练逻辑也非常清晰：</p>
<ol>
<li>从数据集中随机选择一个训练样本</li>
<li>从K个噪声量级随机抽样一个timestep $$𝑡$$</li>
<li>将timestep $$𝑡$$对应的高斯噪声添加到图片中</li>
<li>将加噪图片输入<code>U-Net</code>中预测噪声</li>
<li>计算真实噪声和预测噪声的$$L_{SD}$$损失</li>
<li>计算梯度并更新<code>U-Net</code>模型参数</li>
</ol>
<p><code>U-Net</code>的损失函数是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>L</mi><mrow><mi>S</mi><mi>D</mi></mrow></msub><mo>=</mo><msub><mi mathvariant="double-struck">E</mi><mrow><msub><mi mathvariant="bold">x</mi><mn>0</mn></msub><mo separator="true">,</mo><mi mathvariant="bold">ϵ</mi><mo>∼</mo><mi mathvariant="script">N</mi><mo stretchy="false">(</mo><mn mathvariant="bold">0</mn><mo separator="true">,</mo><mi mathvariant="bold">I</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">[</mo><mi mathvariant="normal">∥</mi><mi mathvariant="bold">ϵ</mi><mo>−</mo><msub><mi mathvariant="bold">ϵ</mi><mi>θ</mi></msub><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><msqrt><msub><mover accent="true"><mi>α</mi><mo>ˉ</mo></mover><mi>t</mi></msub></msqrt><msub><mi mathvariant="bold">x</mi><mn>0</mn></msub><mo>+</mo><msqrt><mrow><mn>1</mn><mo>−</mo><msub><mover accent="true"><mi>α</mi><mo>ˉ</mo></mover><mi>t</mi></msub></mrow></msqrt><mi mathvariant="bold">ϵ</mi><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><mi mathvariant="bold">c</mi><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><msup><mi mathvariant="normal">∥</mi><mn>2</mn></msup><mo fence="false" stretchy="true" minsize="1.8em" maxsize="1.8em">]</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">L_{SD}=\mathbb{E}_{\mathbf{x}_{0},\mathbf{\epsilon}\sim \mathcal{N}(\mathbf{0}, \mathbf{I}), t}\Big[ \| \mathbf{\epsilon}- \mathbf{\epsilon}_\theta\big(\sqrt{\bar{\alpha}_t}\mathbf{x}_0 + \sqrt{1 - \bar{\alpha}_t}\mathbf{\epsilon}, t, \mathbf{c}\big)\|^2\Big]\\
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord"><span class="mord mathbb">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathbf mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">ϵ</span><span class="mrel mtight">∼</span><span class="mord mathcal mtight" style="margin-right:0.14736em;">N</span><span class="mopen mtight">(</span><span class="mord mathbf mtight">0</span><span class="mpunct mtight">,</span><span class="mord mathbf mtight">I</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">[</span></span><span class="mord">∥</span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8428em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1972em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathbf">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8811em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8411em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1589em;"><span></span></span></span></span></span><span class="mord mathnormal">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbf">c</span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mord"><span class="mord">∥</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size2">]</span></span></span><span class="mspace newline"></span></span></span></span></p>
<p>你在这里可以看出与扩散模型损失函数的形式基本一致，区别就是原来的使用模型<code>PixelCNN++</code>预测噪声输入的是原始噪声和时间$$t$$，而现在预测噪声的模型替换为<code>U-Net</code>需要多输入一个$$c$$ 文本条件。</p>
<p>但是无论怎么说整个过程想法就是扩散模型的想法。</p>
<h3 id="稳定扩散的推理过程">稳定扩散的推理过程</h3>
<p><img src="/2024/04/23/%E7%A8%B3%E5%AE%9A%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D/image-20240425141803293.png" alt="image-20240425141803293"></p>
<p>上图的下半部分是推理的过程</p>
<ol>
<li>
<p>随机产生一个高斯噪声作为$$z_t$$,将输入的文本通过<code>CLIP</code>转化为张量$$E$$</p>
</li>
<li>
<p>将$$z_t$$与$$E$$ 同时输入<code>U-Net</code> 输出预测噪声$$z_{\theta}$$</p>
</li>
<li>
<p>将$$z_t$$减去预测噪声$$z_{t-1}=z_t-z{\theta}$$</p>
</li>
<li>
<p>回到步骤2反复重复T次</p>
</li>
<li>
<p>经过T步后将最终还原的潜变量通过VAE还原为图片</p>
</li>
</ol>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>StableDiffusion</tag>
      </tags>
  </entry>
  <entry>
    <title>美妆分析系统整体流程</title>
    <url>/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="首先数据分析">首先数据分析</h3>
<h4 id="数据下载">数据下载</h4>
<p>首先我们需要从<code>hadoop</code>下载数据集到本地电脑可以使用网页下载也可以可以使用命令行进行下载</p>
<ul>
<li>命令行的下载方式是</li>
</ul>
<p>Hadoop提供了命令行工具来进行文件的下载操作。你可以使用<code>hadoop fs</code>命令来执行文件下载。</p>
<p>下面是下载文件的命令行语法：</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hadoop fs -get &lt;source&gt; &lt;destination&gt;</span><br></pre></td></tr></table></figure>
<p>其中，<code>&lt;source&gt;</code>表示要下载的文件路径，可以是HDFS上的文件或目录。<code>&lt;destination&gt;</code>表示本地文件系统中保存下载文件的目标路径。</p>
<p>以下是使用Hadoop命令行下载文件的示例：</p>
<ol>
<li>下载单个文件：</li>
</ol>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop fs -get hdfs://localhost:9000/path/to/source/file.txt /path/to/destination/</span><br></pre></td></tr></table></figure>
<p>该命令将HDFS上的<code>/path/to/source/file.txt</code>文件下载到本地文件系统的<code>/path/to/destination/</code>目录下。</p>
<ol start="2">
<li>下载整个目录：</li>
</ol>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hadoop fs -get hdfs://localhost:9000/path/to/source/directory/ /path/to/destination/</span><br></pre></td></tr></table></figure>
<p>该命令将HDFS上的<code>/path/to/source/directory/</code>目录及其所有内容下载到本地文件系统的<code>/path/to/destination/</code>目录下。</p>
<p>请注意，<code>-get</code>命令将文件从HDFS下载到本地文件系统，而不是在Hadoop集群上执行。因此，你需要在运行下载命令的机器上安装Hadoop并设置正确的Hadoop配置。</p>
<p>此外，还可以使用其他选项来控制下载行为，例如使用<code>-p</code>选项来保留与源文件相同的修改时间和权限。</p>
<p>下载好命令行之后你就可以进入到数据预处理和数据分析的部分</p>
<p>美妆数据处理的代码都在<code>ana/makeupana.ipynb</code>中</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501092317955.png" alt="image-20240501092317955"></p>
<p>所有以下的代码都是按顺序写的</p>
<ul>
<li>
<p>首先是数据下载</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501092836466.png" alt="image-20240501092836466"></p>
<p>这段代码使用Spark来读取本地文件并进行一些基本的数据操作和分析。</p>
<p>具体功能如下：</p>
<ol>
<li>
<p>创建SparkSession：通过<code>SparkSession.builder.getOrCreate()</code>创建一个SparkSession对象，用于与Spark进行交互。</p>
</li>
<li>
<p>从本地文件加载数据：使用<code>spark.read.csv()</code>方法从本地文件（文件路径为<code>demo.csv</code>）中加载数据。<code>header=True</code>表示文件包含标题行，<code>inferSchema=True</code>表示自动推断列的数据类型。加载后的数据存储在DataFrame对象<code>df</code>中，并通过<code>df.persist()</code>方法进行持久化（缓存）。</p>
</li>
<li>
<p>显示数据的前几行：使用<code>df.show()</code>方法显示DataFrame中的前几行数据，默认显示前20行。</p>
</li>
<li>
<p>获取数据的形状：通过<code>df.count()</code>获取DataFrame中的行数（数据记录数），<code>len(df.columns)</code>获取DataFrame中的列数（字段数）。打印出数据的形状，即行数和列数。</p>
</li>
<li>
<p>查看数据的信息：使用<code>df.printSchema()</code>方法打印DataFrame的结构信息，包括每个列的名称和数据类型。</p>
</li>
<li>
<p>计算 ‘店名’ 列的值计数：使用<code>df.groupBy('店名').count().show()</code>方法对DataFrame按照 ‘店名’ 列进行分组，并计算每个 ‘店名’ 的出现次数。最后使用<code>show()</code>方法展示结果。</p>
</li>
</ol>
<p>这段代码主要展示了使用Spark进行数据处理和分析的基本操作，包括数据加载、数据展示、数据形状统计、数据结构查看和简单的数据聚合分析。</p>
</li>
</ul>
<h4 id="数据预处理">数据预处理</h4>
<h5 id="删除缺少值">删除缺少值</h5>
<p>还有这段</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501092921577.png" alt="image-20240501092921577"></p>
<p>这段代码使用了<code>pyspark.sql.functions</code>模块中的函数来进行一些数据处理和缺失值处理操作。</p>
<p>具体功能如下：</p>
<ol>
<li>
<p>删除重复值：使用<code>df.dropDuplicates()</code>方法从DataFrame中删除重复的行，保留唯一的行。</p>
</li>
<li>
<p>重置索引：这部分代码被注释掉了，可能是用于重置DataFrame的索引。使用<code>df.withColumn()</code>方法可以添加一个名为&quot;index&quot;的列，该列的值可以通过<code>F.monotonically_increasing_id()</code>函数生成连续递增的唯一标识符。</p>
</li>
<li>
<p>查看缺失值：使用<code>df.select()</code>方法和列表推导式来查看DataFrame中每列的缺失值数量。<code>F.count(F.when(F.isnull(c), c))</code>用于统计列<code>c</code>中的缺失值数量，并使用<code>alias(c)</code>为结果命名为原始列名。</p>
</li>
<li>
<p>查看数据结构：使用<code>df.describe().show()</code>方法查看DataFrame的一些统计信息，包括计数、均值、标准差、最小值、最大值等。</p>
</li>
<li>
<p>查看sale_count列的众数：使用<code>df.groupBy(&quot;sale_count&quot;).count().orderBy(F.desc(&quot;count&quot;)).first()[&quot;sale_count&quot;]</code>方法计算并获取列&quot;sale_count&quot;中的众数（出现次数最多的值）。</p>
</li>
<li>
<p>查看comment_count列的众数：使用<code>df.groupBy(&quot;comment_count&quot;).count().orderBy(F.desc(&quot;count&quot;)).first()[&quot;comment_count&quot;]</code>方法计算并获取列&quot;comment_count&quot;中的众数。</p>
</li>
<li>
<p>填充缺失值为0：使用<code>df.fillna(0)</code>方法将DataFrame中的缺失值填充为0。</p>
</li>
<li>
<p>再次查看缺失值：使用与第3步相同的方法来查看DataFrame中每列的缺失值数量，此时应该显示为0，因为缺失值已经被填充。</p>
</li>
</ol>
<p>这段代码主要用于数据清洗和缺失值处理，包括删除重复值、重置索引、查看缺失值、查看数据结构、计算列的众数以及填充缺失值。</p>
<p><strong>注意因为这两段是我用spark重新写过的所以我在这里解释了其意思</strong></p>
<ol start="2">
<li>在数据分析和数据可视化之后我们会得到可视化的结果结果就是一张一张的图片，这些图片你在数据makeupana.ipyb 运行的过程中你就会看到就是那些得到的结果。</li>
</ol>
<h5 id="给商品名称中文分词">给商品名称中文分词</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093316566.png" alt="image-20240501093316566"></p>
<p>这段代码使用了中文分词库jieba来对<code>data</code>中的<code>title</code>列进行分词，并将分词结果存储在<code>title_cut</code>列表中。然后，通过将<code>title_cut</code>列表赋值给<code>data</code>的新列<code>item_name_cut</code>，将分词结果添加到<code>data</code>数据集中。</p>
<p>具体的步骤如下：</p>
<ol>
<li><code>import jieba</code>: 这行代码导入了jieba库，它是一个常用的中文分词库，用于将中文文本进行分词处理。</li>
<li><code>title_cut = []</code>: 创建一个空列表<code>title_cut</code>，用于存储分词结果。</li>
<li><code>for i in data.title:</code>: 这行代码使用一个循环遍历<code>data</code>数据集中的每个<code>title</code>值。</li>
<li><code>j = jieba.lcut(i)</code>: 这行代码使用jieba库的<code>lcut</code>函数对当前<code>title</code>值进行分词，返回一个分词后的列表，并将其赋值给变量<code>j</code>。</li>
<li><code>title_cut.append(j)</code>: 这行代码将分词结果<code>j</code>添加到<code>title_cut</code>列表中。</li>
<li><code>data['item_name_cut'] = title_cut</code>: 这行代码将<code>title_cut</code>列表赋值给<code>data</code>数据集的新列<code>item_name_cut</code>，将分词结果添加到数据集中。</li>
<li><code>data[['title','item_name_cut']].head()</code>: 这行代码打印<code>data</code>数据集中<code>title</code>列和<code>item_name_cut</code>列的前几行数据，以检查分词结果是否正确添加到了数据集中。</li>
</ol>
<p><strong>技术</strong>通过使用中文分词库jieba，可以将中文文本进行分词处理，将连续的文本切分成有意义的词语，为后续的文本挖掘、自然语言处理等任务提供基础。</p>
<h5 id="给商品分类">给商品分类</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093419481.png" alt="image-20240501093419481"></p>
<p>这段代码用于给商品进行分类。具体的步骤如下：</p>
<ol>
<li><code>sub_type = []</code> 和 <code>main_type = []</code>：创建两个空列表，用于存储商品的子类别和主类别。</li>
<li><code>basic_config_data = &quot;&quot;&quot;护肤品    套装    套装 ... 其他    其他    其他&quot;&quot;&quot;</code>：定义了一个包含商品分类信息的字符串。每一行表示一个商品类别的配置，由三个部分组成，以制表符分隔：主类别、子类别、具体的子类别列表。</li>
<li><code>category_config_map = &#123;&#125;</code>：创建一个空字典<code>category_config_map</code>，用于存储商品子类别与主类别的映射关系。</li>
<li><code>for config_line in basic_config_data.split('\n'):</code>：通过对<code>basic_config_data</code>字符串按换行符进行分割，遍历每一行配置。</li>
<li><code>basic_cateogry_list = config_line.strip().strip('\n').strip('    ').split('    ')</code>：将当前行的配置进行清理和分割，得到一个列表<code>basic_cateogry_list</code>，包含主类别、子类别和具体子类别列表。</li>
<li><code>main_category = basic_cateogry_list[0]</code> 和 <code>sub_category = basic_cateogry_list[1]</code>：从<code>basic_cateogry_list</code>提取主类别和子类别。</li>
<li><code>unit_category_list = basic_cateogry_list[2:-1]</code>：从<code>basic_cateogry_list</code>提取具体子类别列表。</li>
<li><code>for unit_category in unit_category_list:</code>：遍历具体子类别列表。</li>
<li><code>if unit_category and unit_category.strip().strip('    ')</code>：检查具体子类别是否存在且不为空。</li>
<li><code>category_config_map[unit_category] = (main_category,sub_category)</code>：将具体子类别作为键，将主类别和子类别作为值，添加到<code>category_config_map</code>字典中，建立子类别与主类别的映射关系。</li>
<li><code>category_config_map</code>：打印<code>category_config_map</code>字典，以检查商品子类别与主类别的映射关系是否正确添加。</li>
</ol>
<p>通过这段代码，可以根据配置信息将商品进行分类，并将子类别和主类别存储到对应的列表中。这样的分类信息可以用于后续的商品分析、推荐系统等任务。</p>
<p>没用到什么特别的技术</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093505928.png" alt="image-20240501093505928"></p>
<p>这段代码是一个循环结构，用于将商品数据根据分类配置信息进行分类，并将分类结果存储到<code>sub_type</code>和<code>main_type</code>列表中。</p>
<p>具体的步骤如下：</p>
<ol>
<li><code>for i in range(len(data)):</code>：通过<code>for</code>循环遍历<code>data</code>数据的索引。</li>
<li><code>exist = False</code>：初始化一个布尔变量<code>exist</code>，用于标记当前商品是否存在于分类配置中。</li>
<li><code>for temp in data.item_name_cut[i]:</code>：通过<code>for</code>循环遍历当前商品的分词结果<code>data.item_name_cut[i]</code>中的每个词语。</li>
<li><code>if temp in category_config_map:</code>：检查当前词语<code>temp</code>是否存在于分类配置字典<code>category_config_map</code>的键中。</li>
<li><code>sub_type.append(category_config_map.get(temp)[1])</code> 和 <code>main_type.append(category_config_map.get(temp)[0])</code>：如果当前词语存在于分类配置中，将对应的子类别和主类别添加到<code>sub_type</code>和<code>main_type</code>列表中。这里使用<code>category_config_map.get(temp)</code>来获取词语对应的主类别和子类别，并使用索引<code>[1]</code>和<code>[0]</code>来提取对应的值。</li>
<li><code>exist = True</code>：将<code>exist</code>变量设置为<code>True</code>，表示当前商品在分类配置中存在。</li>
<li><code>break</code>：跳出当前循环，结束对当前商品的词语遍历。</li>
<li><code>if not exist:</code>：如果当前商品在分类配置中不存在。</li>
<li><code>sub_type.append('其他')</code> 和 <code>main_type.append('其他')</code>：将主类别和子类别都设置为’其他’，表示该商品没有匹配到任何分类配置。</li>
<li><code>print(len(sub_type), len(main_type), len(data))</code>：打印<code>sub_type</code>、<code>main_type</code>和<code>data</code>列表的长度，以检查分类结果的正确性。</li>
</ol>
<p>这段代码根据商品的分词结果，在分类配置字典中查找词语对应的主类别和子类别，并将分类结果存储到<code>sub_type</code>和<code>main_type</code>列表中。如果某个商品的分词结果中的词语没有匹配到任何分类配置，那么该商品将被标记为’其他’类别。最后，通过打印列表长度的方式进行检查。</p>
<p>也没什么特别的技术如果循环算的话</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">&#x27;sub_type&#x27;</span>] = sub_type</span><br><span class="line">data[<span class="string">&#x27;main_type&#x27;</span>] = main_type</span><br><span class="line">data[<span class="string">&#x27;sub_type&#x27;</span>].value_counts()</span><br><span class="line">data[<span class="string">&#x27;main_type&#x27;</span>].value_counts()</span><br></pre></td></tr></table></figure>
<p>这段代码用于对分类结果进行统计分析，具体进行了以下操作：</p>
<ol>
<li><code>data['sub_type'] = sub_type</code> 和 <code>data['main_type'] = main_type</code>：将分类结果存储到<code>data</code>数据集的<code>sub_type</code>和<code>main_type</code>列中。通过这两行代码，将分类结果与原始数据关联起来，方便后续的分析和处理。</li>
<li><code>data['sub_type'].value_counts()</code>：使用<code>value_counts()</code>函数对<code>data</code>数据集中的<code>sub_type</code>列进行统计，计算每个子类别出现的次数。该函数会返回一个包含子类别和对应出现次数的统计结果。</li>
<li><code>data['main_type'].value_counts()</code>：使用<code>value_counts()</code>函数对<code>data</code>数据集中的<code>main_type</code>列进行统计，计算每个主类别出现的次数。该函数会返回一个包含主类别和对应出现次数的统计结果。</li>
</ol>
<p>通过这段代码，可以获取商品分类结果中每个子类别和主类别的出现次数统计。这对于分析商品分类的分布情况、了解主要类别和次要类别的比例以及进行后续的数据洞察和决策都是有帮助的。</p>
<p>也没有什么特别技术</p>
<h5 id="添加是否是男的使用">添加是否是男的使用</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093536858.png" alt="image-20240501093536858"></p>
<p>添加一列是不是男性专用</p>
<h5 id="计算销量之类的">计算销量之类的</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093559927.png" alt="image-20240501093559927"></p>
<ol>
<li><code>data['销售额'] = data.sale_count*data.price</code>：计算销售额，将销售量<code>sale_count</code>和价格<code>price</code>相乘，将结果存储在<code>销售额</code>列中。</li>
<li><code>data['update_time'] = pd.to_datetime(data['update_time'])</code>：将<code>update_time</code>列的数据转换为日期时间格式，使用<code>pd.to_datetime()</code>函数进行转换。</li>
<li><code>data['update_time']</code>：打印<code>update_time</code>列的数据，显示转换后的日期时间格式。</li>
<li><code>data = data.set_index('update_time')</code>：将<code>update_time</code>列设置为数据集的新索引，通过<code>set_index()</code>函数实现。</li>
<li><code>data['day'] = data.index.day</code>：新增一个名为<code>day</code>的列，用于存储日期时间索引中的天数。</li>
<li><code>del data['item_name_cut']</code>：删除数据集中的<code>item_name_cut</code>列，通过<code>del</code>关键字实现。</li>
<li><code>data.head()</code>：打印数据集的前几行，显示经过处理和转换后的数据。</li>
<li><code>data.info()</code>：打印数据集的信息，包括列名、数据类型和非空值数量等。</li>
</ol>
<p>这段代码主要用于对数据集进行预处理和转换，包括计算销售额、转换时间格式、设置新的索引、新增列、删除不需要的列等操作。这些处理和转换可以使数据集更加方便和适合进行后续的分析和计算。</p>
<p>技术各种数学计算</p>
<h5 id="保存清理好的数据">保存清理好的数据</h5>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保存清理好的数据为Excel格式</span></span><br><span class="line">data.to_excel(<span class="string">&#x27;clean_beautymakeup.xls&#x27;</span>,sheet_name=<span class="string">&#x27;clean_data&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>到这一步终于清理好数据预处理完毕</p>
<p>技术<code>pandas</code>的保存为excel</p>
<h4 id="数据分析">数据分析</h4>
<h5 id="sku分析">sku分析</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093651356.png" alt="image-20240501093651356"></p>
<p>这段代码使用了<code>Matplotlib</code>和<code>Seaborn</code>库来进行<strong>数据可视化</strong>，主要实现了以下功能：</p>
<ol>
<li><code>import matplotlib.pyplot as plt</code> 和 <code>import seaborn as sns</code>：导入Matplotlib和Seaborn库，用于绘图和数据可视化。</li>
<li><code>%matplotlib inline</code>：这是一个Jupyter Notebook的魔法命令，用于在Notebook中显示Matplotlib绘制的图形。</li>
<li><code>data.columns</code>：打印数据集的列名，显示数据集中的所有列。</li>
<li><code>plt.rcParams['font.sans-serif']=['SimHei']</code> 和 <code>plt.rcParams['axes.unicode_minus']=False</code>：设置Matplotlib的字体和解决负号显示问题的配置，其中<code>SimHei</code>是指定的中文字体。</li>
<li><code>plt.figure(figsize=(8,6))</code>：创建一个新的图形，并指定图形的大小为8x6英寸。</li>
<li><code>data['店名'].value_counts().sort_values(ascending=False).plot.bar(width=0.8,alpha=0.6,color='b')</code>：计算每个店铺的商品数量，并将结果按照降序绘制成柱状图。<code>data['店名'].value_counts()</code>用于计算每个店铺的商品数量，<code>sort_values(ascending=False)</code>用于按照降序排序，<code>plot.bar()</code>用于绘制柱状图，<code>width=0.8</code>指定柱子的宽度，<code>alpha=0.6</code>指定柱子的透明度，<code>color='b'</code>指定柱子的颜色为蓝色。</li>
<li><code>plt.title('各品牌SKU数',fontsize=18)</code>：设置图形的标题为&quot;各品牌SKU数&quot;，并指定标题的字体大小为18。</li>
<li><code>plt.ylabel('商品数量',fontsize=14)</code>：设置y轴的标签为&quot;商品数量&quot;，并指定标签的字体大小为14。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>这段代码的目的是绘制一个柱状图，展示各个店铺的商品数量。通过可视化数据，可以更直观地比较不同店铺之间的SKU（库存商品单位）数量差异，帮助分析和决策。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420144954733.png" alt></p>
<h5 id="品牌销售量">品牌销售量</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093717799.png" alt="image-20240501093717799"></p>
<p>这段代码使用了Matplotlib库来创建一个包含两个子图的图形，主要实现了以下功能：</p>
<ol>
<li>
<p><code>fig,axes = plt.subplots(1,2,figsize=(12,10))</code>：创建一个包含1行2列的图形，指定图形的大小为12x10英寸，并将返回的图形对象存储在<code>fig</code>和<code>axes</code>变量中。</p>
</li>
<li>
<p><code>ax1 = data.groupby('店名').sale_count.sum().sort_values(ascending=True).plot(kind='barh',ax=axes[0],width=0.6)</code>：对数据集按照店铺进行分组，计算每个店铺的总销售量，然后按照升序排序，并绘制水平条形图。<code>kind='barh'</code>指定绘图类型为水平条形图，<code>ax=axes[0]</code>指定子图的位置为第一个子图，<code>width=0.6</code>指定条形的宽度为0.6。绘制完成后，将返回的图形对象存储在<code>ax1</code>变量中。</p>
</li>
<li>
<p><code>ax1.set_title('品牌总销售量',fontsize=12)</code>：设置第一个子图的标题为&quot;品牌总销售量&quot;，并指定标题的字体大小为12。</p>
</li>
<li>
<p><code>ax1.set_xlabel('总销售量')</code>：设置第一个子图的x轴标签为&quot;总销售量&quot;。</p>
</li>
<li>
<p><code>ax2 = data.groupby('店名')['销售额'].sum().sort_values(ascending=True).plot(kind='barh',ax=axes[1],width=0.6)</code>：对数据集按照店铺进行分组，计算每个店铺的总销售额，然后按照升序排序，并绘制水平条形图。<code>kind='barh'</code>指定绘图类型为水平条形图，<code>ax=axes[1]</code>指定子图的位置为第二个子图，<code>width=0.6</code>指定条形的宽度为0.6。绘制完成后，将返回的图形对象存储在<code>ax2</code>变量中。</p>
</li>
<li>
<p><code>ax2.set_title('品牌总销售额',fontsize=12)</code>：设置第二个子图的标题为&quot;品牌总销售额&quot;，并指定标题的字体大小为12。</p>
</li>
<li>
<p><code>ax2.set_xlabel('总销售额')</code>：设置第二个子图的x轴标签为&quot;总销售额&quot;。</p>
</li>
<li>
<p><code>plt.subplots_adjust(wspace=0.4)</code>：调整子图之间的水平间距为0.4，以便更好地显示。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>这段代码的目的是绘制两个水平条形图，分别展示每个店铺的总销售量和总销售额。通过可视化数据，可以直观地比较不同店铺之间的销售情况，帮助分析和决策。</p>
<h5 id="各种类占比和可视化-使用饼图">各种类占比和可视化 使用饼图</h5>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fig,axes = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">12</span>,<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">data1 = data.groupby(<span class="string">&#x27;main_type&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">ax1 = data1.plot(kind=<span class="string">&#x27;pie&#x27;</span>,ax=axes[<span class="number">0</span>],autopct=<span class="string">&#x27;%.1f%%&#x27;</span>, <span class="comment"># 设置百分比的格式，这里保留一位小数</span></span><br><span class="line">pctdistance=<span class="number">0.8</span>, <span class="comment"># 设置百分比标签与圆心的距离</span></span><br><span class="line">labels= data1.index,</span><br><span class="line">labeldistance = <span class="number">1.05</span>, <span class="comment"># 设置标签与圆心的距离</span></span><br><span class="line">startangle = <span class="number">60</span>, <span class="comment"># 设置饼图的初始角度</span></span><br><span class="line">radius = <span class="number">1.1</span>, <span class="comment"># 设置饼图的半径</span></span><br><span class="line">counterclock = <span class="literal">False</span>, <span class="comment"># 是否逆时针，这里设置为顺时针方向</span></span><br><span class="line">wedgeprops = &#123;<span class="string">&#x27;linewidth&#x27;</span>: <span class="number">1.2</span>, <span class="string">&#x27;edgecolor&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;,<span class="comment"># 设置饼图内外边界的属性值</span></span><br><span class="line">textprops = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">10</span>, <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;, <span class="comment"># 设置文本标签的属性值</span></span><br><span class="line">)</span><br><span class="line">ax1.set_title(<span class="string">&#x27;主类别销售量占比&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">data2 = data.groupby(<span class="string">&#x27;sub_type&#x27;</span>)[<span class="string">&#x27;sale_count&#x27;</span>].<span class="built_in">sum</span>()</span><br><span class="line">ax2 = data2.plot(kind=<span class="string">&#x27;pie&#x27;</span>,ax=axes[<span class="number">1</span>],autopct=<span class="string">&#x27;%.1f%%&#x27;</span>, </span><br><span class="line">pctdistance=<span class="number">0.8</span>, </span><br><span class="line">labels= data2.index,</span><br><span class="line">labeldistance = <span class="number">1.05</span>,</span><br><span class="line">startangle = <span class="number">230</span>, </span><br><span class="line">radius = <span class="number">1.1</span>, </span><br><span class="line">counterclock = <span class="literal">False</span>, </span><br><span class="line">wedgeprops = &#123;<span class="string">&#x27;linewidth&#x27;</span>: <span class="number">1.2</span>, <span class="string">&#x27;edgecolor&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;,</span><br><span class="line">textprops = &#123;<span class="string">&#x27;fontsize&#x27;</span>:<span class="number">10</span>, <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;k&#x27;</span>&#125;, </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ax2.set_title(<span class="string">&#x27;子类别销售量占比&#x27;</span>,fontsize=<span class="number">12</span>)</span><br><span class="line"></span><br><span class="line">plt.subplots_adjust(wspace=<span class="number">0.4</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这段代码使用Matplotlib库创建了一个包含两个子图的图形，主要实现了以下功能：</p>
<p>fig,axes = plt.subplots(1,2,figsize=(12,5))：创建一个包含1行2列的图形，指定图形的大小为12x5英寸，并将返回的图形对象存储在fig和axes变量中。</p>
<p>data1 = data.groupby(‘main_type’)[‘sale_count’].sum()：按照&quot;main_type&quot;列对数据集进行分组，计算每个主类别的销售量总和，并将结果存储在data1变量中。</p>
<p>ax1 = data1.plot(kind=‘pie’,ax=axes[0],autopct=‘%.1f%%’, pctdistance=0.8, labels=data1.index, labeldistance=1.05, startangle=60, radius=1.1, counterclock=False, wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}, textprops={‘fontsize’:10, ‘color’:‘k’})：绘制第一个子图，使用饼图展示每个主类别的销售量占比。kind=‘pie’指定绘图类型为饼图，ax=axes[0]指定子图的位置为第一个子图，autopct=’%.1f%%'设置百分比的显示格式，pctdistance=0.8设置百分比标签与圆心的距离，labels=data1.index指定饼图的标签为主类别的名称，labeldistance=1.05设置标签与圆心的距离，startangle=60设置饼图的初始角度，radius=1.1设置饼图的半径，counterclock=False设置饼图的绘制方向为顺时针，wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}设置饼图内外边界的属性，textprops={‘fontsize’:10, ‘color’:‘k’}设置文本标签的属性。绘制完成后，将返回的图形对象存储在ax1变量中。</p>
<p>ax1.set_title(‘主类别销售量占比’,fontsize=12)：设置第一个子图的标题为&quot;主类别销售量占比&quot;，并指定标题的字体大小为12。</p>
<p>data2 = data.groupby(‘sub_type’)[‘sale_count’].sum()：按照&quot;sub_type&quot;列对数据集进行分组，计算每个子类别的销售量总和，并将结果存储在data2变量中。</p>
<p>ax2 = data2.plot(kind=‘pie’,ax=axes[1],autopct=‘%.1f%%’, pctdistance=0.8, labels=data2.index, labeldistance=1.05, startangle=230, radius=1.1, counterclock=False, wedgeprops={‘linewidth’: 1.2, ‘edgecolor’:‘k’}, textprops={‘fontsize’:10, ‘color’:‘k’})：绘制第二个子图，使用饼图展示每个子类别的销售量占比。参数的含义和设置方式与第一个子图类似，只是绘图数据和标题不同。绘制完成后，将返回的图形对象存储在ax2变量中。</p>
<p>ax2.set_title(‘子类别销售量占比’,fontsize=12)：设置第二个子图的标题为&quot;子类别销售量占比&quot;，并指定标题的字体大小为12。</p>
<p>plt.subplots_adjust(wspace=0.4)：调整子图之间的水平间距为0.4，以便更好地显示。</p>
<p>plt.show()：显示绘制的图形。</p>
<p>这段代码的目的是绘制两个饼图，分别展示主类别和子类别的销售量占比。通过可视化数据，可以直观地了解各个类别在销售中的贡献比例，帮助分析和决策。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420151747132.png" alt="image-20240420151747132"></p>
<p>使用堆叠图的表示</p>
<p>这段代码是用于对一份数据进行可视化的操作。：</p>
<ol>
<li>
<p>第一行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize=(14,6))</span><br></pre></td></tr></table></figure>
<p>这行代码创建了一个大小为14x6的新图形，用于后续的可视化操作。</p>
</li>
<li>
<p>第二行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sns.barplot(x=&#x27;店名&#x27;,y=&#x27;sale_count&#x27;,hue=&#x27;main_type&#x27;,data=data,saturation=0.75,ci=0)</span><br></pre></td></tr></table></figure>
<p>这行代码使用Seaborn库的<code>barplot</code>函数创建了一个条形图。<code>x</code>参数设置为&quot;店名&quot;，<code>y</code>参数设置为&quot;sale_count&quot;，<code>hue</code>参数设置为&quot;main_type&quot;，表示将根据&quot;main_type&quot;的取值进行分组。<code>data</code>参数指定要使用的数据集，这里使用了名为<code>data</code>的数据集。<code>saturation</code>参数设置饱和度为0.75，<code>ci</code>参数设置为0，表示不显示误差线。</p>
</li>
<li>
<p>第三行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.title(&#x27;各品牌各总类的总销量&#x27;)</span><br></pre></td></tr></table></figure>
<p>这行代码设置了图形的标题为&quot;各品牌各总类的总销量&quot;。</p>
</li>
<li>
<p>第四行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.ylabel(&#x27;销量&#x27;)</span><br></pre></td></tr></table></figure>
<p>这行代码设置了纵轴的标签为&quot;销量&quot;。</p>
</li>
<li>
<p>第五行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.text(0,78000,&#x27;注：此处也可使用堆叠图，对比效果更直观&#x27;,</span><br><span class="line">      verticalalignment=&#x27;top&#x27;, horizontalalignment=&#x27;left&#x27;,color=&#x27;gray&#x27;, fontsize=10)</span><br></pre></td></tr></table></figure>
<p>这行代码在图形中添加了一段文本，位于坐标(0, 78000)的位置。文本内容是&quot;注：此处也可使用堆叠图，对比效果更直观&quot;。<code>verticalalignment</code>参数设置垂直对齐方式为&quot;top&quot;，<code>horizontalalignment</code>参数设置水平对齐方式为&quot;left&quot;，<code>color</code>参数设置文本颜色为灰色，<code>fontsize</code>参数设置文本字体大小为10。</p>
</li>
<li>
<p>第六行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这行代码用于显示生成的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的目的是使用条形图对数据进行可视化，横轴表示店名，纵轴表示销售数量，颜色的不同代表不同的主要类型。图形的标题是&quot;各品牌各总类的总销量&quot;，纵轴标签为&quot;销量&quot;。此外，还在图形中添加了一段注释文本，提醒读者也可使用堆叠图来观察数据的对比效果。<img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094658726.png" alt="image-20240501094658726"></p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094711082.png" alt="image-20240501094711082"></p>
<h5 id="销量">销量</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093749303.png" alt="image-20240501093749303"></p>
<p>使用<code>matplot</code>创建柱状图</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420152138014.png" alt="image-20240420152138014"></p>
<h5 id="销售额">销售额</h5>
<p>各品牌各总类总销售额</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501095128187.png" alt="image-20240501095128187"></p>
<p>各品牌子类总销售额</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094941786.png" alt="image-20240501094941786"></p>
<p>各品牌各子类总销售额</p>
<h5 id="各销售物品的平均评论数">各销售物品的平均评论数</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093858249.png" alt="image-20240501093858249"></p>
<p>这段代码是用来绘制一个条形图，显示各个品牌商品的平均评论数。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,6))</code>：设置图形的大小为12英寸宽和6英寸高，创建一个新的图形窗口。</li>
<li><code>data.groupby('店名').comment_count.mean()</code>：对数据集 <code>data</code> 按照 ‘店名’ 进行分组，然后计算每个组中 ‘comment_count’ 列的平均值。这将返回一个包含各个品牌的平均评论数的 Series 对象。</li>
<li><code>.sort_values(ascending=False)</code>：对平均评论数进行降序排序，以便条形图能够按照从高到低的顺序显示。</li>
<li><code>.plot(kind='bar', width=0.8)</code>：以条形图的形式绘制数据。参数 <code>kind='bar'</code> 指定绘制条形图，<code>width=0.8</code> 指定条形的宽度为0.8。</li>
<li><code>plt.title('各品牌商品的平均评论数')</code>：设置图形的标题为 ‘各品牌商品的平均评论数’。</li>
<li><code>plt.ylabel('评论数')</code>：设置y轴标签为 ‘评论数’。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和评论数信息，绘制一个条形图，以展示各个品牌商品的平均评论数，并按照评论数从高到低的顺序进行排序。</p>
<p>当然这个使用了<code>pandas的groupby</code></p>
<h5 id="品牌热度的分析">品牌热度的分析</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093918660.png" alt="image-20240501093918660"></p>
<p>这段代码是用来绘制一个散点图，以显示不同品牌商品的销量、评论数和价格之间的关系。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,10))</code>：设置图形的大小为12英寸宽和10英寸高，创建一个新的图形窗口。</li>
<li><code>x = data.groupby('店名')['sale_count'].mean()</code>：计算每个品牌的平均销量，并将结果存储在变量 <code>x</code> 中。</li>
<li><code>y = data.groupby('店名')['comment_count'].mean()</code>：计算每个品牌的平均评论数，并将结果存储在变量 <code>y</code> 中。</li>
<li><code>s = data.groupby('店名')['price'].mean()</code>：计算每个品牌的平均价格，并将结果存储在变量 <code>s</code> 中。</li>
<li><code>txt = data.groupby('店名').id.count().index</code>：获取每个品牌的名称，并将结果存储在变量 <code>txt</code> 中。</li>
<li><code>sns.scatterplot(x, y, size=s, hue=s, sizes=(100,1500), data=data)</code>：使用 seaborn 库的 <code>scatterplot</code> 函数绘制散点图。参数 <code>x</code> 和 <code>y</code> 分别指定 x 轴和 y 轴的数据，<code>size=s</code> 指定散点的大小与平均价格相关，<code>hue=s</code> 指定散点的颜色与平均价格相关，<code>sizes=(100,1500)</code> 指定散点的大小范围，<code>data=data</code> 指定使用的数据集。</li>
<li><code>for i in range(len(txt)): plt.annotate(txt[i],xy=(x[i],y[i]))</code>：使用循环遍历每个品牌的名称，并在对应的散点上标注品牌名称。</li>
<li><code>plt.ylabel('热度')</code>：设置 y 轴标签为 ‘热度’。</li>
<li><code>plt.xlabel('销量')</code>：设置 x 轴标签为 ‘销量’。</li>
<li><code>plt.legend(loc='upper left')</code>：显示图例，将图例放置在左上角。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌、销量、评论数和价格信息，绘制一个散点图，用于展示不同品牌商品之间的销量、评论数和价格的分布情况，并在散点上标注品牌名称。</p>
<p>使用了<code>matplot</code>画散点图的技术</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420154606255.png" alt="image-20240420154606255"></p>
<h5 id="价格箱型图">价格箱型图</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093938689.png" alt="image-20240501093938689"></p>
<p>这段代码是用来绘制一个箱型图，以展示不同品牌商品的价格分布情况。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(14,6))</code>：设置图形的大小为14英寸宽和6英寸高，创建一个新的图形窗口。</li>
<li><code>sns.boxplot(x='店名', y='price', data=data)</code>：使用 seaborn 库的 <code>boxplot</code> 函数绘制箱型图。参数 <code>x='店名'</code> 指定箱型图的横轴为品牌名称，<code>y='price'</code> 指定箱型图的纵轴为价格，<code>data=data</code> 指定使用的数据集。</li>
<li><code>plt.ylim(0,3000)</code>：限制 y 轴的范围为0到3000，这样可以缩小 y 轴的刻度范围，使得箱型图更容易观察。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和价格信息，绘制一个箱型图，用于展示不同品牌商品的价格分布情况。通过箱型图，可以看到不同品牌商品的价格的中位数、上下四分位数、异常值等统计信息，以帮助分析价格的整体分布和离群值情况。限制 y 轴范围为0到3000是为了缩小刻度范围，更好地展示箱型图的细节。</p>
<p>使用了一个<code>matplot</code>画箱型图</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420154549889.png" alt="image-20240420154549889"></p>
<h5 id="个品牌的平均价格">个品牌的平均价格</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501093956814.png" alt="image-20240501093956814"></p>
<p>这段代码计算了每个店铺商品的平均价格。代码的功能如下：</p>
<ol>
<li><code>data.groupby('店名').price.sum()</code>：对数据集 <code>data</code> 按照 ‘店名’ 进行分组，然后计算每个组中 ‘price’ 列的总和。这将返回一个包含各个店铺商品价格总和的 Series 对象。</li>
<li><code>avg_price = data.groupby('店名').price.sum() / data.groupby('店名').price.count()</code>：计算每个店铺商品的平均价格。首先，使用 <code>data.groupby('店名').price.sum()</code> 计算每个店铺商品价格的总和；然后，使用 <code>data.groupby('店名').price.count()</code> 计算每个店铺商品的数量；最后，将价格总和除以商品数量，得到每个店铺商品的平均价格。结果存储在变量 <code>avg_price</code> 中。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的店铺和价格信息，计算每个店铺商品的平均价格，并将结果存储在变量 <code>avg_price</code> 中。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094030190.png" alt="image-20240501094030190"></p>
<p>这段代码是用来绘制一个条形图，展示各个品牌产品的平均价格，并在图中添加全品牌平均价格的水平线。代码的功能如下：</p>
<ol>
<li>
<p><code>fig = plt.figure(figsize=(12,6))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和6英寸高。</p>
</li>
<li>
<p><code>avg_price.sort_values(ascending=False).plot(kind='bar', width=0.8, alpha=0.6, color='b', label='各品牌平均价格')</code>：对平均价格进行降序排序，并以条形图的形式绘制数据。参数 <code>kind='bar'</code> 指定绘制条形图，<code>width=0.8</code> 指定条形的宽度为0.8，<code>alpha=0.6</code> 指定条形的透明度为0.6，<code>color='b'</code> 指定条形的颜色为蓝色，<code>label='各品牌平均价格'</code> 指定图例标签为’各品牌平均价格’。</p>
</li>
<li>
<p><code>y = data['price'].mean()</code>：计算全品牌的平均价格，并将结果存储在变量 <code>y</code> 中。</p>
</li>
<li>
<p><code>plt.axhline(y, 0, 5, color='r', label='全品牌平均价格')</code>：在图中添加一条水平线，表示全品牌平均价格。<code>y</code> 参数指定水平线的 y 坐标，<code>0</code> 和 <code>5</code> 参数指定水平线的起始和结束位置，<code>color='r'</code> 指定水平线的颜色为红色，<code>label='全品牌平均价格'</code> 指定图例标签为’全品牌平均价格’。</p>
</li>
<li>
<p><code>plt.ylabel('各品牌平均价格')</code>：设置 y 轴标签为’各品牌平均价格’。</p>
</li>
<li>
<p><code>plt.title('各品牌产品的平均价格', fontsize=24)</code>：设置图形的标题为’各品牌产品的平均价格’，并指定标题的字体大小为24。</p>
</li>
<li>
<p><code>plt.legend(loc='best')</code>：显示图例，并将图例放置在最佳位置。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的品牌和价格信息，绘制一个条形图，显示各个品牌产品的平均价格，并在图中添加全品牌平均价格的水平线。图形还包括标签、标题和图例等元素，以增强可读性。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420155027534.png" alt="image-20240420155027534"></p>
<h5 id="销量价格之间关系">销量价格之间关系</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094100260.png" alt="image-20240501094100260"></p>
<p>这段代码是用来绘制一个散点图，展示不同店铺的销售额和销量之间的关系，并在散点图上添加店铺名称的标签。代码的功能如下：</p>
<ol>
<li><code>plt.figure(figsize=(12,10))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和10英寸高。</li>
<li><code>x = data.groupby('店名')['sale_count'].mean()</code>：计算每个店铺的销量的平均值，并将结果存储在变量 <code>x</code> 中。</li>
<li><code>y = data.groupby('店名')['销售额'].mean()</code>：计算每个店铺的销售额的平均值，并将结果存储在变量 <code>y</code> 中。</li>
<li><code>s = avg_price</code>：将之前计算得到的平均价格存储在变量 <code>s</code> 中，用于设置散点的大小。</li>
<li><code>txt = data.groupby('店名').id.count().index</code>：获取每个店铺的名称，并将结果存储在变量 <code>txt</code> 中。</li>
<li><code>sns.scatterplot(x, y, size=s, sizes=(100,1500), marker='v', alpha=0.5, color='b', data=data)</code>：使用 seaborn 库的 <code>scatterplot</code> 函数绘制散点图。参数 <code>x</code> 指定散点的 x 坐标为销量的平均值，<code>y</code> 指定散点的 y 坐标为销售额的平均值，<code>size=s</code> 指定散点的大小为平均价格，<code>sizes=(100,1500)</code> 指定散点的大小范围为100到1500，<code>marker='v'</code> 指定散点的形状为倒三角形，<code>alpha=0.5</code> 指定散点的透明度为0.5，<code>color='b'</code> 指定散点的颜色为蓝色，<code>data=data</code> 指定使用的数据集。</li>
<li><code>for i in range(len(txt)):</code>：遍历每个店铺的名称。</li>
<li><code>plt.annotate(txt[i], xy=(x[i], y[i]), xytext=(x[i]+0.2, y[i]+0.2))</code>：在散点后面添加店铺名称的标签。参数 <code>txt[i]</code> 指定标签的文本为店铺名称，<code>xy=(x[i], y[i])</code> 指定标签的位置为对应的散点坐标，<code>xytext=(x[i]+0.2, y[i]+0.2)</code> 指定标签文本的位置偏移量。</li>
<li><code>plt.ylabel('销售额')</code>：设置 y 轴标签为’销售额’。</li>
<li><code>plt.xlabel('销量')</code>：设置 x 轴标签为’销量’。</li>
<li><code>plt.legend(loc='upper left')</code>：显示图例，并将图例放置在左上角。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的店铺的销量和销售额信息，绘制一个散点图，显示销售额和销量之间的关系，并在散点图上添加店铺名称的标签。图形还包括标签、标题和图例等元素，以增强可读性。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420160038024.png" alt="image-20240420160038024"></p>
<h5 id="是否为男士专用">是否为男士专用</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094211266.png" alt="image-20240501094211266"></p>
<p>这段代码是用于对一份数据进行筛选和可视化的操作。</p>
<ol>
<li>
<p>第一行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gender_data=data[data[&#x27;是否男士专用&#x27;]==&#x27;是&#x27;]</span><br></pre></td></tr></table></figure>
<p>这行代码的目的是从名为<code>data</code>的数据集中筛选出&quot;是否男士专用&quot;这一列的取值为&quot;是&quot;的数据，并将结果存储在名为<code>gender_data</code>的新数据集中。</p>
</li>
<li>
<p>第二行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gender_data_1=gender_data[(gender_data.main_type ==&#x27;护肤品&#x27;)| (gender_data.main_type==&#x27;化妆品&#x27;)]</span><br></pre></td></tr></table></figure>
<p>这行代码的目的是从上一步筛选得到的<code>gender_data</code>数据集中，进一步筛选出&quot;main_type&quot;这一列的取值为&quot;护肤品&quot;或&quot;化妆品&quot;的数据，并将结果存储在名为<code>gender_data_1</code>的新数据集中。</p>
</li>
<li>
<p>第三行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.figure(figsize = (12,6))</span><br></pre></td></tr></table></figure>
<p>这行代码创建了一个大小为12x6的新图形，用于后续的可视化操作。</p>
</li>
<li>
<p>第四行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sns.barplot(x=&#x27;店名&#x27;,y=&#x27;sale_count&#x27;,hue=&#x27;main_type&#x27;,data =gender_data_1,saturation=0.75,ci=0,)</span><br></pre></td></tr></table></figure>
<p>这行代码使用Seaborn库的<code>barplot</code>函数创建了一个条形图。<code>x</code>参数设置为&quot;店名&quot;，<code>y</code>参数设置为&quot;sale_count&quot;，<code>hue</code>参数设置为&quot;main_type&quot;，表示将根据&quot;main_type&quot;的取值进行分组。<code>data</code>参数指定要使用的数据集，这里使用了之前筛选得到的<code>gender_data_1</code>数据集。<code>saturation</code>参数设置饱和度为0.75，<code>ci</code>参数设置为0，表示不显示误差线。</p>
</li>
<li>
<p>第五行代码:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>这行代码用于显示生成的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的目的是从原始数据集中筛选出&quot;是否男士专用&quot;为&quot;是&quot;的数据，并进一步筛选出&quot;main_type&quot;为&quot;护肤品&quot;或&quot;化妆品&quot;的数据。然后使用条形图对这些数据进行可视化，横轴表示店名，纵轴表示销售数量</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094405071.png" alt="image-20240501094405071"></p>
<h5 id="男生的销量与销售额">男生的销量与销售额</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094423561.png" alt="image-20240501094423561"></p>
<p>这段代码是用来绘制一个包含两个水平条形图的子图，分别展示男士护肤品销量和销售额的排名。代码的功能如下：</p>
<ol>
<li><code>f, [ax1, ax2] = plt.subplots(1, 2, figsize=(12, 6))</code>：创建一个包含两个子图的图形窗口。参数 <code>1, 2</code> 指定子图的布局为1行2列，<code>figsize=(12, 6)</code> 指定图形的大小为12英寸宽和6英寸高。并将子图对象分别存储在 <code>ax1</code> 和 <code>ax2</code> 变量中。</li>
<li><code>gender_data.groupby('店名').sale_count.sum().sort_values(ascending=True).plot(kind='barh', width=0.8, ax=ax1)</code>：对男士护肤品的销量数据进行分组，计算每个店铺的销量总和，并按照升序排序。然后以水平条形图的形式绘制数据，并将图形绘制在第一个子图 <code>ax1</code> 上。参数 <code>kind='barh'</code> 指定绘制水平条形图，<code>width=0.8</code> 指定条形的宽度为0.8。</li>
<li><code>ax1.set_title('男士护肤品销量排名')</code>：设置第一个子图的标题为’男士护肤品销量排名’。</li>
<li><code>gender_data.groupby('店名').销售额.sum().sort_values(ascending=True).plot(kind='barh', width=0.8, ax=ax2)</code>：对男士护肤品的销售额数据进行分组，计算每个店铺的销售额总和，并按照升序排序。然后以水平条形图的形式绘制数据，并将图形绘制在第二个子图 <code>ax2</code> 上。</li>
<li><code>ax2.set_title('男士护肤品销售额排名')</code>：设置第二个子图的标题为’男士护肤品销售额排名’。</li>
<li><code>plt.subplots_adjust(wspace=0.4)</code>：调整两个子图之间的水平间距为0.4。</li>
<li><code>plt.show()</code>：显示绘制的图形。</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中的男士护肤品的销量和销售额信息，绘制两个水平条形图的子图，分别展示男士护肤品销量和销售额的排名，并在图形中添加标题。同时通过调整子图之间的间距来改善布局。最后显示绘制的图形。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420160241804.png" alt="image-20240420160241804"></p>
<h5 id="销量随时间的变化的变化">销量随时间的变化的变化</h5>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240501094444306.png" alt="image-20240501094444306"></p>
<p>这段代码是用来绘制一个折线图，展示每天的销售量随时间的变化情况，并对图形进行一些样式设置。代码的功能如下：</p>
<ol>
<li>
<p><code>plt.figure(figsize=(12, 6))</code>：创建一个新的图形窗口，并设置图形的大小为12英寸宽和6英寸高。</p>
</li>
<li>
<p><code>day_sale = data.groupby('day')['sale_count'].sum()</code>：对数据集按照日期进行分组，并计算每天销售量的总和，并将结果存储在变量 <code>day_sale</code> 中。</p>
</li>
<li>
<p><code>day_sale.plot()</code>：以折线图的形式绘制每天销售量的变化情况。</p>
</li>
<li>
<p><code>plt.grid(linestyle=&quot;-.&quot;, color=&quot;gray&quot;, axis=&quot;x&quot;, alpha=0.5)</code>：添加网格线到图形中。参数 <code>linestyle=&quot;-.&quot;</code> 指定网格线的样式为虚线，<code>color=&quot;gray&quot;</code> 指定网格线的颜色为灰色，<code>axis=&quot;x&quot;</code> 指定只在 x 轴上显示网格线，<code>alpha=0.5</code> 指定网格线的透明度为0.5。</p>
</li>
<li>
<p><code>x_major_locator = MultipleLocator(1)</code>：创建一个 <code>MultipleLocator</code> 对象，用于设置 x 轴主刻度的间隔为1。这样可以确保 x 轴上的刻度显示为整数。</p>
</li>
<li>
<p><code>ax = plt.gca()</code>：获取当前图形的坐标轴对象。</p>
</li>
<li>
<p><code>ax.xaxis.set_major_locator(x_major_locator)</code>：将 x 轴的主刻度设置为 <code>x_major_locator</code> 对象指定的刻度间隔，即每隔1个单位显示一个刻度。</p>
</li>
<li>
<p><code>plt.xlabel('日期（11月）')</code>：设置 x 轴的标签为’日期（11月）'。</p>
</li>
<li>
<p><code>plt.ylabel('销量')</code>：设置 y 轴的标签为’销量’。</p>
</li>
<li>
<p><code>plt.show()</code>：显示绘制的图形。</p>
</li>
</ol>
<p>综合起来，这段代码的作用是根据给定数据集中每天的销售量数据，绘制一个折线图，展示销售量随时间的变化情况，并对图形进行一些样式设置，如添加网格线、设置坐标轴刻度和标签等。最后显示绘制的图形。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240420160602719.png" alt="image-20240420160602719"></p>
<h3 id="得到图片后可以写前端">得到图片后可以写前端</h3>
<p>在将这些图片粘贴到前项目中的图片文件夹<img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430153406609.png" alt="image-20240430153406609"></p>
<p>​	所有的分析图片会被放入makuui前端项目的assert/images中</p>
<p>前端将每一个分析都编写成组件</p>
<p>组件的位置</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430184813282.png" alt="image-20240430184813282"></p>
<p>第一个分析在<code>makeup-ui/src/views/system/ana1/index.vue</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;img style=&quot;width:50%&quot; src=&quot;@/assets/images/ana2.jpg&quot; alt=&quot;数据展示&quot; /&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      imageUrl: &#x27;@/assets/images/ana1.jpg&#x27;, </span><br><span class="line">      labelText: &#x27;数据展示&#x27;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;：</span><br></pre></td></tr></table></figure>
<blockquote>
<p>这段代码是一个Vue组件的代码片段，用于显示一个包含图像和文本的容器。</p>
<p>具体功能如下：</p>
<ol>
<li>
<p>模板部分：</p>
<ul>
<li>使用<code>&lt;div class=&quot;container&quot;&gt;</code>定义一个容器，设置了居中对齐的样式。</li>
<li>使用<code>&lt;img&gt;</code>标签插入图像，设置了图像的宽度为50%，并使用<code>src</code>属性指定图像的路径为<code>@/assets/images/ana2.jpg</code>，<code>alt</code>属性为&quot;数据展示&quot;。</li>
</ul>
</li>
<li>
<p>脚本部分：</p>
<ul>
<li>在<code>data</code>属性中定义了一个<code>imageUrl</code>变量，值为<code>@/assets/images/ana1.jpg</code>，用于存储另一张图像的路径。</li>
<li>定义了一个<code>labelText</code>变量，值为&quot;数据展示&quot;，用于存储文本标签的内容。</li>
</ul>
</li>
<li>
<p>样式部分：</p>
<ul>
<li>使用<code>.container</code>选择器定义了一个样式规则，使容器内的内容居中对齐。</li>
</ul>
</li>
</ol>
<p>这段代码的主要功能是在Vue组件中创建一个包含图像和文本的容器，并通过数据绑定设置图像路径和文本内容。容器的样式设置为居中对齐。这可以用于在网页或应用程序中展示数据相关的信息或图像。</p>
</blockquote>
<p>第二个分析在makeup-ui/src/views/system/ana2/index.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;品牌销售量与销售额&lt;/h1&gt;</span><br><span class="line">    &lt;img style=&quot;width:50%&quot;  src=&quot;@/assets/images/ana1.jpg&quot; alt=&quot;数据展示&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      imageUrl: &#x27;@/assets/images/ana1.jpg&#x27;, </span><br><span class="line">      labelText: &#x27;数据展示&#x27;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个Vue组件的代码片段，用于显示一个包含标题、图像和文本的容器。</p>
<p>具体功能如下：</p>
<ol>
<li>
<p>模板部分：</p>
<ul>
<li>使用<code>&lt;div class=&quot;container&quot;&gt;</code>定义一个容器，设置了居中对齐的样式。</li>
<li>使用<code>&lt;h1&gt;</code>标签插入一个标题，内容为&quot;品牌销售量与销售额&quot;。</li>
<li>使用<code>&lt;img&gt;</code>标签插入图像，设置了图像的宽度为50%，并使用<code>src</code>属性指定图像的路径为<code>@/assets/images/ana1.jpg</code>，<code>alt</code>属性为&quot;数据展示&quot;。</li>
</ul>
</li>
<li>
<p>脚本部分：</p>
<ul>
<li>在<code>data</code>属性中定义了一个<code>imageUrl</code>变量，值为<code>@/assets/images/ana1.jpg</code>，用于存储图像的路径。</li>
<li>定义了一个<code>labelText</code>变量，值为&quot;数据展示&quot;，用于存储文本标签的内容。</li>
</ul>
</li>
<li>
<p>样式部分：</p>
<ul>
<li>使用<code>.container</code>选择器定义了一个样式规则，使容器内的内容居中对齐。</li>
</ul>
</li>
</ol>
<p>这段代码有的意思也是一样</p>
<p>第三个分析在makeup-ui/src/views/system/ana3/index.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;h1&gt;品类占比&lt;/h1&gt;</span><br><span class="line">    &lt;img style=&quot;width:60%&quot; src=&quot;@/assets/images/ana3.jpg&quot; alt=&quot;数据展示&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      imageUrl: &#x27;@/assets/images/ana1.jpg&#x27;, </span><br><span class="line">      labelText: &#x27;数据展示&#x27;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>还有第5个分析第六个都是相同的</p>
<ol start="6">
<li>
<p>router的index.js 介绍用vuerouter 将路径绑定到组件上</p>
<p>在makeup-ui/src/router/index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note: 路由配置项</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * hidden: true                     // 当设置 true 的时候该路由不会再侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1</span></span><br><span class="line"><span class="comment"> * alwaysShow: true                 // 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面</span></span><br><span class="line"><span class="comment"> *                                  // 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面</span></span><br><span class="line"><span class="comment"> *                                  // 若你想不管路由下面的 children 声明的个数都显示你的根路由</span></span><br><span class="line"><span class="comment"> *                                  // 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由</span></span><br><span class="line"><span class="comment"> * redirect: noRedirect             // 当设置 noRedirect 的时候该路由在面包屑导航中不可被点击</span></span><br><span class="line"><span class="comment"> * name:&#x27;router-name&#x27;               // 设定路由的名字，一定要填写不然使用&lt;keep-alive&gt;时会出现各种问题</span></span><br><span class="line"><span class="comment"> * query: &#x27;&#123;&quot;id&quot;: 1, &quot;name&quot;: &quot;ry&quot;&#125;&#x27; // 访问路由的默认传递参数</span></span><br><span class="line"><span class="comment"> * roles: [&#x27;admin&#x27;, &#x27;common&#x27;]       // 访问路由的角色权限</span></span><br><span class="line"><span class="comment"> * permissions: [&#x27;a:a:a&#x27;, &#x27;b:b:b&#x27;]  // 访问路由的菜单权限</span></span><br><span class="line"><span class="comment"> * meta : &#123;</span></span><br><span class="line"><span class="comment">    noCache: true                   // 如果设置为true，则不会被 &lt;keep-alive&gt; 缓存(默认 false)</span></span><br><span class="line"><span class="comment">    title: &#x27;title&#x27;                  // 设置该路由在侧边栏和面包屑中展示的名字</span></span><br><span class="line"><span class="comment">    icon: &#x27;svg-name&#x27;                // 设置该路由的图标，对应路径src/assets/icons/svg</span></span><br><span class="line"><span class="comment">    breadcrumb: false               // 如果设置为false，则不会在breadcrumb面包屑中显示</span></span><br><span class="line"><span class="comment">    activeMenu: &#x27;/system/user&#x27;      // 当路由设置了该属性，则会高亮相对应的侧边栏。</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 公共路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/redirect&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/redirect/:path(.*)&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/redirect&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/login&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/register&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/register&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/error/404&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/401&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/error/401&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/index&#x27;</span>),</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Index&#x27;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span>, <span class="attr">affix</span>: <span class="literal">true</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;noredirect&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;profile&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&#x27;@/views/system/user/profile/index&#x27;</span>),</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Profile&#x27;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;个人中心&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;user&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>​	这就是router配置文件可以将之前写的组件绑定到路径上</p>
<p>Vue Router是Vue.js官方提供的路由管理器，用于实现前端的路由功能。它可以帮助开发者构建单页面应用（SPA）并实现页面之间的导航和跳转。</p>
<p>Vue Router的主要作用包括：</p>
<ol>
<li>
<p>路由映射：Vue Router可以定义路由规则，将不同的URL路径映射到对应的组件，使得在不同的URL路径下展示不同的页面内容。</p>
</li>
<li>
<p>嵌套路由：Vue Router支持嵌套路由，可以实现页面的多层次嵌套和组织。</p>
</li>
<li>
<p>路由参数：通过路由参数，可以在URL中传递参数，并在组件中获取参数值，实现根据不同参数展示不同内容的功能。</p>
</li>
<li>
<p>路由导航：Vue Router提供了路由导航的功能，可以在组件中使用编程式导航（如<code>router.push()</code>）或者声明式导航（如<code>&lt;router-link&gt;</code>）进行页面的跳转和导航。</p>
</li>
<li>
<p>路由守卫：Vue Router提供了路由守卫的功能，可以在路由跳转前、跳转后或者路由更新时执行相应的逻辑，例如验证用户身份、权限控制、路由切换动画等。</p>
</li>
<li>
<p>历史记录管理：Vue Router可以管理浏览器的历史记录，通过使用浏览器的前进和后退按钮，可以在不刷新页面的情况下切换路由。</p>
</li>
</ol>
<p>所以总结前端就是这样向你展示图片的。</p>
<h3 id="大屏功能是可以独立的">大屏功能是可以独立的</h3>
<p><strong>还有一个大屏的功能</strong></p>
<p>首先我们先看目录结构<img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430155223216.png" alt="image-20240430155223216"></p>
<p>再看代码</p>
<p><a href="http://xn--manage-9f2j3940c.py">首先manage.py</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;makescreen.settings&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">from</span> django.core.management <span class="keyword">import</span> execute_from_command_line</span><br><span class="line">    <span class="keyword">except</span> ImportError <span class="keyword">as</span> exc:</span><br><span class="line">        <span class="keyword">raise</span> ImportError(</span><br><span class="line">            <span class="string">&quot;Couldn&#x27;t import Django. Are you sure it&#x27;s installed and &quot;</span></span><br><span class="line">            <span class="string">&quot;available on your PYTHONPATH environment variable? Did you &quot;</span></span><br><span class="line">            <span class="string">&quot;forget to activate a virtual environment?&quot;</span></span><br><span class="line">        ) <span class="keyword">from</span> exc</span><br><span class="line">    execute_from_command_line(sys.argv)</span><br></pre></td></tr></table></figure>
<p>这段代码是一个Python脚本，通常用于在Django项目中启动应用程序。</p>
<p>具体功能如下：</p>
<ol>
<li>
<p>首先，代码检查当前模块是否是主模块（即作为脚本直接执行，而不是被导入为模块）。这是通过<code>if __name__ == &quot;__main__&quot;:</code>这行代码实现的。</p>
</li>
<li>
<p>设置环境变量：代码通过<code>os.environ.setdefault()</code>将环境变量<code>DJANGO_SETTINGS_MODULE</code>设置为<code>makescreen.settings</code>。这指定了Django项目的设置模块，告诉Django使用哪个配置文件来配置项目。</p>
</li>
<li>
<p>引入<code>execute_from_command_line</code>函数：代码尝试导入<code>django.core.management</code>模块中的<code>execute_from_command_line</code>函数。这个函数是Django的命令行工具，用于执行各种Django管理命令。</p>
</li>
<li>
<p>执行Django命令行：最后，代码调用<code>execute_from_command_line(sys.argv)</code>，将命令行参数传递给<code>execute_from_command_line</code>函数。这样，可以在命令行中使用该脚本来执行Django的各种管理命令，例如启动开发服务器、执行数据库迁移等。</p>
</li>
</ol>
<p>总体来说，这段代码的作用是在Django项目中启动应用程序，并通过命令行来执行各种Django管理命令。</p>
<p>没有什么特别每一个diango项目都有。</p>
<p><a href="http://url.py">url.py</a> 处于makescreen/url.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;makescreen URL Configuration</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The `urlpatterns` list routes URLs to views. For more information please see:</span></span><br><span class="line"><span class="string">    https://docs.djangoproject.com/en/2.0/topics/http/urls/</span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">Function views</span></span><br><span class="line"><span class="string">    1. Add an import:  from my_app import views</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, views.home, name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Class-based views</span></span><br><span class="line"><span class="string">    1. Add an import:  from other_app.views import Home</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;&#x27;, Home.as_view(), name=&#x27;home&#x27;)</span></span><br><span class="line"><span class="string">Including another URLconf</span></span><br><span class="line"><span class="string">    1. Import the include() function: from django.urls import include, path</span></span><br><span class="line"><span class="string">    2. Add a URL to urlpatterns:  path(&#x27;blog/&#x27;, include(&#x27;blog.urls&#x27;))</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> django.conf.urls.static <span class="keyword">import</span> static</span><br><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> makescreen <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> settings.DEBUG:</span><br><span class="line">    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)</span><br></pre></td></tr></table></figure>
<p>提供的代码段是一个Django URL配置文件的片段。它包含了<code>urlpatterns</code>列表，用于将URL路由到Django项目中的视图函数。</p>
<p>在这个代码片段中，<code>urlpatterns</code>列表只包含了一个路径：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br></pre></td></tr></table></figure>
<p>这个路径将URL <code>admin/</code> 映射到Django的管理后台。当用户访问这个URL时，将显示Django管理界面。</p>
<p>另外，代码中有一个<code>if</code>语句，它检查项目设置模块（<code>makescreen.settings</code>）中的<code>DEBUG</code>设置是否为<code>True</code>。如果是，<code>urlpatterns</code>列表将会通过调用<code>static()</code>函数来扩展。这个函数用于在开发期间提供静态文件的访问。它会根据设置中的<code>STATIC_ROOT</code>目录，添加一个用于提供静态文件（如CSS、JavaScript和图片）的URL模式。</p>
<p><a href="http://wsgi.py">wsgi.py</a> 也是在makescreen文件夹中</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">WSGI config for makescreen project.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">It exposes the WSGI callable as a module-level variable named ``application``.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information on this file, see</span></span><br><span class="line"><span class="string">https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.core.wsgi <span class="keyword">import</span> get_wsgi_application</span><br><span class="line"></span><br><span class="line">os.environ.setdefault(<span class="string">&quot;DJANGO_SETTINGS_MODULE&quot;</span>, <span class="string">&quot;makescreen.settings&quot;</span>)</span><br><span class="line"></span><br><span class="line">application = get_wsgi_application()</span><br></pre></td></tr></table></figure>
<p>显然你已经可以看出这个makeupscreen的项目文件唯一的作用就是将</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430155905649.png" alt="image-20240430155905649"></p>
<p>这个文件夹可以被当成静态资源访问。但是我们也是直接可以从浏览器打开不需要django</p>
<p>如图<img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430160045742.png" alt="image-20240430160045742"></p>
<h3 id="开始了解怎么登录，先是前端的登录">开始了解怎么登录，先是前端的登录</h3>
<p>那么前端的作用是什么前端就是为了能够实现登录功能</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430160230825.png" alt="image-20240430160230825"></p>
<p>当你在登录的时候你会发现当你不登录你就会自动的跳回登录界面，这是因为有拦截器的存在。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430160439564.png" alt="image-20240430160439564"></p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430160449636.png" alt="image-20240430160449636"></p>
<p>结合这两张图</p>
<h4 id="整体代码">整体代码</h4>
<ol>
<li>
<p>第一张图的登录现在是在前端这一块的代码是在makeup-ui/src/views/login.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;login&quot;&gt;</span><br><span class="line">    &lt;el-form ref=&quot;loginForm&quot; :model=&quot;loginForm&quot; :rules=&quot;loginRules&quot; class=&quot;login-form&quot;&gt;</span><br><span class="line">      &lt;h3 class=&quot;title&quot;&gt;淘宝美妆销售数据分析及可视化&lt;/h3&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.username&quot;</span><br><span class="line">          type=&quot;text&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;账号&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;user&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;password&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.password&quot;</span><br><span class="line">          type=&quot;password&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;密码&quot;</span><br><span class="line">          @keyup.enter.native=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;password&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item prop=&quot;code&quot; v-if=&quot;captchaEnabled&quot;&gt;</span><br><span class="line">        &lt;el-input</span><br><span class="line">          v-model=&quot;loginForm.code&quot;</span><br><span class="line">          auto-complete=&quot;off&quot;</span><br><span class="line">          placeholder=&quot;验证码&quot;</span><br><span class="line">          style=&quot;width: 63%&quot;</span><br><span class="line">          @keyup.enter.native=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;validCode&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">        &lt;/el-input&gt;</span><br><span class="line">        &lt;div class=&quot;login-code&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;codeUrl&quot; @click=&quot;getCode&quot; class=&quot;login-code-img&quot;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-checkbox v-model=&quot;loginForm.rememberMe&quot; style=&quot;margin:0px 0px 25px 0px;&quot;&gt;记住密码&lt;/el-checkbox&gt;</span><br><span class="line">      &lt;el-form-item style=&quot;width:100%;&quot;&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          :loading=&quot;loading&quot;</span><br><span class="line">          size=&quot;medium&quot;</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          style=&quot;width:100%;&quot;</span><br><span class="line">          @click.native.prevent=&quot;handleLogin&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;span v-if=&quot;!loading&quot;&gt;登 录&lt;/span&gt;</span><br><span class="line">          &lt;span v-else&gt;登 录 中...&lt;/span&gt;</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">        &lt;div style=&quot;float: right;&quot; v-if=&quot;register&quot;&gt;</span><br><span class="line">          &lt;router-link class=&quot;link-type&quot; :to=&quot;&#x27;/register&#x27;&quot;&gt;立即注册&lt;/router-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;!--  底部  --&gt;</span><br><span class="line">    &lt;div class=&quot;el-login-footer&quot;&gt;</span><br><span class="line">      &lt;span&gt;Copyright © 2018-2023 ruoyi.vip All Rights Reserved.&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getCodeImg &#125; from &quot;@/api/login&quot;;</span><br><span class="line">import Cookies from &quot;js-cookie&quot;;</span><br><span class="line">import &#123; encrypt, decrypt &#125; from &#x27;@/utils/jsencrypt&#x27;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Login&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      codeUrl: &quot;&quot;,</span><br><span class="line">      loginForm: &#123;</span><br><span class="line">        username: &quot;admin&quot;,</span><br><span class="line">        password: &quot;admin123&quot;,</span><br><span class="line">        rememberMe: false,</span><br><span class="line">        code: &quot;&quot;,</span><br><span class="line">        uuid: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      loginRules: &#123;</span><br><span class="line">        username: [</span><br><span class="line">          &#123; required: true, trigger: &quot;blur&quot;, message: &quot;请输入您的账号&quot; &#125;</span><br><span class="line">        ],</span><br><span class="line">        password: [</span><br><span class="line">          &#123; required: true, trigger: &quot;blur&quot;, message: &quot;请输入您的密码&quot; &#125;</span><br><span class="line">        ],</span><br><span class="line">        code: [&#123; required: true, trigger: &quot;change&quot;, message: &quot;请输入验证码&quot; &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      loading: false,</span><br><span class="line">      // 验证码开关</span><br><span class="line">      captchaEnabled: true,</span><br><span class="line">      // 注册开关</span><br><span class="line">      register: false,</span><br><span class="line">      redirect: undefined</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    $route: &#123;</span><br><span class="line">      handler: function(route) &#123;</span><br><span class="line">        this.redirect = route.query &amp;&amp; route.query.redirect;</span><br><span class="line">      &#125;,</span><br><span class="line">      immediate: true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.getCode();</span><br><span class="line">    this.getCookie();</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getCode() &#123;</span><br><span class="line">      getCodeImg().then(res =&gt; &#123;</span><br><span class="line">        this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;</span><br><span class="line">        if (this.captchaEnabled) &#123;</span><br><span class="line">          this.codeUrl = &quot;data:image/gif;base64,&quot; + res.img;</span><br><span class="line">          this.loginForm.uuid = res.uuid;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    getCookie() &#123;</span><br><span class="line">      const username = Cookies.get(&quot;username&quot;);</span><br><span class="line">      const password = Cookies.get(&quot;password&quot;);</span><br><span class="line">      const rememberMe = Cookies.get(&#x27;rememberMe&#x27;)</span><br><span class="line">      this.loginForm = &#123;</span><br><span class="line">        username: username === undefined ? this.loginForm.username : username,</span><br><span class="line">        password: password === undefined ? this.loginForm.password : decrypt(password),</span><br><span class="line">        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    handleLogin() &#123;</span><br><span class="line">      this.$refs.loginForm.validate(valid =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          this.loading = true;</span><br><span class="line">          if (this.loginForm.rememberMe) &#123;</span><br><span class="line">            Cookies.set(&quot;username&quot;, this.loginForm.username, &#123; expires: 30 &#125;);</span><br><span class="line">            Cookies.set(&quot;password&quot;, encrypt(this.loginForm.password), &#123; expires: 30 &#125;);</span><br><span class="line">            Cookies.set(&#x27;rememberMe&#x27;, this.loginForm.rememberMe, &#123; expires: 30 &#125;);</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            Cookies.remove(&quot;username&quot;);</span><br><span class="line">            Cookies.remove(&quot;password&quot;);</span><br><span class="line">            Cookies.remove(&#x27;rememberMe&#x27;);</span><br><span class="line">          &#125;</span><br><span class="line">          this.$store.dispatch(&quot;Login&quot;, this.loginForm).then(() =&gt; &#123;</span><br><span class="line">            this.$router.push(&#123; path: this.redirect || &quot;/&quot; &#125;).catch(()=&gt;&#123;&#125;);</span><br><span class="line">          &#125;).catch(() =&gt; &#123;</span><br><span class="line">            this.loading = false;</span><br><span class="line">            if (this.captchaEnabled) &#123;</span><br><span class="line">              this.getCode();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这段代码是一个Vue.js组件，表示一个登录页面。下面是对代码的解释：</p>
<ol>
<li>
<p>模板部分（template）：这部分定义了登录页面的HTML结构，使用了Element UI库的组件来构建表单和按钮等元素。登录表单包括账号、密码和验证码等输入框，以及记住密码的复选框和登录按钮。底部显示了版权信息。</p>
</li>
<li>
<p>脚本部分（script）：这部分是Vue组件的JavaScript代码。其中，<code>getCodeImg</code>和<code>encrypt</code>、<code>decrypt</code>是从其他模块中导入的函数。这个组件的名称是<code>Login</code>，数据（data）部分定义了登录表单的初始值和校验规则，以及其他需要的变量。<code>created</code>方法在组件创建时被调用，用于获取验证码并获取保存的cookie。<code>getCode</code>方法用于获取验证码的图片，并根据接口返回的数据判断是否显示验证码输入框。<code>getCookie</code>方法用于获取保存的cookie值，并将其赋值给登录表单。<code>handleLogin</code>方法用于处理登录操作，首先校验表单数据的有效性，然后根据是否记住密码设置cookie，最后调用<code>Login</code> action进行登录，成功后跳转到指定页面。</p>
</li>
</ol>
<p>这段代码使用了Element UI组件库来构建登录页面，并使用axios库来发送HTTP请求。它还使用了一些辅助函数和工具，如获取验证码图片、加密和解密等。</p>
<h4 id="具体代码">具体代码</h4>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">loginForm</span>.<span class="title function_">validate</span>(<span class="function"><span class="params">valid</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">rememberMe</span>) &#123;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;username&quot;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">username</span>, &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;password&quot;</span>, <span class="title function_">encrypt</span>(<span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">password</span>), &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;rememberMe&#x27;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">rememberMe</span>, &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;rememberMe&#x27;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$store</span>.<span class="title function_">dispatch</span>(<span class="string">&quot;Login&quot;</span>, <span class="variable language_">this</span>.<span class="property">loginForm</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$router</span>.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: <span class="variable language_">this</span>.<span class="property">redirect</span> || <span class="string">&quot;/&quot;</span> &#125;).<span class="title function_">catch</span>(<span class="function">()=&gt;</span>&#123;&#125;);</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">captchaEnabled</span>) &#123;</span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">getCode</span>();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>
<p>这段代码是<code>handleLogin</code>方法，用于处理用户登录操作。下面是对代码的解释：</p>
<ol>
<li>
<p><code>this.$refs.loginForm.validate</code>：使用<code>this.$refs</code>来访问组件中的具名引用（ref），<code>loginForm</code>是表单组件的引用名称。<code>validate</code>是Element UI表单组件提供的方法，用于校验表单字段的有效性。它接受一个回调函数作为参数，回调函数会在校验完成后被调用，并传入一个布尔值<code>valid</code>表示表单是否有效。</p>
</li>
<li>
<p><code>if (valid)</code>：如果表单校验有效，则执行以下代码块。</p>
</li>
<li>
<p><code>this.loading = true</code>：将<code>loading</code>设置为<code>true</code>，用于显示登录按钮的加载状态。</p>
</li>
<li>
<p><code>if (this.loginForm.rememberMe)</code>：如果用户选择了&quot;记住密码&quot;选项，则执行以下代码块。</p>
<ul>
<li><code>Cookies.set(&quot;username&quot;, this.loginForm.username, &#123; expires: 30 &#125;)</code>：使用<code>Cookies</code>工具函数设置一个名为&quot;username&quot;的cookie，保存用户输入的用户名，有效期为30天。</li>
<li><code>Cookies.set(&quot;password&quot;, encrypt(this.loginForm.password), &#123; expires: 30 &#125;)</code>：使用<code>encrypt</code>函数对用户输入的密码进行加密，并将加密后的密码保存在名为&quot;password&quot;的cookie中，有效期为30天。</li>
<li><code>Cookies.set('rememberMe', this.loginForm.rememberMe, &#123; expires: 30 &#125;)</code>：保存&quot;rememberMe&quot;选项的值到名为&quot;rememberMe&quot;的cookie中，有效期为30天。</li>
</ul>
</li>
<li>
<p><code>else</code>：如果用户没有选择&quot;记住密码&quot;选项，则执行以下代码块。</p>
<ul>
<li><code>Cookies.remove(&quot;username&quot;)</code>：移除名为&quot;username&quot;的cookie。</li>
<li><code>Cookies.remove(&quot;password&quot;)</code>：移除名为&quot;password&quot;的cookie。</li>
<li><code>Cookies.remove('rememberMe')</code>：移除名为&quot;rememberMe&quot;的cookie。</li>
</ul>
</li>
<li>
<p><code>this.$store.dispatch(&quot;Login&quot;, this.loginForm)</code>：通过<code>this.$store.dispatch</code>方法触发名为&quot;Login&quot;的action，并传递<code>this.loginForm</code>作为参数。这个action会处理用户登录逻辑，发送登录请求等。</p>
</li>
<li>
<p><code>.then(() =&gt; &#123; this.$router.push(&#123; path: this.redirect || &quot;/&quot; &#125;).catch(()=&gt;&#123;&#125;); &#125;)</code>：如果登录成功，通过<code>this.$router.push</code>方法将用户重定向到指定的路径（<code>this.redirect</code>）或默认路径&quot;/&quot;。<code>.catch(()=&gt;&#123;&#125;)</code>用于捕获可能的重定向错误，避免控制台抛出异常。</p>
</li>
<li>
<p><code>.catch(() =&gt; &#123; this.loading = false; if (this.captchaEnabled) &#123; this.getCode(); &#125; &#125;)</code>：如果登录失败，执行以下代码块。</p>
<ul>
<li><code>this.loading = false</code>：将<code>loading</code>设置为<code>false</code>，用于取消登录按钮的加载状态。</li>
<li><code>if (this.captchaEnabled)</code>：如果验证码开关为打开状态，则执行以下代码块。
<ul>
<li><code>this.getCode()</code>：重新获取验证码图片。</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>这段代码的功能是校验表单的有效性，根据用户选择的&quot;记住密码&quot;选项设置相应的cookie，然后触发登录动作，并根据登录结果进行相应的处理，包括重定向和验证码的刷新。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">getCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">getCodeImg</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">captchaEnabled</span> = res.<span class="property">captchaEnabled</span> === <span class="literal">undefined</span> ? <span class="literal">true</span> : res.<span class="property">captchaEnabled</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">captchaEnabled</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">codeUrl</span> = <span class="string">&quot;data:image/gif;base64,&quot;</span> + res.<span class="property">img</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">uuid</span> = res.<span class="property">uuid</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">getCookie</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> username = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> password = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> rememberMe = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;rememberMe&#x27;</span>)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">loginForm</span> = &#123;</span><br><span class="line">    <span class="attr">username</span>: username === <span class="literal">undefined</span> ? <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">username</span> : username,</span><br><span class="line">    <span class="attr">password</span>: password === <span class="literal">undefined</span> ? <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">password</span> : <span class="title function_">decrypt</span>(password),</span><br><span class="line">    <span class="attr">rememberMe</span>: rememberMe === <span class="literal">undefined</span> ? <span class="literal">false</span> : <span class="title class_">Boolean</span>(rememberMe)</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>这段代码包含了两个方法：<code>getCode()</code>和<code>getCookie()</code>，下面是对它们的解释：</p>
<ol>
<li>
<p><code>getCode()</code>方法用于获取验证码图片，并更新相关的状态和数据。</p>
<ul>
<li><code>getCodeImg()</code>：调用<code>getCodeImg()</code>函数来获取验证码图片，返回一个Promise对象。</li>
<li><code>.then(res =&gt; &#123; ... &#125;)</code>：当获取验证码成功后，执行回调函数，回调函数的参数<code>res</code>包含了获取到的数据。</li>
<li><code>this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;</code>：根据返回的数据中的<code>captchaEnabled</code>字段判断是否启用验证码。如果<code>captchaEnabled</code>字段未定义，将<code>this.captchaEnabled</code>设置为<code>true</code>，否则根据返回值来设置。</li>
<li><code>if (this.captchaEnabled) &#123; ... &#125;</code>：如果验证码启用，执行以下代码块。
<ul>
<li><code>this.codeUrl = &quot;data:image/gif;base64,&quot; + res.img;</code>：将获取到的验证码图片数据拼接成Base64格式的URL，并赋值给<code>this.codeUrl</code>，用于在页面上显示验证码图片。</li>
<li><code>this.loginForm.uuid = res.uuid;</code>：将返回的验证码UUID赋值给登录表单中的<code>uuid</code>字段。</li>
</ul>
</li>
</ul>
</li>
<li>
<p><code>getCookie()</code>方法用于获取保存的cookie，并将其值赋给登录表单的相应字段。</p>
<ul>
<li><code>const username = Cookies.get(&quot;username&quot;);</code>：使用<code>Cookies.get()</code>函数获取名为&quot;username&quot;的cookie的值，并将其赋给变量<code>username</code>。</li>
<li><code>const password = Cookies.get(&quot;password&quot;);</code>：使用<code>Cookies.get()</code>函数获取名为&quot;password&quot;的cookie的值，并将其赋给变量<code>password</code>。</li>
<li><code>const rememberMe = Cookies.get('rememberMe')</code>：使用<code>Cookies.get()</code>函数获取名为&quot;rememberMe&quot;的cookie的值，并将其赋给变量<code>rememberMe</code>。</li>
<li><code>this.loginForm = &#123; ... &#125;</code>：将获取到的cookie值更新到登录表单的相应字段。
<ul>
<li><code>username === undefined ? this.loginForm.username : username</code>：如果<code>username</code>为<code>undefined</code>，则使用登录表单中的<code>username</code>字段的初始值，否则使用<code>username</code>的值。</li>
<li><code>password === undefined ? this.loginForm.password : decrypt(password)</code>：如果<code>password</code>为<code>undefined</code>，则使用登录表单中的<code>password</code>字段的初始值，否则使用<code>password</code>的值。注意，这里使用了<code>decrypt()</code>函数对保存的加密密码进行解密。</li>
<li><code>rememberMe === undefined ? false : Boolean(rememberMe)</code>：如果<code>rememberMe</code>为<code>undefined</code>，则设置为<code>false</code>，否则将<code>rememberMe</code>转换为对应的布尔值。</li>
</ul>
</li>
</ul>
</li>
</ol>
<p>这两个方法分别用于获取验证码图片和获取保存的cookie，并更新相关的状态和数据，以便在登录页面中显示验证码图片和填充保存的用户名和密码（如果存在）。</p>
<p>到现在前端登录的功能的过程就是会将你的请求发送给后端。</p>
<h3 id="请求到后端怎么处理登录">请求到后端怎么处理登录</h3>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430160449636.png" alt="image-20240430160449636"></p>
<p>后端首先第一步要经历拦截器</p>
<h4 id="先到拦截器">先到拦截器</h4>
<p>什么是springboot的拦截器</p>
<p>在Spring Boot中，拦截器（Interceptor）是一种用于拦截请求并在处理请求之前或之后执行一些操作的机制。拦截器是Spring框架提供的一种增强控制器功能的方式，它可以用于实现诸如身份验证、日志记录、性能监控、请求处理前后的预处理和后处理等功能。</p>
<p>拦截器是基于Spring框架的AOP（面向切面编程）思想实现的。它通过定义拦截器类并将其配置到Spring应用程序中，使得拦截器可以在请求被处理前或处理后介入请求的处理流程。</p>
<p>在Spring Boot中，创建一个拦截器需要实现<code>HandlerInterceptor</code>接口，并实现其中的方法。主要的方法包括：</p>
<ol>
<li>
<p><code>preHandle</code>：在请求处理之前被调用。可以进行一些预处理操作，如身份验证、权限检查等。如果该方法返回<code>false</code>，则请求将被拦截，后续的处理流程将被终止。</p>
</li>
<li>
<p><code>postHandle</code>：在请求处理之后、视图渲染之前被调用。可以对请求处理结果进行一些处理或修改。</p>
</li>
<li>
<p><code>afterCompletion</code>：在整个请求处理完成后被调用。可以进行一些清理操作或资源释放等。</p>
</li>
</ol>
<p>拦截器可以通过配置来应用于特定的请求路径或URL模式。在Spring Boot中，可以通过实现<code>WebMvcConfigurer</code>接口中的<code>addInterceptors</code>方法，或使用<code>@Configuration</code>注解和<code>WebMvcConfigurerAdapter</code>类来进行拦截器的配置。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430185117173.png" alt="image-20240430185117173"></p>
<p>所以你后端项目的拦截器在src/main/java/makeup/framework/config/ResourcesConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> makeup.framework.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.CacheControl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.CorsConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.CorsFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"><span class="keyword">import</span> makeup.common.config.RuoYiConfig;</span><br><span class="line"><span class="keyword">import</span> makeup.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.interceptor.RepeatSubmitInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通用配置</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResourcesConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RepeatSubmitInterceptor repeatSubmitInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/** 本地文件上传路径 */</span></span><br><span class="line">        registry.addResourceHandler(Constants.RESOURCE_PREFIX + <span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">&quot;file:&quot;</span> + RuoYiConfig.getProfile() + <span class="string">&quot;/&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** swagger配置 */</span></span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/swagger-ui/**&quot;</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">&quot;classpath:/META-INF/resources/webjars/springfox-swagger-ui/&quot;</span>)</span><br><span class="line">                .setCacheControl(CacheControl.maxAge(<span class="number">5</span>, TimeUnit.HOURS).cachePublic());;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义拦截规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span></span><br><span class="line">    &#123;</span><br><span class="line">        registry.addInterceptor(repeatSubmitInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跨域配置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">        config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 设置访问源地址</span></span><br><span class="line">        config.addAllowedOriginPattern(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求头</span></span><br><span class="line">        config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置访问源请求方法</span></span><br><span class="line">        config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">// 有效期 1800秒</span></span><br><span class="line">        config.setMaxAge(<span class="number">1800L</span>);</span><br><span class="line">        <span class="comment">// 添加映射路径，拦截一切请求</span></span><br><span class="line">        <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">        source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line">        <span class="comment">// 返回新的CorsFilter</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>添加的拦截器的具体代码如下src/main/java/makeup/framework/interceptor/RepeatSubmitInterceptor.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> makeup.framework.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.method.HandlerMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> makeup.common.annotation.RepeatSubmit;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.ServletUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防止重复提交拦截器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">RepeatSubmitInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (handler <span class="keyword">instanceof</span> HandlerMethod)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">HandlerMethod</span> <span class="variable">handlerMethod</span> <span class="operator">=</span> (HandlerMethod) handler;</span><br><span class="line">            <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> handlerMethod.getMethod();</span><br><span class="line">            <span class="type">RepeatSubmit</span> <span class="variable">annotation</span> <span class="operator">=</span> method.getAnnotation(RepeatSubmit.class);</span><br><span class="line">            <span class="keyword">if</span> (annotation != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.isRepeatSubmit(request, annotation))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">AjaxResult</span> <span class="variable">ajaxResult</span> <span class="operator">=</span> AjaxResult.error(annotation.message());</span><br><span class="line">                    ServletUtils.renderString(response, JSON.toJSONString(ajaxResult));</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证是否重复提交由子类实现具体的防重复提交的规则</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request 请求信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> annotation 防重复注解参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="type">boolean</span> <span class="title function_">isRepeatSubmit</span><span class="params">(HttpServletRequest request, RepeatSubmit annotation)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个防止重复提交的拦截器实现，它是一个抽象类 <code>RepeatSubmitInterceptor</code>，实现了 Spring Framework 的 <code>HandlerInterceptor</code> 接口。</p>
<p>主要功能如下：</p>
<ol>
<li>在 <code>preHandle</code> 方法中，拦截器首先判断处理请求的方法是否带有 <code>@RepeatSubmit</code> 注解，如果有该注解，则表示需要进行重复提交的验证。</li>
<li>如果请求方法带有 <code>@RepeatSubmit</code> 注解，则调用抽象方法 <code>isRepeatSubmit</code>，由子类实现具体的防重复提交的规则。</li>
<li><code>isRepeatSubmit</code> 方法接收请求信息和 <code>@RepeatSubmit</code> 注解作为参数，子类需要根据具体需求来判断当前请求是否属于重复提交。</li>
<li>如果 <code>isRepeatSubmit</code> 方法返回 <code>true</code>，表示请求是重复提交，拦截器会返回一个错误的响应给客户端，响应内容为一个包含错误信息的 JSON 对象。</li>
<li>如果 <code>isRepeatSubmit</code> 方法返回 <code>false</code>，表示请求不是重复提交，拦截器允许请求继续处理。</li>
</ol>
<p>需要注意的是，这是一个抽象类，<code>isRepeatSubmit</code> 方法是抽象方法，子类需要继承该类并实现具体的重复提交验证规则。</p>
<p>此拦截器可用于在处理请求之前进行重复提交的验证，以避免重复提交表单或重复执行某些操作。它提供了一种通用的机制，可以在不同的请求处理方法上添加 <code>@RepeatSubmit</code> 注解，并通过子类自定义的验证逻辑来实现具体的防重复提交策略。</p>
<p><img src="/2024/04/30/%E7%BE%8E%E5%A6%86%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F%E6%95%B4%E4%BD%93%E6%B5%81%E7%A8%8B/image-20240430162115493.png" alt="image-20240430162115493"></p>
<p><strong>登录请求的模块</strong> 这是接下来的步骤</p>
<h4 id="再到controler-控制器">再到controler 控制器</h4>
<p>后端的登录请求的功能实现在src/main/java/makeup/web/controller/system/SysLoginController.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> makeup.web.controller.system;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> makeup.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.entity.SysMenu;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.entity.SysUser;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.model.LoginBody;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.web.service.SysLoginService;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.web.service.SysPermissionService;</span><br><span class="line"><span class="keyword">import</span> makeup.system.service.ISysMenuService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录验证</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysLoginController</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysLoginService loginService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysMenuService menuService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysPermissionService permissionService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录方法</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> loginBody 登录信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResult <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> LoginBody loginBody)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line">        <span class="comment">// 生成令牌</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> loginService.login(loginBody.getUsername(), loginBody.getPassword(), loginBody.getCode(),</span><br><span class="line">                loginBody.getUuid());</span><br><span class="line">        ajax.put(Constants.TOKEN, token);</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取用户信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResult <span class="title function_">getInfo</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">user</span> <span class="operator">=</span> SecurityUtils.getLoginUser().getUser();</span><br><span class="line">        <span class="comment">// 角色集合</span></span><br><span class="line">        Set&lt;String&gt; roles = permissionService.getRolePermission(user);</span><br><span class="line">        <span class="comment">// 权限集合</span></span><br><span class="line">        Set&lt;String&gt; permissions = permissionService.getMenuPermission(user);</span><br><span class="line">        <span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line">        ajax.put(<span class="string">&quot;user&quot;</span>, user);</span><br><span class="line">        ajax.put(<span class="string">&quot;roles&quot;</span>, roles);</span><br><span class="line">        ajax.put(<span class="string">&quot;permissions&quot;</span>, permissions);</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取路由信息</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 路由信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;getRouters&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResult <span class="title function_">getRouters</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> SecurityUtils.getUserId();</span><br><span class="line">        List&lt;SysMenu&gt; menus = menuService.selectMenuTreeByUserId(userId);</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.success(menuService.buildMenus(menus));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个 <code>SysLoginController</code> 类，使用了 <code>@RestController</code> 注解，表示它是一个控制器类，并且该类中的方法返回的是 JSON 数据。</p>
<p>该类中包含以下方法：</p>
<ol>
<li>
<p><code>login</code> 方法：使用 <code>@PostMapping</code> 注解，映射了 “/login” 路径的 POST 请求。该方法接收一个 <code>LoginBody</code> 对象作为请求体，并返回一个 <code>AjaxResult</code> 对象作为响应结果。该方法用于处理用户登录请求，并返回登录结果和生成的令牌（token）。</p>
</li>
<li>
<p><code>getInfo</code> 方法：使用 <code>@GetMapping</code> 注解，映射了 “/getInfo” 路径的 GET 请求。该方法不接收任何参数，返回一个 <code>AjaxResult</code> 对象作为响应结果。该方法用于获取当前登录用户的信息，包括用户信息、角色集合和权限集合。</p>
</li>
<li>
<p><code>getRouters</code> 方法：使用 <code>@GetMapping</code> 注解，映射了 “/getRouters” 路径的 GET 请求。该方法不接收任何参数，返回一个 <code>AjaxResult</code> 对象作为响应结果。该方法用于获取当前登录用户的路由信息，即菜单信息，返回的菜单数据经过处理后构建成路由的格式。</p>
</li>
</ol>
<p>在该类中，使用了 <code>@Autowired</code> 注解对 <code>SysLoginService</code>、<code>ISysMenuService</code> 和 <code>SysPermissionService</code> 进行自动注入，这些服务类可以在方法中被调用。</p>
<p>该类的目的是处理用户登录、获取用户信息和获取路由信息的请求，并返回相应的结果。这些方法通过调用相应的服务类来实现业务逻辑，并将结果封装成 <code>AjaxResult</code> 对象返回给客户端。</p>
<h4 id="再到业务层Service">再到业务层Service</h4>
<p><strong>注意springboot 的业务逻辑一般是写在service中的</strong></p>
<p>所以你需要进入到服务层查看具体的代码</p>
<p>在src/main/java/makeup/framework/web/service/SysLoginService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> makeup.framework.web.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.AuthenticationManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.BadCredentialsException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> makeup.common.constant.CacheConstants;</span><br><span class="line"><span class="keyword">import</span> makeup.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> makeup.common.constant.UserConstants;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.entity.SysUser;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> makeup.common.core.redis.RedisCache;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.user.BlackListException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.user.CaptchaException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.user.CaptchaExpireException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.user.UserNotExistsException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.exception.user.UserPasswordNotMatchException;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.DateUtils;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.MessageUtils;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> makeup.common.utils.ip.IpUtils;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.manager.AsyncManager;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.manager.factory.AsyncFactory;</span><br><span class="line"><span class="keyword">import</span> makeup.framework.security.context.AuthenticationContextHolder;</span><br><span class="line"><span class="keyword">import</span> makeup.system.service.ISysConfigService;</span><br><span class="line"><span class="keyword">import</span> makeup.system.service.ISysUserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录校验方法</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SysLoginService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCache redisCache;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysConfigService configService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录验证</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 密码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid 唯一标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(String username, String password, String code, String uuid)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 验证码校验</span></span><br><span class="line">        validateCaptcha(username, code, uuid);</span><br><span class="line">        <span class="comment">// 登录前置校验</span></span><br><span class="line">        loginPreCheck(username, password);</span><br><span class="line">        <span class="comment">// 用户验证</span></span><br><span class="line">        <span class="type">Authentication</span> <span class="variable">authentication</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username, password);</span><br><span class="line">            AuthenticationContextHolder.setContext(authenticationToken);</span><br><span class="line">            <span class="comment">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class="line">            authentication = authenticationManager.authenticate(authenticationToken);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BadCredentialsException)</span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.password.not.match&quot;</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserPasswordNotMatchException</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, e.getMessage()));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">            AuthenticationContextHolder.clearContext();</span><br><span class="line">        &#125;</span><br><span class="line">        AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_SUCCESS, MessageUtils.message(<span class="string">&quot;user.login.success&quot;</span>)));</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class="line">        recordLoginInfo(loginUser.getUserId());</span><br><span class="line">        <span class="comment">// 生成token</span></span><br><span class="line">        <span class="keyword">return</span> tokenService.createToken(loginUser);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 校验验证码</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid 唯一标识</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">validateCaptcha</span><span class="params">(String username, String code, String uuid)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">captchaEnabled</span> <span class="operator">=</span> configService.selectCaptchaEnabled();</span><br><span class="line">        <span class="keyword">if</span> (captchaEnabled)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">verifyKey</span> <span class="operator">=</span> CacheConstants.CAPTCHA_CODE_KEY + StringUtils.nvl(uuid, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">captcha</span> <span class="operator">=</span> redisCache.getCacheObject(verifyKey);</span><br><span class="line">            redisCache.deleteObject(verifyKey);</span><br><span class="line">            <span class="keyword">if</span> (captcha == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.jcaptcha.expire&quot;</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CaptchaExpireException</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!code.equalsIgnoreCase(captcha))</span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.jcaptcha.error&quot;</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">CaptchaException</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录前置校验</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 用户名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password 用户密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">loginPreCheck</span><span class="params">(String username, String password)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 用户名或密码为空 错误</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(username) || StringUtils.isEmpty(password))</span><br><span class="line">        &#123;</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;not.null&quot;</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserNotExistsException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 密码如果不在指定范围内 错误</span></span><br><span class="line">        <span class="keyword">if</span> (password.length() &lt; UserConstants.PASSWORD_MIN_LENGTH</span><br><span class="line">                || password.length() &gt; UserConstants.PASSWORD_MAX_LENGTH)</span><br><span class="line">        &#123;</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.password.not.match&quot;</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserPasswordNotMatchException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 用户名不在指定范围内 错误</span></span><br><span class="line">        <span class="keyword">if</span> (username.length() &lt; UserConstants.USERNAME_MIN_LENGTH</span><br><span class="line">                || username.length() &gt; UserConstants.USERNAME_MAX_LENGTH)</span><br><span class="line">        &#123;</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.password.not.match&quot;</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserPasswordNotMatchException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// IP黑名单校验</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">blackStr</span> <span class="operator">=</span> configService.selectConfigByKey(<span class="string">&quot;sys.login.blackIPList&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (IpUtils.isMatchedIp(blackStr, IpUtils.getIpAddr()))</span><br><span class="line">        &#123;</span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;login.blocked&quot;</span>)));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BlackListException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录登录信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">recordLoginInfo</span><span class="params">(Long userId)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">sysUser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SysUser</span>();</span><br><span class="line">        sysUser.setUserId(userId);</span><br><span class="line">        sysUser.setLoginIp(IpUtils.getIpAddr());</span><br><span class="line">        sysUser.setLoginDate(DateUtils.getNowDate());</span><br><span class="line">        userService.updateUserProfile(sysUser);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个 <code>SysLoginService</code> 类，用于处理用户登录相关的业务逻辑。</p>
<p>这段代码是一个用于用户登录验证的服务类 <code>SysLoginService</code>。它包含了一些方法用于处理用户登录的不同方面。</p>
<ol>
<li>
<p><code>login</code> 方法：该方法用于验证用户登录。它接收用户名、密码、验证码和唯一标识作为参数，并返回一个生成的令牌（token）。在方法中，首先进行验证码校验，如果验证码功能启用，会从缓存中获取验证码并与用户输入的验证码进行比对。如果验证码过期或不匹配，将抛出相应的异常。接下来，该方法会进行登录前置校验，包括检查用户名和密码是否为空，以及长度是否符合要求。如果校验未通过，将抛出相应的异常。然后，使用 <code>AuthenticationManager</code> 进行用户验证。如果验证失败，会记录登录失败的日志并抛出用户密码不匹配的异常。如果验证成功，将记录登录成功的日志信息，并调用 <code>recordLoginInfo</code> 方法记录用户的登录信息。最后，通过调用 <code>tokenService</code> 的 <code>createToken</code> 方法生成令牌，并将其返回给调用方。</p>
</li>
<li>
<p><code>validateCaptcha</code> 方法：该方法用于校验验证码。它接收用户名、验证码和唯一标识作为参数。首先从缓存中获取与唯一标识相关联的验证码，并与用户输入的验证码进行比对。如果验证码过期或不匹配，将抛出相应的异常。如果验证码校验功能未启用，则不会进行验证码校验。</p>
</li>
<li>
<p><code>loginPreCheck</code> 方法：该方法用于进行登录前置校验。它接收用户名和密码作为参数。首先检查用户名和密码是否为空，如果为空，将抛出用户不存在的异常。然后检查密码和用户名的长度是否符合要求，如果不符合要求，将抛出用户密码不匹配的异常。接下来，该方法会检查用户的 IP 是否在黑名单中，如果是，则抛出黑名单异常。</p>
</li>
<li>
<p><code>recordLoginInfo</code> 方法：该方法用于记录用户的登录信息。它接收用户ID作为参数，并根据用户ID获取用户信息。然后，将用户的登录IP和登录时间记录在用户信息中，并通过调用 <code>userService</code> 的 <code>updateUserProfile</code> 方法将更新后的用户信息保存到数据库中。</p>
</li>
</ol>
<p>该类使用了 <code>@Autowired</code> 和 <code>@Resource</code> 注解对依赖的服务和组件进行自动注入，包括 <code>TokenService</code>、<code>AuthenticationManager</code>、<code>RedisCache</code>、<code>ISysUserService</code> 和 <code>ISysConfigService</code> 等。这些服务和组件提供了用户登录验证所需的功能，例如生成令牌、用户认证、缓存操作等。</p>
<p>总体而言，<code>SysLoginService</code> 类实现了用户登录验证的逻辑，包括验证码校验、登录前置校验、用户认证、记录登录信息和生成令牌等功能。它与其他服务类和组件协同工作，提供了完整的用户登录验证流程。</p>
<h4 id="最后到数据库redis-mysql">最后到数据库redis mysql</h4>
<p>比如你看这里的就使用lrediscache</p>
<p>在src/main/java/makeup/common/core/redis/RedisCache.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> makeup.common.core.redis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.BoundSetOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.HashOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.ValueOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * spring redis 工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="meta">@SuppressWarnings(value = &#123; &quot;unchecked&quot;, &quot;rawtypes&quot; &#125;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisCache</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存的键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 缓存的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setCacheObject</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> T value)</span></span><br><span class="line">    &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(key, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存的键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 缓存的值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout 时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeUnit 时间颗粒度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setCacheObject</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> T value, <span class="keyword">final</span> Integer timeout, <span class="keyword">final</span> TimeUnit timeUnit)</span></span><br><span class="line">    &#123;</span><br><span class="line">        redisTemplate.opsForValue().set(key, value, timeout, timeUnit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置有效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout 超时时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true=设置成功；false=设置失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">expire</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> <span class="type">long</span> timeout)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> expire(key, timeout, TimeUnit.SECONDS);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置有效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout 超时时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> unit 时间单位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true=设置成功；false=设置失败</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">expire</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> <span class="type">long</span> timeout, <span class="keyword">final</span> TimeUnit unit)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.expire(key, timeout, unit);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取有效时间</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 有效时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getExpire</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.getExpire(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断 key是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true 存在 false不存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">hasKey</span><span class="params">(String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得缓存的基本对象。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 缓存键值对应的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getCacheObject</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        ValueOperations&lt;String, T&gt; operation = redisTemplate.opsForValue();</span><br><span class="line">        <span class="keyword">return</span> operation.get(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除单个对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteObject</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.delete(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除集合对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> collection 多个对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteObject</span><span class="params">(<span class="keyword">final</span> Collection collection)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.delete(collection) &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存List数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存的键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataList 待缓存的List数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 缓存的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="type">long</span> <span class="title function_">setCacheList</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> List&lt;T&gt; dataList)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> redisTemplate.opsForList().rightPushAll(key, dataList);</span><br><span class="line">        <span class="keyword">return</span> count == <span class="literal">null</span> ? <span class="number">0</span> : count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得缓存的list对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存的键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 缓存键值对应的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">getCacheList</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForList().range(key, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存Set</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key 缓存键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataSet 缓存的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 缓存数据的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; BoundSetOperations&lt;String, T&gt; <span class="title function_">setCacheSet</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> Set&lt;T&gt; dataSet)</span></span><br><span class="line">    &#123;</span><br><span class="line">        BoundSetOperations&lt;String, T&gt; setOperation = redisTemplate.boundSetOps(key);</span><br><span class="line">        Iterator&lt;T&gt; it = dataSet.iterator();</span><br><span class="line">        <span class="keyword">while</span> (it.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            setOperation.add(it.next());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> setOperation;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得缓存的set</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; Set&lt;T&gt; <span class="title function_">getCacheSet</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForSet().members(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存Map</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataMap</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setCacheMap</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> Map&lt;String, T&gt; dataMap)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (dataMap != <span class="literal">null</span>) &#123;</span><br><span class="line">            redisTemplate.opsForHash().putAll(key, dataMap);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得缓存的Map</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; Map&lt;String, T&gt; <span class="title function_">getCacheMap</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 往Hash中存入数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hKey Hash键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value 值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setCacheMapValue</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> String hKey, <span class="keyword">final</span> T value)</span></span><br><span class="line">    &#123;</span><br><span class="line">        redisTemplate.opsForHash().put(key, hKey, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取Hash中的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hKey Hash键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Hash中的对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; T <span class="title function_">getCacheMapValue</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> String hKey)</span></span><br><span class="line">    &#123;</span><br><span class="line">        HashOperations&lt;String, String, T&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">        <span class="keyword">return</span> opsForHash.get(key, hKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取多个Hash中的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hKeys Hash键集合</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Hash对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; List&lt;T&gt; <span class="title function_">getMultiCacheMapValue</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> Collection&lt;Object&gt; hKeys)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().multiGet(key, hKeys);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除Hash中的某条数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key Redis键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hKey Hash键</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否成功</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteCacheMapValue</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> String hKey)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForHash().delete(key, hKey) &gt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获得缓存的基本对象列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern 字符串前缀</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 对象列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;String&gt; <span class="title function_">keys</span><span class="params">(<span class="keyword">final</span> String pattern)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.keys(pattern);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这段代码是一个名为<code>RedisCache</code>的实用类，它使用Spring Data Redis库提供了与Redis缓存交互的各种方法。让我们简单介绍一下这段代码的功能：</p>
<ol>
<li>
<p><code>setCacheObject</code>：该方法允许你缓存基本对象，如整数、字符串或任何其他实体类。它会将给定键的值设置到Redis缓存中。</p>
</li>
<li>
<p><code>setCacheObject</code>（带超时）：该方法与前一个方法类似，但它还允许你为缓存对象指定超时时间。在指定的超时时间后，对象将自动过期并从缓存中删除。</p>
</li>
<li>
<p><code>expire</code>：该方法设置Redis缓存中键的过期时间。你可以指定超时值和时间单位（例如秒、分钟等）。如果成功设置了过期时间，则返回true。</p>
</li>
<li>
<p><code>getExpire</code>：该方法返回Redis缓存中键的剩余存活时间（过期时间）。</p>
</li>
<li>
<p><code>hasKey</code>：该方法检查Redis缓存中是否存在某个键。如果键存在，则返回true；否则返回false。</p>
</li>
<li>
<p><code>getCacheObject</code>：该方法根据给定的键从Redis缓存中检索缓存的对象。</p>
</li>
<li>
<p><code>deleteObject</code>：该方法根据给定的键从Redis缓存中删除单个对象。</p>
</li>
<li>
<p><code>deleteObject</code>（集合）：该方法根据给定的键集合从Redis缓存中删除多个对象。</p>
</li>
<li>
<p><code>setCacheList</code>：该方法将一个对象列表缓存到与给定键相关联的Redis缓存中。它返回添加到列表中的对象数量。</p>
</li>
<li>
<p><code>getCacheList</code>：该方法根据给定的键从Redis缓存中检索缓存的对象列表。</p>
</li>
<li>
<p><code>setCacheSet</code>：该方法将一个对象集合缓存到与给定键相关联的Redis缓存中。它返回与键相关的缓存数据对象。</p>
</li>
<li>
<p><code>getCacheSet</code>：该方法根据给定的键从Redis缓存中检索缓存的集合对象。</p>
</li>
<li>
<p><code>setCacheMap</code>：该方法将一个Map缓存到与给定键相关联的Redis缓存中。</p>
</li>
<li>
<p><code>getCacheMap</code>：该方法根据给定的键从Redis缓存中检索缓存的Map对象。</p>
</li>
<li>
<p><code>setCacheMapValue</code>：该方法将数据存储到Redis缓存的哈希表中。</p>
</li>
<li>
<p><code>getCacheMapValue</code>：该方法从Redis缓存的哈希表中获取数据。</p>
</li>
<li>
<p><code>getMultiCacheMapValue</code>：该方法从Redis缓存的哈希表中获取多个数据。</p>
</li>
<li>
<p><code>deleteCacheMapValue</code>：该方法从Redis缓存的哈希表中删除某个数据。</p>
</li>
<li>
<p><code>keys</code>：该方法根据给定的模式获取Redis缓存中的键集合。</p>
</li>
</ol>
<p>总之，这段代码封装了一些常用的Redis缓存操作方法，方便在Spring应用中进行缓存操作。</p>
<p>在上面的代码中，Redis的作用是作为缓存存储。它提供了一种快速、可扩展的方式来存储和获取数据，以减少对后端数据源（例如数据库）的访问。</p>
<p>具体来说，<code>RedisCache</code>类中的各个方法利用Spring Data Redis库与Redis缓存进行交互，实现了以下功能：</p>
<ol>
<li>
<p><code>setCacheObject</code>和<code>setCacheObject</code>（带超时）方法用于将对象缓存到Redis中。这可以提高后续对该对象的读取速度，避免重复计算或数据库查询。</p>
</li>
<li>
<p><code>expire</code>方法设置Redis缓存中键的过期时间。通过设置过期时间，可以确保缓存数据在一段时间后自动过期，从而避免缓存过时或占用过多内存。</p>
</li>
<li>
<p><code>getCacheObject</code>方法用于从Redis缓存中获取缓存的对象。如果缓存中存在该对象，则可以直接从Redis中获取，而无需执行其他操作。</p>
</li>
<li>
<p><code>deleteObject</code>和<code>deleteObject</code>（集合）方法用于从Redis缓存中删除对象。当数据发生变化或不再需要缓存时，可以使用这些方法清除缓存数据。</p>
</li>
<li>
<p><code>setCacheList</code>和<code>getCacheList</code>方法用于缓存和获取列表对象。这可以在需要缓存一组相关数据时使用，例如最新的文章列表或用户的历史记录。</p>
</li>
<li>
<p><code>setCacheSet</code>和<code>getCacheSet</code>方法用于缓存和获取集合对象。这可以用于存储唯一值的集合，如用户的标签或商品的分类。</p>
</li>
<li>
<p><code>setCacheMap</code>、<code>getCacheMap</code>、<code>setCacheMapValue</code>、<code>getCacheMapValue</code>、<code>getMultiCacheMapValue</code>和<code>deleteCacheMapValue</code>方法用于缓存和获取哈希表对象。这可以用于存储和查询具有键值对结构的数据。</p>
</li>
</ol>
<p>通过使用Redis作为缓存存储，可以大大提高应用程序的性能和响应速度，减轻后端数据源的负载，并提供更好的用户体验。</p>
<p>没有看到调用mysql是不是因为这个项目使用了UsernamePasswordAuthenticationToken</p>
<p><code>UsernamePasswordAuthenticationToken</code>是Spring Security框架中的一个类，用于表示基于用户名和密码的身份认证信息。</p>
<p>在身份验证过程中，用户通常会提供用户名和密码作为凭据进行认证。<code>UsernamePasswordAuthenticationToken</code>就是用来封装这些凭据信息的。</p>
<p>它是<code>AbstractAuthenticationToken</code>类的子类，该类提供了身份验证相关的基本功能。<code>UsernamePasswordAuthenticationToken</code>包含以下属性：</p>
<ul>
<li><code>principal</code>：表示身份验证的主体，通常是用户名或用户对象。</li>
<li><code>credentials</code>：表示凭据，通常是用户提供的密码或其他认证信息。</li>
<li><code>authorities</code>：表示用户的权限列表，通常是用户具有的角色或权限。</li>
</ul>
<p><code>UsernamePasswordAuthenticationToken</code>对象可以在身份验证过程中进行传递和处理，以便在认证提供者（AuthenticationProvider）中进行验证和授权操作。</p>
<p>在Spring Security的配置中，可以通过配置适当的<code>AuthenticationProvider</code>来处理<code>UsernamePasswordAuthenticationToken</code>对象，并根据提供的用户名和密码进行身份验证和授权操作。</p>
]]></content>
      <tags>
        <tag>大数据分析</tag>
        <tag>淘宝美妆数据</tag>
      </tags>
  </entry>
  <entry>
    <title>解决行内公式渲染</title>
    <url>/2024/04/23/%E8%A7%A3%E5%86%B3%E8%A1%8C%E5%86%85%E5%85%AC%E5%BC%8F%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>黑暗之魂3的mod基础知识</title>
    <url>/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h3 id="工具介绍">工具介绍</h3>
<table>
<thead>
<tr>
<th>工具名称</th>
<th>介绍</th>
<th>连接</th>
</tr>
</thead>
<tbody>
<tr>
<td>UXM</td>
<td>对于游戏本体的解包打包</td>
<td><a href="https://github.com/JKAnderson/UXM">https://github.com/JKAnderson/UXM</a></td>
</tr>
<tr>
<td>Yabber</td>
<td>对以及uxm解包后的文件再次解包例如dcx</td>
<td><a href="https://github.com/JKAnderson/Yabber">https://github.com/JKAnderson/Yabber</a></td>
</tr>
<tr>
<td>yapped</td>
<td>对于参数文件的修改</td>
<td><a href="https://github.com/JKAnderson/Yapped">https://github.com/JKAnderson/Yapped</a></td>
</tr>
<tr>
<td>Noesis</td>
<td>用于转换文件格式，将 .flevr 转为 .fbx 查看模型文件</td>
<td></td>
</tr>
<tr>
<td>FLVER_Editor</td>
<td>用于编辑 .flevr 模型文件</td>
<td><a href="https://github.com/asasasasasbc/FLVER_Editor">https://github.com/asasasasasbc/FLVER_Editor</a></td>
</tr>
<tr>
<td>DSAnimStudio</td>
<td>用于编辑查看 .TAE 动画文件</td>
<td><a href="https://github.com/Meowmaritus/DSAnimStudio">https://github.com/Meowmaritus/DSAnimStudio</a></td>
</tr>
<tr>
<td>DSLua</td>
<td>用于反编译二进制 Lua 文件</td>
<td><a href="https://github.com/katalash/DSLuaDecompiler">https://github.com/katalash/DSLuaDecompiler</a></td>
</tr>
<tr>
<td>BloodborneTools</td>
<td>将 .flver 文件解包获得 .smd 与 .ascii 格式</td>
<td><a href="https://github.com/openborne/bbtools">https://github.com/openborne/bbtools</a>)</td>
</tr>
<tr>
<td>FromSoftware-Blender-Importer</td>
<td>用于将 .dcx 格式的模型导入 Blender 的插件</td>
<td><a href="https://github.com/FelixBenter/FromSoftware-Blender-Importer">https://github.com/FelixBenter/FromSoftware-Blender-Importer</a></td>
</tr>
<tr>
<td>Havok Content Tools</td>
<td>将动画资源格式进行转换（暂时不支持法环资源）</td>
<td></td>
</tr>
<tr>
<td>HavorkMax</td>
<td>3DsMax 插件，用于将解包的动画文件导入（不支持法环的 2018 havok 动画资源，需要降版本至 2014 及以下）</td>
<td><a href="https://github.com/PredatorCZ/HavokMax">https://github.com/PredatorCZ/HavokMax</a></td>
</tr>
<tr>
<td>blender</td>
<td>与FromSoftware-Blender-Importer搭配使用</td>
<td></td>
</tr>
</tbody>
</table>
<p>1、UXM 做什么的第一步都是先拿UXM解包，法环玩家应该不少人都用过<br>
2、Yabber UXM拆出来的文件很多都需要用Yabber进一步解包，也可以把修改之后的文件打包回去<br>
3、BinderTool 解包UI贴图文件需要用<br>
4、BloodBorne model 用来转换模型解包出来的flver文件格式，拆出来的ascii和smd文件可以用blender打开<br>
5、DSLuaDecompiler AI脚本lua文件的反编译工具，想读解包出来的脚本要先用这个<br>
6、音频提取工具 ww2ogg、bnkextr、dragonupk，都是通用的工具</p>
<h4 id="uxm的介绍">uxm的介绍</h4>
<p>umx是对游戏的打包文件进行解包的</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1387628190.png" alt="image2022-4-8_14-22-30.png"></p>
<p>解包出来的游戏文件具有一定的目录结构</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/587758792.png" alt></p>
<p>解包出来的文件还需要yabber进行进一步的解包</p>
<h4 id="yabber的使用">yabber的使用</h4>
<p>如同之前所说的uxm解包出来的文件还需要进一步解包这时候就需要yabber</p>
<p>yabber会将dcx进行解包</p>
<h3 id="对脚本的解包">对脚本的解包</h3>
<ol>
<li>首先使用uxm解包本体文件</li>
<li>再找到script文件夹其中有很多的dcx文件<br>
<img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3250029018.png" alt></li>
<li>再使用yabber解包dcx 会得到 .lua .luagnl .luainfo 三份文件</li>
<li>我们需要使用dslua进行反编译</li>
</ol>
<h3 id="解包人物模型">解包人物模型</h3>
<p>注意虽然虽然几乎所有uxm文件夹中的文件都是dcx 但是他们被yabber解包出来的文件是不同的</p>
<p>比如之前的脚本就是解压出来 .lua .luagnl .luainfo 三份文件</p>
<p>而地图和人物会解压出flvre文件</p>
<p>脚本文件解包</p>
<p>找到 script 文件夹，将所有 .dcx 文件选中后拖拽至 Yabber 上<br>
<img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3250029018-1716617729191-7.png" alt="image2022-4-8_14-52-44.png" title="image2022-4-8_14-52-44.png"></p>
<p>现在每一份 .dcx 文件都被提取出了 .lua .luagnl .luainfo 三份文件，我们将所有 .lua 文件复制出来放到一个文件夹内</p>
<p>接下来需要对 .lua 文件进行反编译，将 .lua 文件默认打开方式改为 DSLuaDecompiler.exe ，在 DSLua 文件夹下即可找到，反编译后的文件名末位会出现 .dec 字段，现在修改打开方式为你的 IDE 工具便可以查看脚本源码</p>
<p>通过查看 goal_list.dec 文件可以找到对应的脚本编号</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3942156668.png" alt="image2022-4-8_15-18-33.png" title="image2022-4-8_15-18-33.png"></p>
<h2 id="解包场景模型">解包场景模型</h2>
<p>找到 map 文件夹，里面 m10、m11、m12… 中包含地图关卡模型，目前未找到编号与关卡的对应表，只能逐个测试<br>
我们打开 m10 → m10_00_00_00，这里包含了史东薇尔城的相关模型，将所有 .mapbnd.dcx 拖拽到 Yabber 工具上进行解包</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4017343603.png" alt="image2022-4-8_15-36-54.png" title="image2022-4-8_15-36-54.png"></p>
<p>每个 .dcx 都提取出了 .flver 与 .grass 文件，我们将所有 .flver 文件复制到一个新文件夹下，将 .flver 文件默认打开方式改为 BloodBorne_model_v3.exe，在 BloodborneToolsByDaemon 文件夹下可以找到</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3202323808.png" alt="image2022-4-8_15-43-29.png" title="image2022-4-8_15-43-29.png"></p>
<p>再将 Flver2Smd&amp;Ascii.bat 文件复制到刚才新文件夹的根目录下，运行该文件对 .flver 文件进行批处理<img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/877472753.png" alt="image2022-4-8_15-45-42.png" title="image2022-4-8_15-45-42.png"></p>
<p>现在我们通过 .flver 获得到了一份 .smd 文件，一份 . ascii 文件</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1513482028.png" alt="image2022-4-8_15-47-25.png" title="image2022-4-8_15-47-25.png"></p>
<p>打开 Noesis.exe 应用，将 .flver 转为我们引擎可以使用的 .fbx 格式<br>
找到刚才新文件夹的根目录，点击 Tools → Batch Process 进行格式转换<br>
这里点击 FLVER 文件可以预览模型，但会出现下图中线条乱飞的情况，选择 ASCII 格式的文件可以看到修复后的效果</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2682405446.png" alt="image2022-4-8_15-54-26.png" title="image2022-4-8_15-54-26.png"></p>
<p>将输出格式改为 fbx，点击 Folder batch 选择输出路径，最后点击 Export 进行导出</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1298374204.png" alt="image2022-4-8_15-59-8.png" title="image2022-4-8_15-59-8.png"></p>
<p>现在我们获取到了 .fbx 格式的文件，导入到引擎中看一下效果</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1014267344.png" alt="image2022-4-8_16-7-28.png" title="image2022-4-8_16-7-28.png"></p>
<h2 id="解包角色动画">解包角色动画</h2>
<p>打开 DS ANIM STUDIO.exe（在 PATREON_DSAS_4.0.1.1_BETA 文件夹下），确保软件版本在 4.0 及以上，运行环境需要 <strong>.NET 5.0</strong></p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3151128056.png" alt="image2022-4-8_16-18-40.png" title="image2022-4-8_16-18-40.png"></p>
<p>点击 File → Open ，找到本体解包后目录下的 chr ，打开任一后缀为 .anibnd.dcx 的文件，确保前面仅有 c0000 数字组合，如：c2010.anibnd.dcx</p>
<p>通过查看 goal_list.dec 文件中前四位数字可以找到对应角色动画</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3942156668.png" alt="image2022-4-8_15-18-33.png" title="image2022-4-8_15-18-33.png"></p>
<p>打开 .anibnd.dcx 后会提示我们选择模型文件，我们找到相同编号的 .chrbnd.dcx 文件</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3302455753.png" alt="image2022-4-8_16-28-22.png" title="image2022-4-8_16-28-22.png"></p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2208238532.png" alt="image2022-4-8_16-28-22.png" title="image2022-4-8_16-28-22.png"></p>
<p>现在可以在 DS ANIM STUDIO 中看到动画事件并可以直接进行编辑</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/911709665.png" alt=")P`}VF)XCBY_@)$IFU59WWI.png"></p>
<h3 id="将动画格式转为-fbx-的方法">将动画格式转为 fbx 的方法</h3>
<p>由于老头环导出的动画文件为 havok 2018 版本，目前插件并不支持导入，需要降版本至 2014 及以下才能导入<br>
最新的 DSAnim 4.1 版本加入了降版本工具，可以将动画将至 2010.2 的 .hkx 文件</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/606870266.png" alt="image2022-4-21_14-4-57.png" title="image2022-4-21_14-4-57.png"></p>
<p>使用 3DMax 导入插件，在 3DMax 中进行格式转换</p>
<blockquote>
<p>插件地址：<a href="https://github.com/PredatorCZ/HavokMax">https://github.com/PredatorCZ/HavokMax</a> 插件安装方法：将下载好的 .dlu<br>
文件放置在根目录下的 Plugins 文件夹内后重启软件即可</p>
</blockquote>
<p>在 3DMax 中选择 File → Import → Import，找到 skeleton.hkx 骨骼文件打开</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4157171248.png" alt="image2022-4-21_14-10-22.png" title="image2022-4-21_14-10-22.png"></p>
<p>导入轴向按照下图所示</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3238904070.png" alt="image2022-4-21_14-11-10.png" title="image2022-4-21_14-11-10.png"></p>
<p>现在已经导入了我们的骨骼，接下来按照相同的流程，导入 .hkx 的动画文件，具体动画对应可以在 DSAnim 中进行预览</p>
<p><img src="/2024/05/25/%E9%BB%91%E6%9A%97%E4%B9%8B%E9%AD%823%E7%9A%84mod%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1865291674.png" alt="image2022-4-21_14-13-32.png" title="image2022-4-21_14-13-32.png"></p>
<p>导出时选择：File → Export → Export ，选择想要的格式导出即可<br>
由于没有导入模型，想要在引擎中看到表现效果需要自行蒙皮或重定向</p>
]]></content>
      <categories>
        <category>游戏</category>
      </categories>
      <tags>
        <tag>黑魂</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
</search>
